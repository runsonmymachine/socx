start ROM SpuRomRadioModeForTxLv		// index: 6861, table index: 0
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_108        HWS_RADIO_MODE        1    // 0x82ac
end SpuRomRadioModeForTxLv

start ROM SpuRomRadioInitForTxLv		// index: 6862, table index: 1
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_88        ISP_FLEXDMA_SRC        1    // 0xc018
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_64        ISP_FLEXDMA_SRC        1    // 0xc000
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x45                       // 0xa2b8
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForTxLv

start ROM SpuRomRadioModeForTxHv		// index: 6865, table index: 2
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_109        HWS_RADIO_MODE        1    // 0x82ad
end SpuRomRadioModeForTxHv

start ROM SpuRomRadioInitForTxHv		// index: 6866, table index: 3
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_89        ISP_FLEXDMA_SRC        1    // 0xc019
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_65        ISP_FLEXDMA_SRC        1    // 0xc001
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x43                       // 0xa1b8
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForTxHv

start ROM SpuRomRadioModeForSymCalibLv		// index: 6869, table index: 4
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_110        HWS_RADIO_MODE        1    // 0x82ae
end SpuRomRadioModeForSymCalibLv

start ROM SpuRomRadioInitForSymCalibLv		// index: 6870, table index: 5
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_90        ISP_FLEXDMA_SRC        1    // 0xc01a
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_66        ISP_FLEXDMA_SRC        1    // 0xc002
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x43                       // 0xa1b8
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForSymCalibLv

start ROM SpuRomRadioModeForSymCalibHv		// index: 6873, table index: 6
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_111        HWS_RADIO_MODE        1    // 0x82af
end SpuRomRadioModeForSymCalibHv

start ROM SpuRomRadioInitForSymCalibHv		// index: 6874, table index: 7
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_91        ISP_FLEXDMA_SRC        1    // 0xc01b
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_67        ISP_FLEXDMA_SRC        1    // 0xc003
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x41                       // 0xa0b8
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForSymCalibHv

start ROM SpuRomRadioModeForLoCalibLv		// index: 6877, table index: 8
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_112        HWS_RADIO_MODE        1    // 0x82b0
end SpuRomRadioModeForLoCalibLv

start ROM SpuRomRadioInitForLoCalibLv		// index: 6878, table index: 9
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_92        ISP_FLEXDMA_SRC        1    // 0xc01c
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_68        ISP_FLEXDMA_SRC        1    // 0xc004
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x48                       // 0xa438
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForLoCalibLv

start ROM SpuRomRadioModeForLoCalibHv		// index: 6881, table index: 10
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_113        HWS_RADIO_MODE        1    // 0x82b1
end SpuRomRadioModeForLoCalibHv

start ROM SpuRomRadioInitForLoCalibHv		// index: 6882, table index: 11
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_93        ISP_FLEXDMA_SRC        1    // 0xc01d
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_69        ISP_FLEXDMA_SRC        1    // 0xc005
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x48                       // 0xa438
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForLoCalibHv

start ROM SpuRomRadioModeForMeasureLv		// index: 6885, table index: 12
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_114        HWS_RADIO_MODE        1    // 0x82b2
end SpuRomRadioModeForMeasureLv

start ROM SpuRomRadioInitForMeasureLv		// index: 6886, table index: 13
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_94        ISP_FLEXDMA_SRC        1    // 0xc01e
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_70        ISP_FLEXDMA_SRC        1    // 0xc006
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x48                       // 0xa438
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForMeasureLv

start ROM SpuRomRadioModeForMeasureHv		// index: 6889, table index: 14
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_115        HWS_RADIO_MODE        1    // 0x82b3
end SpuRomRadioModeForMeasureHv

start ROM SpuRomRadioInitForMeasureHv		// index: 6890, table index: 15
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_95        ISP_FLEXDMA_SRC        1    // 0xc01f
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_71        ISP_FLEXDMA_SRC        1    // 0xc007
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x48                       // 0xa438
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForMeasureHv

start ROM SpuRomRadioModeForMeasureLC		// index: 6893, table index: 16
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_116        HWS_RADIO_MODE        1    // 0x82b4
end SpuRomRadioModeForMeasureLC

start ROM SpuRomRadioInitForMeasureLC		// index: 6894, table index: 17
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_96        ISP_FLEXDMA_SRC        1    // 0xc020
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_72        ISP_FLEXDMA_SRC        1    // 0xc008
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x42                       // 0xa138
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForMeasureLC

start ROM SpuRomRadioModeForTempSensLv		// index: 6897, table index: 18
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_117        HWS_RADIO_MODE        1    // 0x82b5
end SpuRomRadioModeForTempSensLv

start ROM SpuRomRadioInitForTempSensLv		// index: 6898, table index: 19
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_97        ISP_FLEXDMA_SRC        1    // 0xc021
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_73        ISP_FLEXDMA_SRC        1    // 0xc009
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x4a                       // 0xa538
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForTempSensLv

start ROM SpuRomRadioModeForRcSensCap		// index: 6901, table index: 20
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_118        HWS_RADIO_MODE        1    // 0x82b6
end SpuRomRadioModeForRcSensCap

start ROM SpuRomRadioInitForRcSensCap		// index: 6902, table index: 21
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_98        ISP_FLEXDMA_SRC        1    // 0xc022
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_74        ISP_FLEXDMA_SRC        1    // 0xc00a
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x47                       // 0xa3b8
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForRcSensCap

start ROM SpuRomRadioModeForRcSensRes		// index: 6905, table index: 22
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_119        HWS_RADIO_MODE        1    // 0x82b7
end SpuRomRadioModeForRcSensRes

start ROM SpuRomRadioInitForRcSensRes		// index: 6906, table index: 23
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_99        ISP_FLEXDMA_SRC        1    // 0xc023
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_75        ISP_FLEXDMA_SRC        1    // 0xc00b
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x48                       // 0xa438
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForRcSensRes

start ROM SpuRomRadioModeForLoDivSymLv		// index: 6909, table index: 24
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_120        HWS_RADIO_MODE        1    // 0x82b8
end SpuRomRadioModeForLoDivSymLv

start ROM SpuRomRadioInitForLoDivSymLv		// index: 6910, table index: 25
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_100        ISP_FLEXDMA_SRC        1   // 0xc024
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_76        ISP_FLEXDMA_SRC        1    // 0xc00c
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x49                       // 0xa4b8
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForLoDivSymLv

start ROM SpuRomRadioModeForLoDivSymHv		// index: 6913, table index: 26
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_121        HWS_RADIO_MODE        1    // 0x82b9
end SpuRomRadioModeForLoDivSymHv

start ROM SpuRomRadioInitForLoDivSymHv		// index: 6914, table index: 27
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_101        ISP_FLEXDMA_SRC        1   // 0xc025
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_77        ISP_FLEXDMA_SRC        1    // 0xc00d
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x49                       // 0xa4b8
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForLoDivSymHv

start ROM SpuRomRadioModeForLoVrefVbpCalibLv		// index: 6917, table index: 28
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_122        HWS_RADIO_MODE        1    // 0x82ba
end SpuRomRadioModeForLoVrefVbpCalibLv

start ROM SpuRomRadioInitForLoVrefVbpCalibLv		// index: 6918, table index: 29
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_102        ISP_FLEXDMA_SRC        1   // 0xc026
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_78        ISP_FLEXDMA_SRC        1    // 0xc00e
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x44                       // 0xa238
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForLoVrefVbpCalibLv

start ROM SpuRomRadioModeForLoVrefVbpCalibHv		// index: 6921, table index: 30
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_123        HWS_RADIO_MODE        1    // 0x82bb
end SpuRomRadioModeForLoVrefVbpCalibHv

start ROM SpuRomRadioInitForLoVrefVbpCalibHv		// index: 6922, table index: 31
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_103        ISP_FLEXDMA_SRC        1   // 0xc027
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_79        ISP_FLEXDMA_SRC        1    // 0xc00f
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x44                       // 0xa238
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForLoVrefVbpCalibHv

start ROM SpuRomRadioModeForTxlvDFmeas		// index: 6925, table index: 32
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_124        HWS_RADIO_MODE        1    // 0x82bc
end SpuRomRadioModeForTxlvDFmeas

start ROM SpuRomRadioInitForTxlvDFmeas		// index: 6926, table index: 33
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_104        ISP_FLEXDMA_SRC        1   // 0xc028
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_80        ISP_FLEXDMA_SRC        1    // 0xc010
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x41                       // 0xa0b8
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForTxlvDFmeas

start ROM SpuRomRadioModeForTxhvDFmeas		// index: 6929, table index: 34
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_125        HWS_RADIO_MODE        1    // 0x82bd
end SpuRomRadioModeForTxhvDFmeas

start ROM SpuRomRadioInitForTxhvDFmeas		// index: 6930, table index: 35
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_105        ISP_FLEXDMA_SRC        1   // 0xc029
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_81        ISP_FLEXDMA_SRC        1    // 0xc011
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x40                       // 0xa038
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForTxhvDFmeas

start ROM SpuRomRadioModeForRng_lo		// index: 6933, table index: 36
    DMAON 27 5                                                   // 0x58bb
    DMA        ROM_MCU_ROM_126        HWS_RADIO_MODE        1    // 0x82be
end SpuRomRadioModeForRng_lo

start ROM SpuRomRadioInitForRng_lo		// index: 6934, table index: 37
    DMAON 1 7                                                    // 0x58e1
    DMA        ISP_SWSPAD_00        ISP_LATCH_MEM_26    4        // 0xde80
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_106        ISP_FLEXDMA_SRC        1   // 0xc02a
    DMAON 31 1                                                   // 0x583f
    DMA        ISP_FLEXDMA_SRC        ISP_SWSPAD_00        4     // 0xd800
    DMAON 27 15                                                  // 0x59fb
    DMA        ROM_MCU_ROM_82        ISP_FLEXDMA_SRC        1    // 0xc012
    SETBAR 0 16                                                  // 0x5f00
    STRI    ISP_LATCH_MEM_30_0        0x45                       // 0xa2b8
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioInitForRng_lo

start ROM SpuRomMemCopyRadioInit		// index: 6937, table index: 38
    DMAON 31 7                                                   // 0x58ff
    DMA ISP_flexdma_src ISP_LATCH_MEM_0 8                        // 0x7800
    DMA 8 ISP_LATCH_MEM_8 8                                      // 0xfa08
    SETBAR 0 9                                                   // 0x5e90
    STRI ISP_flexdma_src_0 00                                    // 0x8000
    STRI ISP_flexdma_src_1 02                                    // 0x8101
    STRI ISP_flexdma_src_2 02                                    // 0x8102
    STRI ISP_flexdma_src_3 40                                    // 0xa003
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomMemCopyRadioInit

start ROM SpuRomRadioInit		// index: 6940, table index: 39
    SETBAR 0 16                                                  // 0x5f00
    LDR ISP_LATCH_MEM_30_0 R1                                    // 0x54b8
    SETBAR 0 9                                                   // 0x5e90
    LDR ISP_FLEXDMA_SRC_0 R3                                     // 0x5580 (flexdma_src: 8:0 ,)
    SHIFTI R2 R1 02 0                                            // 0x4826
    ADD R3 R3 R2                                                 // 0x416f
    SETBNK 2 9                                                   // 0x5e92
    STR ISP_flexdma_src_0 R3                                     // 0x5780
    DMAON 31 5                                                   // 0x58bf
    DMA ISP_flexdma_src HWS_rdi_controls 1                       // 0xc300
    LDRA R1 R0                                                   // 0x6601
    TIMER R0_TIMER MUL_BY_2                                      // 0x6200
    EVCMD SPU_TIMER_DONE CLR_EV_DISABLE WFE_ENABLE               // 0x6161
    ADDI R1 1 R1                                                 // 0x7e03
    REG R0 0x4                                                   // 0x4208
    ADD R3 R3 R0                                                 // 0x414f
    REG R0 0x50                                                  // 0x42a0
    SBNEQ next_vector                                            // 0x5b2b
     DMAON 7 1                                                   // 0x5827
     DMA ISP_LATCH_MEM_26 ISP_SWSPAD_00 4                        // 0x981a
end SpuRomRadioInit

start ROM SpuRomHwsLinkPreJump		// index: 6945, table index: 40
    SETBNK 2 1                                                   // 0x5e12
    LDR HWS_HWS_PC_3 R0                                          // 0x542b (Reserved_31_26: 6:2 ,net_rrt_sel: 1:1 ,rrt_rd_cntr: 8:0 ,)
    REG R1 4                                                     // 0x4209
    ANDI R0 2 R0                                                 // 0x7004
    OR R0 R1 R0                                                  // 0x4044
    MOV R3 R0                                                    // 0x4603
    SBEQ jumpFromRrt                                             // 0x5a14
        LDR HWS_HWS_PC_0 R0                                      // 0x5428 (net_rd_index: 8:0 ,)
        ADDI R0 2 R0                                             // 0x7c04
        MOV R1 R0                                                // 0x4601
        SBEQ writeRdIndex                                        // 0x5a30
        LDR HWS_HWS_PC_2 R0                                      // 0x542a (rrt_rd_cntr: 7:1 ,rrt_rd_index: 8:0 ,)
        ANDI R0 1 R0                                             // 0x7002
        MOV R2 R0                                                // 0x4602
        LDR HWS_HWS_PC_1 R0                                      // 0x5429 (rrt_rd_index: 8:0 ,)
        ADDI R0 2 R0                                             // 0x7c04
        REG R1 1                                                 // 0x4203
        SBGT setRrtIndexMsb                                      // 0x5a0e
        REG R1 1                                                 // 0x4203
        OR R2 R2 R1                                              // 0x405a
        OR R2 R3 R2                                              // 0x406e
        STR ISP_SWSPAD_10_3 R2                                   // 0x576b (lo_vbp_rx_ctl_ch39: 5:3 ,srr_hws_jump_link_valid: 1:2 ,srr_net_rrt_sel: 1:1 ,srr_rrt_rd_index_msb: 1:0 ,)
        STR ISP_SWSPAD_10_2 R0                                   // 0x166a (exception_jump_offset: 8:0 ,)
        AND R0 R0 R0                                             // 0x0000
end SpuRomHwsLinkPreJump

start ROM SpuRomHwsLinkPostJump		// index: 6951, table index: 41
    SETBAR 2 0                                                   // 0x5e02
    LDR ISP_SWSPAD_10_3 R0                                       // 0x546b (lo_vbp_rx_ctl_ch39: 5:3 ,srr_hws_jump_link_valid: 1:2 ,srr_net_rrt_sel: 1:1 ,srr_rrt_rd_index_msb: 1:0 ,)
    ANDI R1 6 R0                                                 // 0x700d
    REG R1 4                                                     // 0x4209
    SBLT notValid                                                // 0x5a59
    REG R1 5                                                     // 0x420b
    SBGT returnTNet                                              // 0x5a3e
        LDR ISP_SWSPAD_10_2 R0                                   // 0x546a (exception_jump_offset: 8:0 ,)
        SETBAR 0 0                                               // 0x5e00
        STR HWS_HRR7_1 R0                                        // 0x565d (hrr_rrt_rd_index: 8:0 ,)
        SETBAR 2 0                                               // 0x5e02
        LDR ISP_SWSPAD_10_3 R0                                   // 0x546b (lo_vbp_rx_ctl_ch39: 5:3 ,srr_hws_jump_link_valid: 1:2 ,srr_net_rrt_sel: 1:1 ,srr_rrt_rd_index_msb: 1:0 ,)
        ANDI R0 0x1 R0                                           // 0x7002
        SHIFTI R0 R0 0x0 1                                       // 0x4900
        SETBAR 0 0                                               // 0x5e00
        LDR HWS_HRR7_2 R1                                        // 0x54de (hrr_rrt_rd_cntr: 7:1 ,hrr_rrt_rd_index: 8:0 ,)
        ANDI R1 0xFE R1                                          // 0x73fd
        OR R0 R1 R0                                              // 0x4044
        STR HWS_HRR7_2 R0                                        // 0x565e (hrr_rrt_rd_cntr: 7:1 ,hrr_rrt_rd_index: 8:0 ,)
        MOV R0 R1                                                // 0x4604
        SBEQ updateHwsState                                      // 0x5a10
        SETBNK 0 0                                               // 0x5e00
        LDR HWS_HRR7_0 R0                                        // 0x545c (hrr_net_rd_index: 8:0 ,)
        STR HWS_HRR7_0 R0                                        // 0x565c (hrr_net_rd_index: 8:0 ,)
        REG2 R1 0xc                                              // 0x5c19
        SETCLR 0 R1 HWS_HRR7_3                                   // 0x2b7e (hrr_awdt_soft_th: 2:6 ,hrr_awdt_hard_th: 2:4 ,hrr_hws_hrr_state: 2:2 ,hrr_net_rrt_sel: 1:1 ,hrr_rrt_rd_cntr: 8:0 ,)
end SpuRomHwsLinkPostJump

start ROM SpuRomExceptionHandler		// index: 6958, table index: 42
    SETBNK 3 0                                                   // 0x5e03
    LDR HWS_EXCPHNDLR_2 R0                                       // 0x540a (Reserved_23_23: 1:7 ,awdt_exception_cause_status: 1:6 ,rwdt_exception_cause_status: 1:5 ,nrgdet_exception_cause_status: 1:4 ,timer_exception_cause_status: 1:3 ,Reserved_18_3: 8:0 ,)
    ANDI R0 0x8 R0                                               // 0x7010
    SHIFTI R0 R0 0x3 1                                           // 0x4930
    MOV R2 R0                                                    // 0x4602
    LDR ISP_SWSPAD_21_3 R1                                       // 0x54d7 (awdt_exception_cause_status: 1:7 ,rwdt_exception_cause_status: 1:6 ,nrgdet_exception_cause_status: 1:5 ,timer_exception_cause_status: 1:4 ,aux_meas_ch_ctr: 4:0 ,)
    ANDI R1 0xef R1                                              // 0x73df
    SHIFTI R0 R0 0x4 0                                           // 0x4840
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    STR ISP_SWSPAD_21_3 R1                                       // 0x56d7 (awdt_exception_cause_status: 1:7 ,rwdt_exception_cause_status: 1:6 ,nrgdet_exception_cause_status: 1:5 ,timer_exception_cause_status: 1:4 ,aux_meas_ch_ctr: 4:0 ,)
    LDR HWS_EXCPHNDLR_2 R0                                       // 0x540a (Reserved_23_23: 1:7 ,awdt_exception_cause_status: 1:6 ,rwdt_exception_cause_status: 1:5 ,nrgdet_exception_cause_status: 1:4 ,timer_exception_cause_status: 1:3 ,Reserved_18_3: 8:0 ,)
    ANDI R0 0x10 R0                                              // 0x7020
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    LDR ISP_SWSPAD_21_3 R1                                       // 0x54d7 (awdt_exception_cause_status: 1:7 ,rwdt_exception_cause_status: 1:6 ,nrgdet_exception_cause_status: 1:5 ,timer_exception_cause_status: 1:4 ,aux_meas_ch_ctr: 4:0 ,)
    ANDI R1 0xdf R1                                              // 0x73bf
    SHIFTI R0 R0 0x5 0                                           // 0x4850
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x5 1                                           // 0x4950
    STR ISP_SWSPAD_21_3 R1                                       // 0x56d7 (awdt_exception_cause_status: 1:7 ,rwdt_exception_cause_status: 1:6 ,nrgdet_exception_cause_status: 1:5 ,timer_exception_cause_status: 1:4 ,aux_meas_ch_ctr: 4:0 ,)
    LDR HWS_EXCPHNDLR_2 R0                                       // 0x540a (Reserved_23_23: 1:7 ,awdt_exception_cause_status: 1:6 ,rwdt_exception_cause_status: 1:5 ,nrgdet_exception_cause_status: 1:4 ,timer_exception_cause_status: 1:3 ,Reserved_18_3: 8:0 ,)
    ANDI R0 0x20 R0                                              // 0x7040
    SHIFTI R0 R0 0x5 1                                           // 0x4950
    LDR ISP_SWSPAD_21_3 R1                                       // 0x54d7 (awdt_exception_cause_status: 1:7 ,rwdt_exception_cause_status: 1:6 ,nrgdet_exception_cause_status: 1:5 ,timer_exception_cause_status: 1:4 ,aux_meas_ch_ctr: 4:0 ,)
    ANDI R1 0xbf R1                                              // 0x737f
    SHIFTI R0 R0 0x6 0                                           // 0x4860
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x6 1                                           // 0x4960
    STR ISP_SWSPAD_21_3 R1                                       // 0x56d7 (awdt_exception_cause_status: 1:7 ,rwdt_exception_cause_status: 1:6 ,nrgdet_exception_cause_status: 1:5 ,timer_exception_cause_status: 1:4 ,aux_meas_ch_ctr: 4:0 ,)
    LDR HWS_EXCPHNDLR_2 R0                                       // 0x540a (Reserved_23_23: 1:7 ,awdt_exception_cause_status: 1:6 ,rwdt_exception_cause_status: 1:5 ,nrgdet_exception_cause_status: 1:4 ,timer_exception_cause_status: 1:3 ,Reserved_18_3: 8:0 ,)
    ANDI R0 0x40 R0                                              // 0x7080
    SHIFTI R0 R0 0x6 1                                           // 0x4960
    LDR ISP_SWSPAD_21_3 R1                                       // 0x54d7 (awdt_exception_cause_status: 1:7 ,rwdt_exception_cause_status: 1:6 ,nrgdet_exception_cause_status: 1:5 ,timer_exception_cause_status: 1:4 ,aux_meas_ch_ctr: 4:0 ,)
    ANDI R1 0x7f R1                                              // 0x72ff
    SHIFTI R0 R0 0x7 0                                           // 0x4870
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x7 1                                           // 0x4970
    STR ISP_SWSPAD_21_3 R1                                       // 0x56d7 (awdt_exception_cause_status: 1:7 ,rwdt_exception_cause_status: 1:6 ,nrgdet_exception_cause_status: 1:5 ,timer_exception_cause_status: 1:4 ,aux_meas_ch_ctr: 4:0 ,)
    MOV R0 R2                                                    // 0x4608
    REG R1 01                                                    // 0x4203
    SBNEQ PowerGearingException                                  // 0x5a27
    LDR ISP_SWSPAD_30_1 R0                                       // 0x5479 (power_gearing_ind: 1:7 ,temp_sens_dcdc_div: 2:5 ,lo_freq_offset_sweep_status: 5:0 ,)
    ANDI R0 0x80 R0                                              // 0x7100
    SHIFTI R0 R0 0x7 1                                           // 0x4970
    REG R1 01                                                    // 0x4203
    SBEQ PowerGearingException                                   // 0x5a10
    REG R0 00                                                    // 0x4200
    REG R1 00                                                    // 0x4201
    SBEQ ContinueFromLastRdr                                     // 0x5a2c
    JUMP_LINK 0 SpuRomMidGearConfig                              // 0x45a2
    SETBAR 3 0                                                   // 0x5e03
    LDR ISP_SWSPAD_30_1 R0                                       // 0x5479 (power_gearing_ind: 1:7 ,temp_sens_dcdc_div: 2:5 ,lo_freq_offset_sweep_status: 5:0 ,)
    ANDI R0 0x80 R0                                              // 0x7100
    SHIFTI R0 R0 0x7 1                                           // 0x4970
    REG R1 01                                                    // 0x4203
    SBEQ ContinueFromLastRdr                                     // 0x5a10
    REG2 R1 0x2                                                  // 0x5c05
    SETBAR 2 0                                                   // 0x5e02
    SETCLR 0 R1 ISP_SWSPAD_13_2                                  // 0x6bda (coarse_ctl_coarse_step_size: 4:4 ,first_packet_ind: 1:3 ,state_operation_done_ind: 1:2 ,high_to_mid_gear_shift_ind: 1:1 ,temp_sensor_counter_type: 1:0 ,)
    SETBNK 2 0                                                   // 0x5e02
    STRI ISP_SWSPAD_10_2 0x0                                     // 0x806a (exception_jump_offset: 8:0 ,)
    LJUMP SpuRomJumpXRdrsRelativeToEnd                           // 0x6d8b
    OR R0 R0 R0                                                  // 0x0040
    AND R0 R0 R0                                                 // 0x0000
end SpuRomExceptionHandler

start ROM SpuRomJumpXRdrsFromNet		// index: 6974, table index: 43
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR7_0 R0                                            // 0x545c (hrr_net_rd_index: 8:0 ,)
       SETBAR 2 0                                                // 0x5e02
       LDR ISP_SWSPAD_10_2 R1                                    // 0x54ea (exception_jump_offset: 8:0 ,)
       ADD R0 R1 R0                                              // 0x4144
       SETBAR 0 0                                                // 0x5e00
       STR HWS_HRR7_0 R0                                         // 0x565c (hrr_net_rd_index: 8:0 ,)
       REG2 R1 0xc                                               // 0x5c19
       SETCLR 0 R1 HWS_HRR7_3                                    // 0x6b7e (hrr_awdt_soft_th: 2:6 ,hrr_awdt_hard_th: 2:4 ,hrr_hws_hrr_state: 2:2 ,hrr_net_rrt_sel: 1:1 ,hrr_rrt_rd_cntr: 8:0 ,)
       REG2 R1 0x2                                               // 0x5c05
       SETCLR 0 R1 HWS_HRR7_3                                    // 0x2b7e (hrr_awdt_soft_th: 2:6 ,hrr_awdt_hard_th: 2:4 ,hrr_hws_hrr_state: 2:2 ,hrr_net_rrt_sel: 1:1 ,hrr_rrt_rd_cntr: 8:0 ,)
       AND R0 R0 R0                                              // 0x0000
end SpuRomJumpXRdrsFromNet

start ROM SpuRomJumpXRdrsRelativeToEndFromNet		// index: 6977, table index: 44
    SETBNK 2 1                                                   // 0x5e12
    LDR HWS_HWS_PC_0 R0                                          // 0x5428 (net_rd_index: 8:0 ,)
       LDR ISP_SWSPAD_10_2 R1                                    // 0x54ea (exception_jump_offset: 8:0 ,)
       ADD R0 R1 R0                                              // 0x4144
       SETBAR 0 1                                                // 0x5e10
       STR HWS_HRR7_0 R0                                         // 0x565c (hrr_net_rd_index: 8:0 ,)
       REG2 R1 0xc                                               // 0x5c19
       SETCLR 0 R1 HWS_HRR7_3                                    // 0x6b7e (hrr_awdt_soft_th: 2:6 ,hrr_awdt_hard_th: 2:4 ,hrr_hws_hrr_state: 2:2 ,hrr_net_rrt_sel: 1:1 ,hrr_rrt_rd_cntr: 8:0 ,)
       REG2 R1 0x2                                               // 0x5c05
       SETCLR 0 R1 HWS_HRR7_3                                    // 0x2b7e (hrr_awdt_soft_th: 2:6 ,hrr_awdt_hard_th: 2:4 ,hrr_hws_hrr_state: 2:2 ,hrr_net_rrt_sel: 1:1 ,hrr_rrt_rd_cntr: 8:0 ,)
end SpuRomJumpXRdrsRelativeToEndFromNet

start ROM SpuRomJumpXRdrsFromRrt		// index: 6980, table index: 45
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR7_1 R0                                            // 0x545d (hrr_rrt_rd_index: 8:0 ,)
    MOV R2 R0                                                    // 0x4602
       SETBAR 2 0                                                // 0x5e02
       LDR ISP_SWSPAD_10_2 R1                                    // 0x54ea (exception_jump_offset: 8:0 ,)
       ADD R0 R1 R0                                              // 0x4144
    MOV R1 R2                                                    // 0x4609
    SBGT DoNothing                                               // 0x5a1a
    SBEQ DoNothing                                               // 0x5a14
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR7_2 R1                                            // 0x54de (hrr_rrt_rd_cntr: 7:1 ,hrr_rrt_rd_index: 8:0 ,)
    ORI R1 01 R1                                                 // 0x7603
    STR HWS_HRR7_2 R1                                            // 0x56de (hrr_rrt_rd_cntr: 7:1 ,hrr_rrt_rd_index: 8:0 ,)
    SETBNK 0 0                                                   // 0x5e00
       STR HWS_HRR7_1 R0                                         // 0x565d (hrr_rrt_rd_index: 8:0 ,)
       REG2 R1 0xc                                               // 0x5c19
       SETCLR 0 R1 HWS_HRR7_3                                    // 0x6b7e (hrr_awdt_soft_th: 2:6 ,hrr_awdt_hard_th: 2:4 ,hrr_hws_hrr_state: 2:2 ,hrr_net_rrt_sel: 1:1 ,hrr_rrt_rd_cntr: 8:0 ,)
       REG2 R1 0x2                                               // 0x5c05
       SETCLR 1 R1 HWS_HRR7_3                                    // 0x2b7f (hrr_awdt_soft_th: 2:6 ,hrr_awdt_hard_th: 2:4 ,hrr_hws_hrr_state: 2:2 ,hrr_net_rrt_sel: 1:1 ,hrr_rrt_rd_cntr: 8:0 ,)
       AND R0 R0 R0                                              // 0x0000
end SpuRomJumpXRdrsFromRrt

start ROM SpuRomJumpXRdrsRelativeToEndFromRrt		// index: 6985, table index: 46
     SETBNK 2 1                                                  // 0x5e12
     LDR HWS_HWS_PC_1 R0                                         // 0x5429 (rrt_rd_index: 8:0 ,)
    MOV R2 R0                                                    // 0x4602
    LDR ISP_SWSPAD_10_2 R1                                       // 0x54ea (exception_jump_offset: 8:0 ,)
    ADD R0 R1 R0                                                 // 0x4144
    MOV R1 R2                                                    // 0x4609
    SBGT DoNothing                                               // 0x5a1a
    SBEQ DoNothing                                               // 0x5a14
    SETBAR 0 1                                                   // 0x5e10
    LDR HWS_HRR7_2 R1                                            // 0x54de (hrr_rrt_rd_cntr: 7:1 ,hrr_rrt_rd_index: 8:0 ,)
    ORI R1 01 R1                                                 // 0x7603
    STR HWS_HRR7_2 R1                                            // 0x56de (hrr_rrt_rd_cntr: 7:1 ,hrr_rrt_rd_index: 8:0 ,)
    SETBNK 0 1                                                   // 0x5e10
    STR HWS_HRR7_1 R0                                            // 0x565d (hrr_rrt_rd_index: 8:0 ,)
    REG2 R1 0xc                                                  // 0x5c19
    SETCLR 0 R1 HWS_HRR7_3                                       // 0x6b7e (hrr_awdt_soft_th: 2:6 ,hrr_awdt_hard_th: 2:4 ,hrr_hws_hrr_state: 2:2 ,hrr_net_rrt_sel: 1:1 ,hrr_rrt_rd_cntr: 8:0 ,)
    REG2 R1 0x2                                                  // 0x5c05
    SETCLR 1 R1 HWS_HRR7_3                                       // 0x2b7f (hrr_awdt_soft_th: 2:6 ,hrr_awdt_hard_th: 2:4 ,hrr_hws_hrr_state: 2:2 ,hrr_net_rrt_sel: 1:1 ,hrr_rrt_rd_cntr: 8:0 ,)
end SpuRomJumpXRdrsRelativeToEndFromRrt

start ROM SpuRomHwsJumpToSpecificRdr		// index: 6990, table index: 47
    REG2 R1 0x2                                                  // 0x5c05
    SETBAR 0 0                                                   // 0x5e00
    SETCLR 0 R1 HWS_HRR7_3                                       // 0x6b7e (hrr_awdt_soft_th: 2:6 ,hrr_awdt_hard_th: 2:4 ,hrr_hws_hrr_state: 2:2 ,hrr_net_rrt_sel: 1:1 ,hrr_rrt_rd_cntr: 8:0 ,)
    SETBAR 2 0                                                   // 0x5e02
    LDR ISP_SWSPAD_10_2 R0                                       // 0x546a (exception_jump_offset: 8:0 ,)
    SETBAR 0 0                                                   // 0x5e00
    STR HWS_HRR7_0 R0                                            // 0x565c (hrr_net_rd_index: 8:0 ,)
    REG2 R1 0xc                                                  // 0x5c19
    SETCLR 0 R1 HWS_HRR7_3                                       // 0x2b7e (hrr_awdt_soft_th: 2:6 ,hrr_awdt_hard_th: 2:4 ,hrr_hws_hrr_state: 2:2 ,hrr_net_rrt_sel: 1:1 ,hrr_rrt_rd_cntr: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomHwsJumpToSpecificRdr

start ROM SpuRomJumpXRdrs		// index: 6993, table index: 48
       SETBAR 0 1                                                // 0x5e10
       LDR HWS_HWS_PC_3 R0                                       // 0x542b (Reserved_31_26: 6:2 ,net_rrt_sel: 1:1 ,rrt_rd_cntr: 8:0 ,)
       ANDI R0 0x2 R0                                            // 0x7004
       SHIFTI R0 R0 0x1 1                                        // 0x4910
       REG R1 00                                                 // 0x4201
    SBEQ JumpXRdrsFromRrt                                        // 0x5a08
    LJUMP SpuRomJumpXRdrsFromNet                                 // 0x6d5b
    LJUMP SpuRomJumpXRdrsFromRrt                                 // 0x2d6b
end SpuRomJumpXRdrs

start ROM SpuRomJumpXRdrsRelativeToEnd		// index: 6995, table index: 49
       SETBAR 0 1                                                // 0x5e10
       LDR HWS_HWS_PC_3 R0                                       // 0x542b (Reserved_31_26: 6:2 ,net_rrt_sel: 1:1 ,rrt_rd_cntr: 8:0 ,)
       ANDI R0 0x2 R0                                            // 0x7004
       SHIFTI R0 R0 0x1 1                                        // 0x4910
       REG R1 00                                                 // 0x4201
    SBEQ JumpXRdrsRelativeToEndFromRrt                           // 0x5a08
    LJUMP SpuRomJumpXRdrsRelativeToEndFromNet                    // 0x6d63
    LJUMP SpuRomJumpXRdrsRelativeToEndFromRrt                    // 0x2d73
end SpuRomJumpXRdrsRelativeToEnd

start ROM SpuRomSecCopyKeysFromOtp		// index: 6997, table index: 50
    DMAON 22 6                                                   // 0x58d6
    DMA HWS_DEF_DATA_KEY_0 HWS_DATA_KEY_0 8                      // 0xb836
end SpuRomSecCopyKeysFromOtp

start ROM SPU_SecDMAPreFetch		// index: 6998, table index: 51
    DMAON 2 5                                                    // 0x58a2
    DMA ISP_SRR_SPARE_5 HWS_PGXSDATA_0 5                         // 0x6385
    DMA ISP_SRR_SPARE_10 HWS_NONCE 6                             // 0xecca
    DMAON 1 6                                                    // 0x58c1
    DMA ISP_SWSPAD_00 HWS_DATA_KEY_0 8                           // 0xb800
    AND R0 R0 R0                                                 // 0x0000
end SPU_SecDMAPreFetch

start ROM SpuRomSecPreFetch		// index: 7000, table index: 52
    DMAON 1 5                                                    // 0x58a1
    DMA ISP_SWSPAD_01 HWS_PGXDID 1                               // 0x4481
    DMA ISP_SWSPAD_02 HWS_NONCE 1                                // 0x44c2
    DMA ISP_SWSPAD_03 HWS_PGXDDATAL0 2                           // 0x4d03
    DMA ISP_SWSPAD_06 HWS_PGXDDATAL3 2                           // 0x8dc6
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSecPreFetch

start ROM SPU_SecProcess		// index: 7002, table index: 53
   REG2 R1 0x1                                                   // 0x5c03
   SETBAR 0 2                                                    // 0x5e20
   SETCLR 0 R1 HWS_SEC_HWSCMD_1                                  // 0x6a86 (Reserved_15_9: 7:1 ,cif_sec_go: 1:0 ,)
   TIMER STOP_TIMER MUL_BY_2                                     // 0x62fe
   EVCMD SEC_DONE CLR_EV_ENABLE WFE_ENABLE                       // 0x2190
   AND R0 R0 R0                                                  // 0x0000
end SPU_SecProcess

start ROM SPU_SecDMAPush		// index: 7004, table index: 54
    DMAON 5 2                                                    // 0x5845
    DMA HWS_PGXDDATAL0 ISP_SRR_SPARE_11 5                        // 0xa2d4
end SPU_SecDMAPush

start ROM SpuRomSecPush		// index: 7005, table index: 55
    DMAON 5 1                                                    // 0x5825
    DMA HWS_PGXDDATAL0 ISP_SWSPAD_03 5                           // 0xa0d4
end SpuRomSecPush

start ROM SpuRomInitFromGnvm		// index: 7006, table index: 56
    SETBAR 2 0                                                   // 0x5e02
    STRI ISP_SWSPAD_00_0 0                                       // 0x8040 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_00_1 0                                       // 0x8041 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_00_2 0                                       // 0x8042 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_00_3 0                                       // 0x8043 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_01_0 0                                       // 0x8044 (swspad_01: 8:0 ,)
    STRI ISP_SWSPAD_01_1 0                                       // 0x8045 (swspad_01: 8:0 ,)
    STRI ISP_SWSPAD_01_2 0                                       // 0x8046 (swspad_01: 8:0 ,)
    STRI ISP_SWSPAD_01_3 0                                       // 0x8047 (swspad_01: 8:0 ,)
    DMAON 1 1                                                    // 0x5821
    DMA ISP_SWSPAD_00 ISP_SWSPAD_02 7                            // 0x7080
    DMA ISP_SWSPAD_00 ISP_SWSPAD_09 8                            // 0x7a40
    DMA ISP_SWSPAD_00 ISP_SWSPAD_17 8                            // 0x7c40
    DMA ISP_SWSPAD_00 ISP_SWSPAD_25 7                            // 0xf640
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_SWSPAD_19_0 ISP_SWSPAD_19_0 1                    // 0x44c4
    DMA HWS_DEF_SWSPAD_26_0 ISP_SWSPAD_26_0 1                    // 0xc685
    DMAON 21 0                                                   // 0x5815
    DMA HWS_DEF_HRR0_0 HWS_HRR0_0 1                              // 0x4038
    DMA HWS_DEF_HRR1_0 HWS_HRR1_0 1                              // 0x4079
    DMA HWS_DEF_HRR2_0 HWS_HRR2_0 1                              // 0x40ba
    DMA HWS_DEF_HRR3_0 HWS_HRR3_0 1                              // 0x40fb
    DMA HWS_DEF_HRR4_0 HWS_HRR4_0 1                              // 0x413c
    DMA HWS_DEF_HRR5_0 HWS_HRR5_0 1                              // 0x417d
    DMA HWS_DEF_HRR6_0 HWS_HRR6_0 1                              // 0x41be
    DMA HWS_DEF_HRR7_0 HWS_HRR7_0 1                              // 0xc1ff
    DMAON 22 0                                                   // 0x5816
    DMA HWS_DEF_HRR8_0 HWS_HRR8_0 1                              // 0x4200
    DMA HWS_DEF_HRR9_0 HWS_HRR9_0 1                              // 0xc241
    DMAON 21 5                                                   // 0x58b5
    DMA HWS_DEF_DRR0_SHADOW_0 HWS_DRR0_SHADOW_0 1                // 0x4730
    DMA HWS_DEF_DRR1_SHADOW_0 HWS_DRR1_SHADOW_0 1                // 0x8771
end SpuRomInitFromGnvm

start ROM SpuRomClearIspExcpFlags		// index: 7014, table index: 57
    REG2 R1 0x10                                                 // 0x5c21
    SETBAR 3 0                                                   // 0x5e03
    SETCLR 1 R1 ISP_SWSPAD_21_3                                  // 0x6b5f (awdt_exception_cause_status: 1:7 ,rwdt_exception_cause_status: 1:6 ,nrgdet_exception_cause_status: 1:5 ,timer_exception_cause_status: 1:4 ,aux_meas_ch_ctr: 4:0 ,)
    REG2 R1 0x20                                                 // 0x5c41
    SETCLR 1 R1 ISP_SWSPAD_21_3                                  // 0x6b5f (awdt_exception_cause_status: 1:7 ,rwdt_exception_cause_status: 1:6 ,nrgdet_exception_cause_status: 1:5 ,timer_exception_cause_status: 1:4 ,aux_meas_ch_ctr: 4:0 ,)
    REG2 R1 0x40                                                 // 0x5c81
    SETCLR 1 R1 ISP_SWSPAD_21_3                                  // 0x6b5f (awdt_exception_cause_status: 1:7 ,rwdt_exception_cause_status: 1:6 ,nrgdet_exception_cause_status: 1:5 ,timer_exception_cause_status: 1:4 ,aux_meas_ch_ctr: 4:0 ,)
    REG2 R1 0x80                                                 // 0x5d01
    SETCLR 1 R1 ISP_SWSPAD_21_3                                  // 0x2b5f (awdt_exception_cause_status: 1:7 ,rwdt_exception_cause_status: 1:6 ,nrgdet_exception_cause_status: 1:5 ,timer_exception_cause_status: 1:4 ,aux_meas_ch_ctr: 4:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomClearIspExcpFlags

start ROM SpuRomDummy		// index: 7017, table index: 58
    OR R0 R0 R0                                                  // 0x0040
    AND R0 R0 R0                                                 // 0x0000
end SpuRomDummy

start ROM SpuRomDontIncTOctrInExcp		// index: 7018, table index: 59
    REG2 R1 0x8                                                  // 0x5c11
    SETBAR 2 0                                                   // 0x5e02
    SETCLR 0 R1 ISP_SWSPAD_13_1                                  // 0x2bd6 (rc_sensor_calib_en: 1:7 ,rc_sensor_cap_or_res_ind: 1:6 ,rc_sensor_active_clk_or_lcaux_ind: 1:5 ,lo_vref_vbp_calib_use_lcaux_or_symbol_ind: 1:4 ,dont_inc_timeout_ctr_ind: 1:3 ,signal_at_adv_beacon_for_post_verify_first: 1:2 ,aux_meas_est_func_hyp_ctr: 2:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomDontIncTOctrInExcp

start ROM SpuRomIncTOctrInExcp		// index: 7019, table index: 60
    REG2 R1 0x8                                                  // 0x5c11
    SETBAR 2 0                                                   // 0x5e02
    SETCLR 1 R1 ISP_SWSPAD_13_1                                  // 0x2bd7 (rc_sensor_calib_en: 1:7 ,rc_sensor_cap_or_res_ind: 1:6 ,rc_sensor_active_clk_or_lcaux_ind: 1:5 ,lo_vref_vbp_calib_use_lcaux_or_symbol_ind: 1:4 ,dont_inc_timeout_ctr_ind: 1:3 ,signal_at_adv_beacon_for_post_verify_first: 1:2 ,aux_meas_est_func_hyp_ctr: 2:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomIncTOctrInExcp

start ROM SpuRomSetStateOperationDoneInd		// index: 7020, table index: 61
    REG2 R1 0x4                                                  // 0x5c09
    SETBAR 2 0                                                   // 0x5e02
    SETCLR 0 R1 ISP_SWSPAD_13_2                                  // 0x2bda (coarse_ctl_coarse_step_size: 4:4 ,first_packet_ind: 1:3 ,state_operation_done_ind: 1:2 ,high_to_mid_gear_shift_ind: 1:1 ,temp_sensor_counter_type: 1:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetStateOperationDoneInd

start ROM SpuRomClearStateOperationDoneInd		// index: 7021, table index: 62
    REG2 R1 0x4                                                  // 0x5c09
    SETBAR 2 0                                                   // 0x5e02
    SETCLR 1 R1 ISP_SWSPAD_13_2                                  // 0x2bdb (coarse_ctl_coarse_step_size: 4:4 ,first_packet_ind: 1:3 ,state_operation_done_ind: 1:2 ,high_to_mid_gear_shift_ind: 1:1 ,temp_sensor_counter_type: 1:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomClearStateOperationDoneInd

start ROM Spu_TempSensorSrrInit		// index: 7022, table index: 63
    SETBAR 0 0                                                   // 0x5e00
    STRI HWS_HWSINTCTL_0 06                                      // 0x8300 (Reserved_7_3: 5:3 ,pgen_clb: 1:2 ,pgen_isp: 1:1 ,pgen_mss: 1:0 ,)
    TIMER 20 MUL_BY_2                                            // 0x6220
    STRI HWS_HWSINTCTL_1 06                                      // 0x8301 (Reserved_15_11: 5:3 ,rsten_clb: 1:2 ,rsten_isp: 1:1 ,rsten_mss: 1:0 ,)
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x61e1
    REG2 R1 0x40                                                 // 0x5c81
    SETBNK 3 5                                                   // 0x5e53
    SETCLR 0 R1 CLB_TEMP_SENSOR_CTL2_1                           // 0x6a46 (Reserved_15_15: 1:7 ,dem_smp_auto_reset: 1:6 ,temp_sens_amp_dem_en: 1:5 ,counter_type: 1:4 ,dem_ana_ctl: 1:3 ,dcdc_div: 2:1 ,trace_buffer_en: 1:0 ,)
    LDR ISP_SWSPAD_27_3 R0                                       // 0x546f (temp_sens_dem_ctl: 2:6 ,dem_len: 2:4 ,dem_pointer: 4:0 ,)
    MOV R2 R0                                                    // 0x4602
    ANDI R0 0f R0                                                // 0x701e
    MOV R3 R0                                                    // 0x4603
    MOV R0 R2                                                    // 0x4608
    ANDI R0 30 R0                                                // 0x7060
    REG  R1 4                                                    // 0x4209
    SHIFTR R0 R0 R1                                              // 0x4110
    REG R1 1                                                     // 0x4203
    SHIFTL R2 R1 R0                                              // 0x40c6
    STRI CLB_temp_sensor_ctl2_0 04                               // 0x8210
    STRI CLB_temp_sensor_ctl2_0 00                               // 0x8010
    MOV R0 R3                                                    // 0x460c
    REG R1 0                                                     // 0x4201
    SBNEQ label_dem23                                            // 0x5a3b
    SETBAR 2 5                                                   // 0x5e52
    LDR ISP_SWSPAD_00_0 R1                                       // 0x54c0 (swspad_00: 8:0 ,)
    STR CLB_temp_sensor_ctl_0 R1                                 // 0x568c
    LDR ISP_SWSPAD_00_1 R1                                       // 0x54c1 (swspad_00: 8:0 ,)
    STR CLB_temp_sensor_ctl_1 R1                                 // 0x568d
    STRI CLB_temp_sensor_ctl2_0 08                               // 0x8410
    LDR ISP_SWSPAD_00_2 R1                                       // 0x54c2 (swspad_00: 8:0 ,)
    STR CLB_temp_sensor_ctl_0 R1                                 // 0x568c
    LDR ISP_SWSPAD_00_3 R1                                       // 0x54c3 (swspad_00: 8:0 ,)
    STR CLB_temp_sensor_ctl_1 R1                                 // 0x568d
    STRI CLB_temp_sensor_ctl2_0 10                               // 0x8810
    REG R1 0                                                     // 0x4201
    SBEQ done                                                    // 0x5aa8
    SETBNK 2 5                                                   // 0x5e52
    REG R1 2                                                     // 0x4205
    SBNEQ label_dem45                                            // 0x5a37
    LDR ISP_SWSPAD_02_0 R1                                       // 0x54c8 (swspad_02: 8:0 ,)
    STR CLB_temp_sensor_ctl_0 R1                                 // 0x568c
    LDR ISP_SWSPAD_02_1 R1                                       // 0x54c9 (swspad_02: 8:0 ,)
    STR CLB_temp_sensor_ctl_1 R1                                 // 0x568d
    STRI CLB_temp_sensor_ctl2_0 08                               // 0x8410
    LDR ISP_SWSPAD_02_2 R1                                       // 0x54ca (swspad_02: 8:0 ,)
    STR CLB_temp_sensor_ctl_0 R1                                 // 0x568c
    LDR ISP_SWSPAD_02_3 R1                                       // 0x54cb (swspad_02: 8:0 ,)
    STR CLB_temp_sensor_ctl_1 R1                                 // 0x568d
    STRI CLB_temp_sensor_ctl2_0 10                               // 0x8810
    REG R1 2                                                     // 0x4205
    SBEQ done                                                    // 0x5a6c
    REG R1 4                                                     // 0x4209
    SBNEQ label_dem67                                            // 0x5a3b
    LDR ISP_SWSPAD_04_0 R1                                       // 0x54d0 (swspad_04: 8:0 ,)
    STR CLB_temp_sensor_ctl_0 R1                                 // 0x568c
    LDR ISP_SWSPAD_04_1 R1                                       // 0x54d1 (swspad_04: 8:0 ,)
    STR CLB_temp_sensor_ctl_1 R1                                 // 0x568d
    STRI CLB_temp_sensor_ctl2_0 08                               // 0x8410
    LDR ISP_SWSPAD_04_2 R1                                       // 0x54d2 (swspad_04: 8:0 ,)
    STR CLB_temp_sensor_ctl_0 R1                                 // 0x568c
    LDR ISP_SWSPAD_04_3 R1                                       // 0x54d3 (swspad_04: 8:0 ,)
    STR CLB_temp_sensor_ctl_1 R1                                 // 0x568d
    STRI CLB_temp_sensor_ctl2_0 10                               // 0x8810
    REG R1 4                                                     // 0x4209
    SBEQ done                                                    // 0x5a34
    REG R1 6                                                     // 0x420d
    LDR ISP_SWSPAD_05_0 R1                                       // 0x54d4 (swspad_05: 8:0 ,)
    STR CLB_temp_sensor_ctl_0 R1                                 // 0x568c
    LDR ISP_SWSPAD_05_1 R1                                       // 0x54d5 (swspad_05: 8:0 ,)
    STR CLB_temp_sensor_ctl_1 R1                                 // 0x568d
    STRI CLB_temp_sensor_ctl2_0 08                               // 0x8410
    LDR ISP_SWSPAD_05_2 R1                                       // 0x54d6 (swspad_05: 8:0 ,)
    STR CLB_temp_sensor_ctl_0 R1                                 // 0x568c
    LDR ISP_SWSPAD_05_3 R1                                       // 0x54d7 (swspad_05: 8:0 ,)
    STR CLB_temp_sensor_ctl_1 R1                                 // 0x568d
    STRI CLB_temp_sensor_ctl2_0 10                               // 0x8810
    REG R1 6                                                     // 0x420d
    STRI CLB_temp_sensor_ctl2_0 01                               // 0x8090
    STRI CLB_temp_sensor_ctl2_0 00                               // 0x8010
    AND R0 R0 R0                                                 // 0x0000
end Spu_TempSensorSrrInit

start ROM Spu_TempSensor_dig_ctl_srr		// index: 7042, table index: 64
    REG2 R1 0x40                                                 // 0x5c81
    SETBNK 3 5                                                   // 0x5e53
    SETCLR 0 R1 CLB_TEMP_SENSOR_CTL2_1                           // 0x6a46 (Reserved_15_15: 1:7 ,dem_smp_auto_reset: 1:6 ,temp_sens_amp_dem_en: 1:5 ,counter_type: 1:4 ,dem_ana_ctl: 1:3 ,dcdc_div: 2:1 ,trace_buffer_en: 1:0 ,)
    LDR ISP_SWSPAD_27_3 R0                                       // 0x546f (temp_sens_dem_ctl: 2:6 ,dem_len: 2:4 ,dem_pointer: 4:0 ,)
    ANDI R0 0xf R0                                               // 0x701e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    ANDI R0 07 R0                                                // 0x700e
    MOV R3 R0                                                    // 0x4603
    LDR ISP_SWSPAD_27_3 R0                                       // 0x546f (temp_sens_dem_ctl: 2:6 ,dem_len: 2:4 ,dem_pointer: 4:0 ,)
    ANDI R0 0x30 R0                                              // 0x7060
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    REG R1 1                                                     // 0x4203
    SHIFTL R2 R1 R0                                              // 0x40c6
    REG R1 0                                                     // 0x4201
    STRI CLB_temp_sensor_ctl2_3 02                               // 0x8113
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    SBEQ label_done_mid                                          // 0x5ad8
    SETBAR 2 5                                                   // 0x5e52
    LDR ISP_SWSPAD_02_0 R1                                       // 0x54c8 (swspad_02: 8:0 ,)
    STR CLB_temp_sensor_ctl_0 R1                                 // 0x568c
    LDR ISP_SWSPAD_02_1 R1                                       // 0x54c9 (swspad_02: 8:0 ,)
    STR CLB_temp_sensor_ctl_1 R1                                 // 0x568d
    REG R1 1                                                     // 0x4203
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    SBEQ label_done_mid                                          // 0x5ab8
    MOV R0 R2                                                    // 0x4608
    ADDI R0 FE R0                                                // 0x7dfc
    MOV R2 R0                                                    // 0x4602
    MOV R0 R3                                                    // 0x460c
    ADDI R0 02 R0                                                // 0x7c04
    MOV R3 R0                                                    // 0x4603
    REG R1 4                                                     // 0x4209
    SBEQ label_dem4                                              // 0x5a50
    REG R1 6                                                     // 0x420d
    SBEQ label_dem6                                              // 0x5aa0
    STRI CLB_temp_sensor_ctl2_0 08                               // 0x8410
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    LDR ISP_SWSPAD_02_2 R1                                       // 0x54ca (swspad_02: 8:0 ,)
    STR CLB_temp_sensor_ctl_0 R1                                 // 0x568c
    LDR ISP_SWSPAD_02_3 R1                                       // 0x54cb (swspad_02: 8:0 ,)
    STR CLB_temp_sensor_ctl_1 R1                                 // 0x568d
    STRI CLB_temp_sensor_ctl2_0 10                               // 0x8810
    MOV R0 R2                                                    // 0x4608
    ADDI R0 FE R0                                                // 0x7dfc
    MOV R2 R0                                                    // 0x4602
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    REG R1 0                                                     // 0x4201
    SBEQ label_done_mid                                          // 0x5a54
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    LDR ISP_SWSPAD_04_0 R1                                       // 0x54d0 (swspad_04: 8:0 ,)
    STR CLB_temp_sensor_ctl_0 R1                                 // 0x568c
    LDR ISP_SWSPAD_04_1 R1                                       // 0x54d1 (swspad_04: 8:0 ,)
    STR CLB_temp_sensor_ctl_1 R1                                 // 0x568d
    STRI CLB_temp_sensor_ctl2_0 08                               // 0x8410
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    LDR ISP_SWSPAD_04_2 R1                                       // 0x54d2 (swspad_04: 8:0 ,)
    STR CLB_temp_sensor_ctl_0 R1                                 // 0x568c
    LDR ISP_SWSPAD_04_3 R1                                       // 0x54d3 (swspad_04: 8:0 ,)
    STR CLB_temp_sensor_ctl_1 R1                                 // 0x568d
    STRI CLB_temp_sensor_ctl2_0 10                               // 0x8810
    MOV R0 R2                                                    // 0x4608
    ADDI R0 FE R0                                                // 0x7dfc
    MOV R2 R0                                                    // 0x4602
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    REG R1 0                                                     // 0x4201
    SETBNK 2 5                                                   // 0x5e52
    SBEQ label_done                                              // 0x5a50
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    LDR ISP_SWSPAD_05_0 R1                                       // 0x54d4 (swspad_05: 8:0 ,)
    STR CLB_temp_sensor_ctl_0 R1                                 // 0x568c
    LDR ISP_SWSPAD_05_1 R1                                       // 0x54d5 (swspad_05: 8:0 ,)
    STR CLB_temp_sensor_ctl_1 R1                                 // 0x568d
    STRI CLB_temp_sensor_ctl2_0 08                               // 0x8410
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    LDR ISP_SWSPAD_05_2 R1                                       // 0x54d6 (swspad_05: 8:0 ,)
    STR CLB_temp_sensor_ctl_0 R1                                 // 0x568c
    LDR ISP_SWSPAD_05_3 R1                                       // 0x54d7 (swspad_05: 8:0 ,)
    STR CLB_temp_sensor_ctl_1 R1                                 // 0x568d
    STRI CLB_temp_sensor_ctl2_0 10                               // 0x8810
    MOV R0 R2                                                    // 0x4608
    ADDI R0 FE R0                                                // 0x7dfc
    MOV R2 R0                                                    // 0x4602
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    STRI CLB_temp_sensor_ctl2_0 20                               // 0x9010
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    DMAON 8 5                                                    // 0x58a8
    DMA CLB_temp_sensor_counter_0 HWS_PGXSENSDATA_0 1            // 0xc615
    STRI CLB_temp_sensor_ctl2_2 01                               // 0x8092
    STRI CLB_temp_sensor_ctl2_2 00                               // 0x8012
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    MOV R0 R3                                                    // 0x460c
    ANDI R0 07 R0                                                // 0x700e
    SETBAR 3 5                                                   // 0x5e53
    LDR ISP_SWSPAD_27_3 R1                                       // 0x54ef (temp_sens_dem_ctl: 2:6 ,dem_len: 2:4 ,dem_pointer: 4:0 ,)
    ANDI R1 f0 R1                                                // 0x73e1
    OR R0 R0 R1                                                  // 0x4050
    STR ISP_SWSPAD_27_3 R0                                       // 0x166f (temp_sens_dem_ctl: 2:6 ,dem_len: 2:4 ,dem_pointer: 4:0 ,)
end Spu_TempSensor_dig_ctl_srr

start ROM Spu_TempSensorInit		// index: 7069, table index: 65
    SETBAR 0 0                                                   // 0x5e00
    STRI HWS_HWSINTCTL_0 06                                      // 0x8300 (Reserved_7_3: 5:3 ,pgen_clb: 1:2 ,pgen_isp: 1:1 ,pgen_mss: 1:0 ,)
    TIMER 20 MUL_BY_2                                            // 0x6220
    STRI HWS_HWSINTCTL_1 06                                      // 0x8301 (Reserved_15_11: 5:3 ,rsten_clb: 1:2 ,rsten_isp: 1:1 ,rsten_mss: 1:0 ,)
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x61e1
    REG2 R1 0x40                                                 // 0x5c81
    SETBNK 3 5                                                   // 0x5e53
    SETCLR 0 R1 CLB_TEMP_SENSOR_CTL2_1                           // 0x6a46 (Reserved_15_15: 1:7 ,dem_smp_auto_reset: 1:6 ,temp_sens_amp_dem_en: 1:5 ,counter_type: 1:4 ,dem_ana_ctl: 1:3 ,dcdc_div: 2:1 ,trace_buffer_en: 1:0 ,)
    LDR ISP_SWSPAD_27_3 R0                                       // 0x546f (temp_sens_dem_ctl: 2:6 ,dem_len: 2:4 ,dem_pointer: 4:0 ,)
    MOV R2 R0                                                    // 0x4602
    ANDI R0 0f R0                                                // 0x701e
    MOV R3 R0                                                    // 0x4603
    MOV R0 R2                                                    // 0x4608
    ANDI R0 30 R0                                                // 0x7060
    REG  R1 4                                                    // 0x4209
    SHIFTR R0 R0 R1                                              // 0x4110
    REG R1 1                                                     // 0x4203
    SHIFTL R2 R1 R0                                              // 0x40c6
    STRI CLB_temp_sensor_ctl2_0 04                               // 0x8210
    STRI CLB_temp_sensor_ctl2_0 00                               // 0x8010
    MOV R0 R3                                                    // 0x460c
    REG R1 0                                                     // 0x4201
    SBNEQ label_dem23                                            // 0x5a23
    STRI CLB_temp_sensor_ctl_0 40                                // 0xa00c
    STRI CLB_temp_sensor_ctl_1 fa                                // 0xfd0d
    STRI CLB_temp_sensor_ctl2_0 08                               // 0x8410
    STRI CLB_temp_sensor_ctl_0 3e                                // 0x9f0c
    STRI CLB_temp_sensor_ctl_1 90                                // 0xc80d
    STRI CLB_temp_sensor_ctl2_0 10                               // 0x8810
    SBEQ done                                                    // 0x5a68
    REG R1 2                                                     // 0x4205
    SBNEQ label_dem45                                            // 0x5a23
    STRI CLB_temp_sensor_ctl_0 a4                                // 0xd20c
    STRI CLB_temp_sensor_ctl_1 0f                                // 0x878d
    STRI CLB_temp_sensor_ctl2_0 08                               // 0x8410
    STRI CLB_temp_sensor_ctl_0 03                                // 0x818c
    STRI CLB_temp_sensor_ctl_1 e9                                // 0xf48d
    STRI CLB_temp_sensor_ctl2_0 10                               // 0x8810
    SBEQ done                                                    // 0x5a44
    REG R1 4                                                     // 0x4209
    SBNEQ label_dem67                                            // 0x5a27
    STRI CLB_temp_sensor_ctl_0 fa                                // 0xfd0c
    STRI CLB_temp_sensor_ctl_1 40                                // 0xa00d
    STRI CLB_temp_sensor_ctl2_0 08                               // 0x8410
    STRI CLB_temp_sensor_ctl_0 90                                // 0xc80c
    STRI CLB_temp_sensor_ctl_1 3e                                // 0x9f0d
    STRI CLB_temp_sensor_ctl2_0 10                               // 0x8810
    SBEQ done                                                    // 0x5a20
    REG R1 6                                                     // 0x420d
    STRI CLB_temp_sensor_ctl_0 0f                                // 0x878c
    STRI CLB_temp_sensor_ctl_1 a4                                // 0xd20d
    STRI CLB_temp_sensor_ctl2_0 08                               // 0x8410
    STRI CLB_temp_sensor_ctl_0 e9                                // 0xf48c
    STRI CLB_temp_sensor_ctl_1 03                                // 0x818d
    STRI CLB_temp_sensor_ctl2_0 10                               // 0x8810
    STRI CLB_temp_sensor_ctl2_0 01                               // 0x8090
    STRI CLB_temp_sensor_ctl2_0 00                               // 0x8010
    AND R0 R0 R0                                                 // 0x0000
end Spu_TempSensorInit

start ROM Spu_TempSensor_dig_ctl		// index: 7084, table index: 66
    REG2 R1 0x40                                                 // 0x5c81
    SETBNK 3 5                                                   // 0x5e53
    SETCLR 0 R1 CLB_TEMP_SENSOR_CTL2_1                           // 0x6a46 (Reserved_15_15: 1:7 ,dem_smp_auto_reset: 1:6 ,temp_sens_amp_dem_en: 1:5 ,counter_type: 1:4 ,dem_ana_ctl: 1:3 ,dcdc_div: 2:1 ,trace_buffer_en: 1:0 ,)
    LDR ISP_SWSPAD_27_3 R0                                       // 0x546f (temp_sens_dem_ctl: 2:6 ,dem_len: 2:4 ,dem_pointer: 4:0 ,)
    ANDI R0 0xf R0                                               // 0x701e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    ANDI R0 07 R0                                                // 0x700e
    MOV R3 R0                                                    // 0x4603
    LDR ISP_SWSPAD_27_3 R0                                       // 0x546f (temp_sens_dem_ctl: 2:6 ,dem_len: 2:4 ,dem_pointer: 4:0 ,)
    ANDI R0 0x30 R0                                              // 0x7060
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    REG R1 1                                                     // 0x4203
    SHIFTL R2 R1 R0                                              // 0x40c6
    REG R1 0                                                     // 0x4201
    STRI CLB_temp_sensor_ctl2_3 02                               // 0x8113
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    SBEQ label_done_mid                                          // 0x5ab4
    STRI CLB_temp_sensor_ctl_0 a4                                // 0xd20c
    STRI CLB_temp_sensor_ctl_1 0f                                // 0x878d
    REG R1 1                                                     // 0x4203
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    SBEQ label_done_mid                                          // 0x5aa0
    MOV R0 R2                                                    // 0x4608
    ADDI R0 FE R0                                                // 0x7dfc
    MOV R2 R0                                                    // 0x4602
    MOV R0 R3                                                    // 0x460c
    ADDI R0 02 R0                                                // 0x7c04
    MOV R3 R0                                                    // 0x4603
    REG R1 4                                                     // 0x4209
    SBEQ label_dem4                                              // 0x5a48
    REG R1 6                                                     // 0x420d
    SBEQ label_dem6                                              // 0x5a84
    STRI CLB_temp_sensor_ctl2_0 08                               // 0x8410
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    STRI CLB_temp_sensor_ctl_0 03                                // 0x818c
    STRI CLB_temp_sensor_ctl_1 e9                                // 0xf48d
    STRI CLB_temp_sensor_ctl2_0 10                               // 0x8810
    MOV R0 R2                                                    // 0x4608
    ADDI R0 FE R0                                                // 0x7dfc
    MOV R2 R0                                                    // 0x4602
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    REG R1 0                                                     // 0x4201
    SBEQ label_done_mid                                          // 0x5a44
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    STRI CLB_temp_sensor_ctl_0 fa                                // 0xfd0c
    STRI CLB_temp_sensor_ctl_1 40                                // 0xa00d
    STRI CLB_temp_sensor_ctl2_0 08                               // 0x8410
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    STRI CLB_temp_sensor_ctl_0 90                                // 0xc80c
    STRI CLB_temp_sensor_ctl_1 3e                                // 0x9f0d
    STRI CLB_temp_sensor_ctl2_0 10                               // 0x8810
    MOV R0 R2                                                    // 0x4608
    ADDI R0 FE R0                                                // 0x7dfc
    MOV R2 R0                                                    // 0x4602
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    REG R1 0                                                     // 0x4201
    SBEQ label_done                                              // 0x5a40
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    STRI CLB_temp_sensor_ctl_0 0f                                // 0x878c
    STRI CLB_temp_sensor_ctl_1 a4                                // 0xd20d
    STRI CLB_temp_sensor_ctl2_0 08                               // 0x8410
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    STRI CLB_temp_sensor_ctl_0 e9                                // 0xf48c
    STRI CLB_temp_sensor_ctl_1 03                                // 0x818d
    STRI CLB_temp_sensor_ctl2_0 10                               // 0x8810
    MOV R0 R2                                                    // 0x4608
    ADDI R0 FE R0                                                // 0x7dfc
    MOV R2 R0                                                    // 0x4602
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    STRI CLB_temp_sensor_ctl2_0 20                               // 0x9010
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    DMAON 8 5                                                    // 0x58a8
    DMA CLB_temp_sensor_counter_0 HWS_PGXSENSDATA_0 1            // 0xc615
    STRI CLB_temp_sensor_ctl2_2 01                               // 0x8092
    STRI CLB_temp_sensor_ctl2_2 00                               // 0x8012
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    MOV R0 R3                                                    // 0x460c
    ANDI R0 07 R0                                                // 0x700e
    LDR ISP_SWSPAD_27_3 R1                                       // 0x54ef (temp_sens_dem_ctl: 2:6 ,dem_len: 2:4 ,dem_pointer: 4:0 ,)
    ANDI R1 f0 R1                                                // 0x73e1
    OR R0 R0 R1                                                  // 0x4050
    STR ISP_SWSPAD_27_3 R0                                       // 0x166f (temp_sens_dem_ctl: 2:6 ,dem_len: 2:4 ,dem_pointer: 4:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end Spu_TempSensor_dig_ctl

start ROM Spu_TempSensor_analog_ctl		// index: 7107, table index: 67
    REG2 R1 0x8                                                  // 0x5c11
    SETBNK 3 5                                                   // 0x5e53
    SETCLR 0 R1 CLB_TEMP_SENSOR_CTL2_1                           // 0x6a46 (Reserved_15_15: 1:7 ,dem_smp_auto_reset: 1:6 ,temp_sens_amp_dem_en: 1:5 ,counter_type: 1:4 ,dem_ana_ctl: 1:3 ,dcdc_div: 2:1 ,trace_buffer_en: 1:0 ,)
    LDR ISP_SWSPAD_27_3 R0                                       // 0x546f (temp_sens_dem_ctl: 2:6 ,dem_len: 2:4 ,dem_pointer: 4:0 ,)
    ANDI R0 0xf R0                                               // 0x701e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    ANDI R0 07 R0                                                // 0x700e
    MOV R3 R0                                                    // 0x4603
    LDR ISP_SWSPAD_27_3 R0                                       // 0x546f (temp_sens_dem_ctl: 2:6 ,dem_len: 2:4 ,dem_pointer: 4:0 ,)
    ANDI R0 0x30 R0                                              // 0x7060
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    REG R1 1                                                     // 0x4203
    SHIFTL R2 R1 R0                                              // 0x40c6
    ANDI R0 FF R0                                                // 0x71fe
    MOV R1 R3                                                    // 0x460d
    ANDI R1 FF R1                                                // 0x73ff
    MOV R0 R2                                                    // 0x4608
    ANDI R0 FF R0                                                // 0x71fe
    SBEQ load_dem_4                                              // 0x5a10
    STRI CLB_temp_sensor_ctl_0 40                                // 0xa00c
    STRI CLB_temp_sensor_ctl_1 fa                                // 0xfd0d
    SBNEQ finish_load                                            // 0x5a0f
    STRI CLB_temp_sensor_ctl_0 fa                                // 0xfd0c
    STRI CLB_temp_sensor_ctl_1 40                                // 0xa00d
    STRI CLB_temp_sensor_ctl2_3 02                               // 0x8113
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    REG R1 1                                                     // 0x4203
    SBEQ label_done_mid                                          // 0x5ac0
    MOV R1 R3                                                    // 0x460d
    SBEQ load_dem_6                                              // 0x5a10
    STRI CLB_temp_sensor_ctl_0 a4                                // 0xd20c
    STRI CLB_temp_sensor_ctl_1 0f                                // 0x878d
    SBNEQ finish_load2                                           // 0x5a0f
    STRI CLB_temp_sensor_ctl_0 0f                                // 0x878c
    STRI CLB_temp_sensor_ctl_1 a4                                // 0xd20d
    REG R1 2                                                     // 0x4205
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    SBEQ label_done_mid                                          // 0x5a98
    MOV R0 R2                                                    // 0x4608
    ADDI R0 FE R0                                                // 0x7dfc
    MOV R2 R0                                                    // 0x4602
    MOV R0 R3                                                    // 0x460c
    ADDI R0 02 R0                                                // 0x7c04
    MOV R3 R0                                                    // 0x4603
    REG R1 4                                                     // 0x4209
    SBEQ label_dem4                                              // 0x5a48
    REG R1 6                                                     // 0x420d
    SBEQ label_dem6                                              // 0x5a7c
    STRI CLB_temp_sensor_ctl_0 03                                // 0x818c
    STRI CLB_temp_sensor_ctl_1 e9                                // 0xf48d
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    STRI CLB_temp_sensor_ctl_0 fa                                // 0xfd0c
    STRI CLB_temp_sensor_ctl_1 40                                // 0xa00d
    MOV R0 R2                                                    // 0x4608
    ADDI R0 FE R0                                                // 0x7dfc
    MOV R2 R0                                                    // 0x4602
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    REG R1 0                                                     // 0x4201
    SBEQ label_done_mid                                          // 0x5a3c
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    STRI CLB_temp_sensor_ctl_0 90                                // 0xc80c
    STRI CLB_temp_sensor_ctl_1 3e                                // 0x9f0d
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    STRI CLB_temp_sensor_ctl_0 0f                                // 0x878c
    STRI CLB_temp_sensor_ctl_1 a4                                // 0xd20d
    MOV R0 R2                                                    // 0x4608
    ADDI R0 FE R0                                                // 0x7dfc
    MOV R2 R0                                                    // 0x4602
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    REG R1 0                                                     // 0x4201
    SBEQ label_done                                              // 0x5a30
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    STRI CLB_temp_sensor_ctl_0 e9                                // 0xf48c
    STRI CLB_temp_sensor_ctl_1 03                                // 0x818d
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    MOV R0 R2                                                    // 0x4608
    ADDI R0 FE R0                                                // 0x7dfc
    MOV R2 R0                                                    // 0x4602
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    STRI CLB_temp_sensor_ctl2_0 20                               // 0x9010
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    DMAON 8 5                                                    // 0x58a8
    DMA CLB_temp_sensor_counter_0 HWS_PGXSENSDATA_0 1            // 0xc615
    STRI CLB_temp_sensor_ctl2_2 01                               // 0x8092
    STRI CLB_temp_sensor_ctl2_2 00                               // 0x8012
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    MOV R0 R3                                                    // 0x460c
    ANDI R0 07 R0                                                // 0x700e
    LDR ISP_SWSPAD_27_3 R1                                       // 0x54ef (temp_sens_dem_ctl: 2:6 ,dem_len: 2:4 ,dem_pointer: 4:0 ,)
    ANDI R1 f0 R1                                                // 0x73e1
    OR R0 R0 R1                                                  // 0x4050
    STR ISP_SWSPAD_27_3 R0                                       // 0x166f (temp_sens_dem_ctl: 2:6 ,dem_len: 2:4 ,dem_pointer: 4:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end Spu_TempSensor_analog_ctl

start ROM Spu_TempSensor_first_boot_ctl		// index: 7133, table index: 68
    REG2 R1 0x1                                                  // 0x5c03
    SETBNK 3 5                                                   // 0x5e53
    SETCLR 0 R1 CLB_TEMP_SENSOR_CTL2_3                           // 0x6a4e (Reserved_31_26: 6:2 ,kickstart_en: 1:1 ,pos_neg_event: 1:0 ,)
    REG2 R1 0x2                                                  // 0x5c05
    SETCLR 0 R1 CLB_TEMP_SENSOR_CTL2_3                           // 0x6a4e (Reserved_31_26: 6:2 ,kickstart_en: 1:1 ,pos_neg_event: 1:0 ,)
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    REG2 R1 0x20                                                 // 0x5c41
    SETCLR 0 R1 CLB_TEMP_SENSOR_CTL2_0                           // 0x6a42 (Reserved_7_6: 2:6 ,freeze_hw_sample: 1:5 ,dem2_sample: 1:4 ,dem1_sample: 1:3 ,dem_reset: 1:2 ,counter_freeze: 1:1 ,counter_reset: 1:0 ,)
    EVCMD FMU_TEMP_SENSOR_CLOCK_POSEDGE CLR_EV_ENABLE WFE_ENABLE   // 0x61c2
    DMAON 8 5                                                    // 0x58a8
    DMA CLB_temp_sensor_counter_0 HWS_PGXSENSDATA_0 1            // 0xc615
    STRI CLB_temp_sensor_ctl2_2 01                               // 0x8092
    STRI CLB_temp_sensor_ctl2_2 00                               // 0x8012
    REG R1 1                                                     // 0x4203
    ADD R3 R3 R1                                                 // 0x415f
    MOV R0 R3                                                    // 0x460c
    ANDI R0 07 R0                                                // 0x700e
    LDR ISP_SWSPAD_27_3 R1                                       // 0x54ef (temp_sens_dem_ctl: 2:6 ,dem_len: 2:4 ,dem_pointer: 4:0 ,)
    ANDI R1 f0 R1                                                // 0x73e1
    OR R0 R0 R1                                                  // 0x4050
    STR ISP_SWSPAD_27_3 R0                                       // 0x166f (temp_sens_dem_ctl: 2:6 ,dem_len: 2:4 ,dem_pointer: 4:0 ,)
end Spu_TempSensor_first_boot_ctl

start ROM Spu_TempSensor_ctl		// index: 7139, table index: 69
 SETBAR 3 0                                                      // 0x5e03
 LDR ISP_SWSPAD_27_3 R0                                          // 0x546f (temp_sens_dem_ctl: 2:6 ,dem_len: 2:4 ,dem_pointer: 4:0 ,)
 ANDI R0 c0 R0                                                   // 0x7180
 REG R1 00                                                       // 0x4201
 SBEQ jump_to_dig_ctl                                            // 0x5a24
 REG R1 40                                                       // 0x4281
 SBEQ jump_to_ana_ctl                                            // 0x5a3c
 REG R1 80                                                       // 0x4301
 SBEQ jump_to_dig_ctl_srr                                        // 0x5a24
 JUMP_LINK 0 Spu_TempSensor_first_boot_ctl                       // 0x4488
 REG R0 00                                                       // 0x4200
 REG R1 00                                                       // 0x4201
 SBEQ done                                                       // 0x5a28
 JUMP_LINK 0 Spu_TempSensor_dig_ctl                              // 0x4484
 REG R0 00                                                       // 0x4200
 REG R1 00                                                       // 0x4201
 SBEQ done                                                       // 0x5a18
 JUMP_LINK 0 Spu_TempSensor_dig_ctl_srr                          // 0x4480
 REG R0 00                                                       // 0x4200
 REG R1 00                                                       // 0x4201
 SBEQ done                                                       // 0x5a08
 JUMP_LINK 0 Spu_TempSensor_analog_ctl                           // 0x4486
REG R1 00                                                        // 0x0201
AND R0 R0 R0                                                     // 0x0000
end Spu_TempSensor_ctl

start ROM Spu_TempSensorInit_ctl		// index: 7145, table index: 70
    SETBAR 3 0                                                   // 0x5e03
    LDR ISP_SWSPAD_27_3 R0                                       // 0x546f (temp_sens_dem_ctl: 2:6 ,dem_len: 2:4 ,dem_pointer: 4:0 ,)
    ANDI R0 c0 R0                                                // 0x7180
    REG R1 80                                                    // 0x4301
    SBEQ jump_to_init_from_srr                                   // 0x5a14
    JUMP_LINK 0 Spu_TempSensorInit                               // 0x4482
    REG R0 00                                                    // 0x4200
    REG R1 00                                                    // 0x4201
    SBEQ done                                                    // 0x5a08
    JUMP_LINK 0 Spu_TempSensorSrrInit                            // 0x447e
    REG R1 00                                                    // 0x0201
    AND R0 R0 R0                                                 // 0x0000
end Spu_TempSensorInit_ctl

start ROM SpuRomConfigClbForTempSense		// index: 7148, table index: 71
    SETBNK 2 5                                                   // 0x5e52
    LDR ISP_SWSPAD_13_2 R0                                       // 0x5476 (coarse_ctl_coarse_step_size: 4:4 ,first_packet_ind: 1:3 ,state_operation_done_ind: 1:2 ,high_to_mid_gear_shift_ind: 1:1 ,temp_sensor_counter_type: 1:0 ,)
    ANDI R0 0x1 R0                                               // 0x7002
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    LDR CLB_TEMP_SENSOR_CTL2_1 R1                                // 0x5491 (Reserved_15_15: 1:7 ,dem_smp_auto_reset: 1:6 ,temp_sens_amp_dem_en: 1:5 ,counter_type: 1:4 ,dem_ana_ctl: 1:3 ,dcdc_div: 2:1 ,trace_buffer_en: 1:0 ,)
    ANDI R1 0xef R1                                              // 0x73df
    SHIFTI R0 R0 0x4 0                                           // 0x4840
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    STR CLB_TEMP_SENSOR_CTL2_1 R1                                // 0x5691 (Reserved_15_15: 1:7 ,dem_smp_auto_reset: 1:6 ,temp_sens_amp_dem_en: 1:5 ,counter_type: 1:4 ,dem_ana_ctl: 1:3 ,dcdc_div: 2:1 ,trace_buffer_en: 1:0 ,)
    SETBAR 3 5                                                   // 0x5e53
    LDR ISP_SWSPAD_30_1 R0                                       // 0x5479 (power_gearing_ind: 1:7 ,temp_sens_dcdc_div: 2:5 ,lo_freq_offset_sweep_status: 5:0 ,)
    ANDI R0 0x60 R0                                              // 0x70c0
    SHIFTI R0 R0 0x5 1                                           // 0x4950
    LDR CLB_TEMP_SENSOR_CTL2_1 R1                                // 0x5491 (Reserved_15_15: 1:7 ,dem_smp_auto_reset: 1:6 ,temp_sens_amp_dem_en: 1:5 ,counter_type: 1:4 ,dem_ana_ctl: 1:3 ,dcdc_div: 2:1 ,trace_buffer_en: 1:0 ,)
    ANDI R1 0xf9 R1                                              // 0x73f3
    SHIFTI R0 R0 0x1 0                                           // 0x4810
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x1 1                                           // 0x4910
    STR CLB_TEMP_SENSOR_CTL2_1 R1                                // 0x5691 (Reserved_15_15: 1:7 ,dem_smp_auto_reset: 1:6 ,temp_sens_amp_dem_en: 1:5 ,counter_type: 1:4 ,dem_ana_ctl: 1:3 ,dcdc_div: 2:1 ,trace_buffer_en: 1:0 ,)
    DMAON 1 8                                                    // 0x5901
    DMA ISP_SWSPAD_01 CLB_FMU_PARAM1 1                           // 0x8441
end SpuRomConfigClbForTempSense

start ROM SpuRomTempSensorCfgOtpToOvl		// index: 7154, table index: 72
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_FMU_PARAM1 ISP_SWSPAD_01 1                       // 0x8052
end SpuRomTempSensorCfgOtpToOvl

start ROM SpuRomRcSensCfgOtpToOvl		// index: 7155, table index: 73
    DMAON 21 1                                                   // 0x5835
    DMA HWS_DEF_RC_SENS_HWS_STATIC_0 ISP_SWSPAD_00 3             // 0x9032
end SpuRomRcSensCfgOtpToOvl

start ROM SpuRomConfigHwsForRcSensing		// index: 7156, table index: 74
    REG2 R1 0x2                                                  // 0x5c05
    SETBNK 2 0                                                   // 0x5e02
    SETCLR 0 R1 HWS_HWSINTCTL_0                                  // 0x6a02 (Reserved_7_3: 5:3 ,pgen_clb: 1:2 ,pgen_isp: 1:1 ,pgen_mss: 1:0 ,)
    REG2 R1 0x4                                                  // 0x5c09
    SETCLR 0 R1 HWS_HWSINTCTL_0                                  // 0x6a02 (Reserved_7_3: 5:3 ,pgen_clb: 1:2 ,pgen_isp: 1:1 ,pgen_mss: 1:0 ,)
    REG2 R1 0x2                                                  // 0x5c05
    SETCLR 0 R1 HWS_HWSINTCTL_1                                  // 0x6a06 (Reserved_15_11: 5:3 ,rsten_clb: 1:2 ,rsten_isp: 1:1 ,rsten_mss: 1:0 ,)
    REG2 R1 0x4                                                  // 0x5c09
    SETCLR 0 R1 HWS_HWSINTCTL_1                                  // 0x6a06 (Reserved_15_11: 5:3 ,rsten_clb: 1:2 ,rsten_isp: 1:1 ,rsten_mss: 1:0 ,)
    REG2 R1 0x1                                                  // 0x5c03
    SETCLR 0 R1 HWS_HWSINTCTL_2                                  // 0x6a0a (Reserved_31_18: 6:2 ,sw_b2bpdo: 1:1 ,sw_b2ben: 1:0 ,)
    TIMER 2 MUL_BY_2                                             // 0x6202
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x61e1
    DMAON 1 6                                                    // 0x58c1
    DMA ISP_SWSPAD_00 HWS_RC_SENS_HWS_STATIC_0 3                 // 0xd380
    LDR ISP_SWSPAD_03_0 R0                                       // 0x544c (swspad_03: 8:0 ,)
    SETBAR 2 3                                                   // 0x5e32
    STR HWS_RC_SENS_CMD_0 R0                                     // 0x5604 (rc_sens_running_number: 4:4 ,rc_sens_clk_sel: 1:3 ,rc_sens_icap_cal_en: 1:2 ,rc_sens_res_mode_cfg: 1:1 ,rc_sens_cap_mode_cfg: 1:0 ,)
    LDR ISP_SWSPAD_03_1 R0                                       // 0x544d (swspad_03: 8:0 ,)
    ANDI R0 04 R0                                                // 0x7008
    LDR HWS_RC_SENS_CMD_1 R1                                     // 0x5485 (Reserved_15_12: 4:4 ,rc_sens_event_acc_en: 1:3 ,rc_sens_icap_en: 1:2 ,rc_sens_vref_en: 1:1 ,rc_sens_iref_icap_en: 1:0 ,)
    ADD R0 R0 R1                                                 // 0x4150
    STR HWS_RC_SENS_CMD_1 R0                                     // 0x1605 (Reserved_15_12: 4:4 ,rc_sens_event_acc_en: 1:3 ,rc_sens_icap_en: 1:2 ,rc_sens_vref_en: 1:1 ,rc_sens_iref_icap_en: 1:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomConfigHwsForRcSensing

start ROM SpuRomRcSensSetParams		// index: 7162, table index: 75
    SETBAR 0 3                                                   // 0x5e30
    LDR HWS_RC_SENS_CMD_0 R0                                     // 0x5404 (rc_sens_running_number: 4:4 ,rc_sens_clk_sel: 1:3 ,rc_sens_icap_cal_en: 1:2 ,rc_sens_res_mode_cfg: 1:1 ,rc_sens_cap_mode_cfg: 1:0 ,)
    ANDI R0 03 R0                                                // 0x7006
    REG R1 01                                                    // 0x4203
    SBEQ CAP_PARAMS                                              // 0x5a20
    SETBAR 0 2                                                   // 0x5e20
    STRI HWS_RC_SENS_HWS_STATIC_1_0 0x0                          // 0x803c (rc_sens_vref_cfg: 8:0 ,)
    SETBAR 0 3                                                   // 0x5e30
    STRI HWS_RC_SENS_HWS_WS_VALUES_0 0x80                        // 0xc000 (rc_sens_iref_cfg: 8:0 ,)
    REG R0 00                                                    // 0x4200
    REG R1 00                                                    // 0x4201
    SBEQ DONE                                                    // 0x5a14
    SETBAR 0 2                                                   // 0x5e20
    STRI HWS_RC_SENS_HWS_STATIC_1_0 0xa                          // 0x853c (rc_sens_vref_cfg: 8:0 ,)
    SETBAR 0 3                                                   // 0x5e30
    STRI HWS_RC_SENS_HWS_WS_VALUES_1 0x0                         // 0x8001 (rc_sens_iref_icap_cfg: 8:0 ,)
    REG R0 0                                                     // 0x0200
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRcSensSetParams

start ROM SpuRomRcMaskLc		// index: 7167, table index: 76
    SETBAR 0 3                                                   // 0x5e30
    LDR HWS_RC_SENS_CMD_0 R0                                     // 0x5404 (rc_sens_running_number: 4:4 ,rc_sens_clk_sel: 1:3 ,rc_sens_icap_cal_en: 1:2 ,rc_sens_res_mode_cfg: 1:1 ,rc_sens_cap_mode_cfg: 1:0 ,)
    ANDI R0 0x8 R0                                               // 0x7010
    SHIFTI R0 R0 0x3 1                                           // 0x4930
    REG R1 00                                                    // 0x4201
    SBEQ DONE                                                    // 0x5a14
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_RDI_MASK_2 R0                                        // 0x542e (rc_sens_vref_sample_mask: 1:7 ,cbias_dcdc_x1p5_enable_mask: 1:6 ,lcaux_sample_vref_mask: 1:5 ,lcaux_refgen_en_mask: 1:4 ,lcaux_div_stat_rstn_mask: 1:3 ,lcaux_core_en_mask: 1:2 ,lcaux_ldo_en_mask: 1:1 ,fll_en_mask: 1:0 ,)
    ANDI R0 C1 R0                                                // 0x7182
    STR HWS_RDI_MASK_2 R0                                        // 0x562e (rc_sens_vref_sample_mask: 1:7 ,cbias_dcdc_x1p5_enable_mask: 1:6 ,lcaux_sample_vref_mask: 1:5 ,lcaux_refgen_en_mask: 1:4 ,lcaux_div_stat_rstn_mask: 1:3 ,lcaux_core_en_mask: 1:2 ,lcaux_ldo_en_mask: 1:1 ,fll_en_mask: 1:0 ,)
    OR R0 R0 R0                                                  // 0x0040
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRcMaskLc

start ROM SpuRomRcSensFunc		// index: 7170, table index: 77
    SETBNK 2 3                                                   // 0x5e32
    STRI HWS_RC_SENS_CMD_2 01                                    // 0x8086 (Reserved_23_17: 7:1 ,rc_sens_go: 1:0 ,)
    LDR ISP_SWSPAD_03_2 R0                                       // 0x544e (swspad_03: 8:0 ,)
    TIMER 0 MUL_BY_32                                            // 0x6300
    EVCMD RC_SENS_EVENT CLR_EV_ENABLE WFE_ENABLE                 // 0x61a4
    SETBNK 3 6                                                   // 0x5e63
    LDR ISP_EVENTS_0 R0                                          // 0x5418 (rc_sens_event: 1:7 ,rtc_event: 1:6 ,pgx_event: 1:5 ,sec_done: 1:4 ,fmu_done: 1:3 ,fll_done: 1:2 ,pgx_done: 1:1 ,mss_done: 1:0 ,)
    ANDI R0 0x80 R0                                              // 0x7100
    SHIFTI R0 R0 0x7 1                                           // 0x4970
    REG R1 01                                                    // 0x4203
       SBEQ RC_SENS_DONE                                         // 0x5a0c
    REG2 R1 0x10                                                 // 0x5c21
    SETCLR 0 R1 ISP_SWSPAD_21_3                                  // 0x6b5e (awdt_exception_cause_status: 1:7 ,rwdt_exception_cause_status: 1:6 ,nrgdet_exception_cause_status: 1:5 ,timer_exception_cause_status: 1:4 ,aux_meas_ch_ctr: 4:0 ,)
    SETBAR 3 3                                                   // 0x5e33
    STRI HWS_RC_SENS_CMD_3 01                                    // 0x8087 (Reserved_31_25: 7:1 ,rc_sens_done: 1:0 ,)
    STRI HWS_RC_SENS_CMD_3 00                                    // 0x8007 (Reserved_31_25: 7:1 ,rc_sens_done: 1:0 ,)
    TIMER STOP_TIMER MUL_BY_32                                   // 0x63fe
    REG R1 0                                                     // 0x0201
end SpuRomRcSensFunc

start ROM SpuRomDisableRadioTurnOff		// index: 7175, table index: 78
    REG2 R1 0x2                                                  // 0x5c05
    SETBAR 0 0                                                   // 0x5e00
    SETCLR 1 R1 HWS_RADIO_MODE_2                                 // 0x2aab (tx_beacon_packet_size: 5:3 ,sym_div_sel: 1:2 ,hw_radio_turn_off_en: 1:1 ,lo_buffer_rdi_pend_start: 1:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomDisableRadioTurnOff

start ROM SpuRomEnableRadioTurnOff		// index: 7176, table index: 79
    REG2 R1 0x2                                                  // 0x5c05
    SETBAR 0 0                                                   // 0x5e00
    SETCLR 0 R1 HWS_RADIO_MODE_2                                 // 0x2aaa (tx_beacon_packet_size: 5:3 ,sym_div_sel: 1:2 ,hw_radio_turn_off_en: 1:1 ,lo_buffer_rdi_pend_start: 1:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomEnableRadioTurnOff

start ROM SpuRomSetRadioForTx		// index: 7177, table index: 80
    SETBAR 3 0                                                   // 0x5e03
    LDR ISP_SWSPAD_27_0 R0                                       // 0x546c (rc_sensor_interface_sel: 1:7 ,temp_event_consec_event_counter: 2:5 ,txdf_offset_for_2mhz_symbol_rate: 4:1 ,lo_high_power_mode_en: 1:0 ,)
    ANDI R0 0x1 R0                                               // 0x7002
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    MOV R2 R0                                                    // 0x4602
    REG R1 00                                                    // 0x4201
    SBEQ JUMP_TO_INIT_LV                                         // 0x5a0c
    REG R1 01                                                    // 0x4203
    SBEQ JUMP_TO_INIT_HV                                         // 0x5a14
     JUMP_LINK SpuRomRadioInitForTxLv                            // 0x4402
     REG R0 00                                                   // 0x4200
     REG R1 00                                                   // 0x4201
     SBEQ CONTINUE_TO_MODE                                       // 0x5a08
     JUMP_LINK SpuRomRadioInitForTxHv                            // 0x4406
     JUMP_LINK SpuRomMemCopyRadioInit                            // 0x444c
     MOV R0 R2                                                   // 0x4608
     REG R1 00                                                   // 0x4201
    SBEQ JUMP_TO_MODE_LV                                         // 0x5a0c
    REG R1 01                                                    // 0x4203
    SBEQ JUMP_TO_MODE_HV                                         // 0x5a14
     JUMP_LINK SpuRomRadioModeForTxLv                            // 0x4400
     REG R0 00                                                   // 0x4200
     REG R1 00                                                   // 0x4201
     SBEQ DONE                                                   // 0x5a08
     JUMP_LINK SpuRomRadioModeForTxHv                            // 0x4404
    REG R1 00                                                    // 0x0201
end SpuRomSetRadioForTx

start ROM SpuRomSetRadioForSymCalib		// index: 7184, table index: 81
    SETBAR 3 0                                                   // 0x5e03
    LDR ISP_SWSPAD_27_0 R0                                       // 0x546c (rc_sensor_interface_sel: 1:7 ,temp_event_consec_event_counter: 2:5 ,txdf_offset_for_2mhz_symbol_rate: 4:1 ,lo_high_power_mode_en: 1:0 ,)
    ANDI R0 0x1 R0                                               // 0x7002
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    MOV R2 R0                                                    // 0x4602
    REG R1 00                                                    // 0x4201
    SBEQ JUMP_TO_INIT_LV                                         // 0x5a0c
    REG R1 01                                                    // 0x4203
    SBEQ JUMP_TO_INIT_HV                                         // 0x5a14
     JUMP_LINK SpuRomRadioInitForSymCalibLv                      // 0x440a
     REG R0 00                                                   // 0x4200
     REG R1 00                                                   // 0x4201
     SBEQ CONTINUE_TO_MODE                                       // 0x5a08
     JUMP_LINK SpuRomRadioInitForSymCalibHv                      // 0x440e
     JUMP_LINK SpuRomMemCopyRadioInit                            // 0x444c
     MOV R0 R2                                                   // 0x4608
     REG R1 00                                                   // 0x4201
    SBEQ JUMP_TO_MODE_LV                                         // 0x5a0c
    REG R1 01                                                    // 0x4203
    SBEQ JUMP_TO_MODE_HV                                         // 0x5a14
     JUMP_LINK SpuRomRadioModeForSymCalibLv                      // 0x4408
     REG R0 00                                                   // 0x4200
     REG R1 00                                                   // 0x4201
     SBEQ DONE                                                   // 0x5a08
     JUMP_LINK SpuRomRadioModeForSymCalibHv                      // 0x440c
    REG R1 00                                                    // 0x0201
end SpuRomSetRadioForSymCalib

start ROM SpuRomSetRadioForLoCalib		// index: 7191, table index: 82
    SETBAR 3 0                                                   // 0x5e03
    LDR ISP_SWSPAD_27_0 R0                                       // 0x546c (rc_sensor_interface_sel: 1:7 ,temp_event_consec_event_counter: 2:5 ,txdf_offset_for_2mhz_symbol_rate: 4:1 ,lo_high_power_mode_en: 1:0 ,)
    ANDI R0 0x1 R0                                               // 0x7002
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    MOV R2 R0                                                    // 0x4602
    REG R1 00                                                    // 0x4201
    SBEQ JUMP_TO_INIT_LV                                         // 0x5a0c
    REG R1 01                                                    // 0x4203
    SBEQ JUMP_TO_INIT_HV                                         // 0x5a14
     JUMP_LINK SpuRomRadioInitForLoCalibLv                       // 0x4412
     REG R0 00                                                   // 0x4200
     REG R1 00                                                   // 0x4201
     SBEQ CONTINUE_TO_MODE                                       // 0x5a08
     JUMP_LINK SpuRomRadioInitForLoCalibHv                       // 0x4416
     JUMP_LINK SpuRomMemCopyRadioInit                            // 0x444c
     MOV R0 R2                                                   // 0x4608
     REG R1 00                                                   // 0x4201
    SBEQ JUMP_TO_MODE_LV                                         // 0x5a0c
    REG R1 01                                                    // 0x4203
    SBEQ JUMP_TO_MODE_HV                                         // 0x5a14
     JUMP_LINK SpuRomRadioModeForLoCalibLv                       // 0x4410
     REG R0 00                                                   // 0x4200
     REG R1 00                                                   // 0x4201
     SBEQ DONE                                                   // 0x5a08
     JUMP_LINK SpuRomRadioModeForLoCalibHv                       // 0x4414
    REG R1 00                                                    // 0x0201
end SpuRomSetRadioForLoCalib

start ROM SpuRomSetRadioForMeasure		// index: 7198, table index: 83
    SETBAR 3 0                                                   // 0x5e03
    LDR ISP_SWSPAD_27_0 R0                                       // 0x546c (rc_sensor_interface_sel: 1:7 ,temp_event_consec_event_counter: 2:5 ,txdf_offset_for_2mhz_symbol_rate: 4:1 ,lo_high_power_mode_en: 1:0 ,)
    ANDI R0 0x1 R0                                               // 0x7002
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    MOV R2 R0                                                    // 0x4602
    REG R1 00                                                    // 0x4201
    SBEQ JUMP_TO_INIT_LV                                         // 0x5a0c
    REG R1 01                                                    // 0x4203
    SBEQ JUMP_TO_INIT_HV                                         // 0x5a14
     JUMP_LINK SpuRomRadioInitForMeasureLv                       // 0x441a
     REG R0 00                                                   // 0x4200
     REG R1 00                                                   // 0x4201
     SBEQ CONTINUE_TO_MODE                                       // 0x5a08
     JUMP_LINK SpuRomRadioInitForMeasureHv                       // 0x441e
     JUMP_LINK SpuRomMemCopyRadioInit                            // 0x444c
     MOV R0 R2                                                   // 0x4608
     REG R1 00                                                   // 0x4201
    SBEQ JUMP_TO_MODE_LV                                         // 0x5a0c
    REG R1 01                                                    // 0x4203
    SBEQ JUMP_TO_MODE_HV                                         // 0x5a14
     JUMP_LINK SpuRomRadioModeForMeasureLv                       // 0x4418
     REG R0 00                                                   // 0x4200
     REG R1 00                                                   // 0x4201
     SBEQ DONE                                                   // 0x5a08
     JUMP_LINK SpuRomRadioModeForMeasureHv                       // 0x441c
    REG R1 00                                                    // 0x0201
end SpuRomSetRadioForMeasure

start ROM SpuRomSetRadioForRcSens		// index: 7205, table index: 84
    SETBAR 0 3                                                   // 0x5e30
    LDR HWS_RC_SENS_CMD_0 R0                                     // 0x5404 (rc_sens_running_number: 4:4 ,rc_sens_clk_sel: 1:3 ,rc_sens_icap_cal_en: 1:2 ,rc_sens_res_mode_cfg: 1:1 ,rc_sens_cap_mode_cfg: 1:0 ,)
    ANDI R0 03 R0                                                // 0x7006
    MOV R2 R0                                                    // 0x4602
    REG R1 01                                                    // 0x4203
    SBEQ JUMP_TO_INIT_CAP                                        // 0x5a0c
    REG R1 02                                                    // 0x4205
    SBEQ JUMP_TO_INIT_RES                                        // 0x5a14
     JUMP_LINK SpuRomRadioInitForRcSensCap                       // 0x442a
     REG R0 00                                                   // 0x4200
     REG R1 00                                                   // 0x4201
     SBEQ CONTINUE_TO_MODE                                       // 0x5a08
     JUMP_LINK SpuRomRadioInitForRcSensRes                       // 0x442e
     JUMP_LINK SpuRomMemCopyRadioInit                            // 0x444c
     MOV R0 R2                                                   // 0x4608
     REG R1 01                                                   // 0x4203
    SBEQ JUMP_TO_MODE_CAP                                        // 0x5a0c
    REG R1 02                                                    // 0x4205
    SBEQ JUMP_TO_MODE_RES                                        // 0x5a14
     JUMP_LINK SpuRomRadioModeForRcSensCap                       // 0x4428
     REG R0 00                                                   // 0x4200
     REG R1 00                                                   // 0x4201
     SBEQ DONE                                                   // 0x5a08
     JUMP_LINK SpuRomRadioModeForRcSensRes                       // 0x442c
    REG R1 00                                                    // 0x0201
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetRadioForRcSens

start ROM SpuRomSetRadioForLoDivSym		// index: 7212, table index: 85
    SETBAR 3 0                                                   // 0x5e03
    LDR ISP_SWSPAD_27_0 R0                                       // 0x546c (rc_sensor_interface_sel: 1:7 ,temp_event_consec_event_counter: 2:5 ,txdf_offset_for_2mhz_symbol_rate: 4:1 ,lo_high_power_mode_en: 1:0 ,)
    ANDI R0 0x1 R0                                               // 0x7002
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    MOV R2 R0                                                    // 0x4602
    REG R1 00                                                    // 0x4201
    SBEQ JUMP_TO_INIT_LV                                         // 0x5a0c
    REG R1 01                                                    // 0x4203
    SBEQ JUMP_TO_INIT_HV                                         // 0x5a14
     JUMP_LINK SpuRomRadioInitForLoDivSymLv                      // 0x4432
     REG R0 00                                                   // 0x4200
     REG R1 00                                                   // 0x4201
     SBEQ CONTINUE_TO_MODE                                       // 0x5a08
     JUMP_LINK SpuRomRadioInitForLoDivSymHv                      // 0x4436
     JUMP_LINK SpuRomMemCopyRadioInit                            // 0x444c
     MOV R0 R2                                                   // 0x4608
     REG R1 00                                                   // 0x4201
    SBEQ JUMP_TO_MODE_LV                                         // 0x5a0c
    REG R1 01                                                    // 0x4203
    SBEQ JUMP_TO_MODE_HV                                         // 0x5a14
     JUMP_LINK SpuRomRadioModeForLoDivSymLv                      // 0x4430
     REG R0 00                                                   // 0x4200
     REG R1 00                                                   // 0x4201
     SBEQ DONE                                                   // 0x5a08
     JUMP_LINK SpuRomRadioModeForLoDivSymHv                      // 0x4434
    REG R1 00                                                    // 0x0201
end SpuRomSetRadioForLoDivSym

start ROM SpuRomSetRadioForMeasLoVrefVbpCalib		// index: 7219, table index: 86
    SETBAR 2 0                                                   // 0x5e02
    LDR ISP_SWSPAD_13_1 R0                                       // 0x5475 (rc_sensor_calib_en: 1:7 ,rc_sensor_cap_or_res_ind: 1:6 ,rc_sensor_active_clk_or_lcaux_ind: 1:5 ,lo_vref_vbp_calib_use_lcaux_or_symbol_ind: 1:4 ,dont_inc_timeout_ctr_ind: 1:3 ,signal_at_adv_beacon_for_post_verify_first: 1:2 ,aux_meas_est_func_hyp_ctr: 2:0 ,)
    ANDI R0 0x10 R0                                              // 0x7020
    SHIFTI R0 R0 0x4 1                                           // 0x4940
     REG R1 00                                                   // 0x4201
    SBEQ JUMP_TO_SYMBOL                                          // 0x5a0c
    REG R1 01                                                    // 0x4203
    SBEQ JUMP_TO_LCAUX                                           // 0x5a14
     JUMP_LINK SpuRomSetRadioForSymCalib                         // 0x44a2
     REG R0 00                                                   // 0x4200
     REG R1 00                                                   // 0x4201
     SBEQ DONE                                                   // 0x5a08
     JUMP_LINK SpuRomSetRadioForLoCalib                          // 0x44a4
    REG R1 00                                                    // 0x0201
end SpuRomSetRadioForMeasLoVrefVbpCalib

start ROM SpuRomSetRadioForMeasLoVrefVbpCalibNoSampling		// index: 7223, table index: 87
    SETBAR 3 0                                                   // 0x5e03
    LDR ISP_SWSPAD_27_0 R0                                       // 0x546c (rc_sensor_interface_sel: 1:7 ,temp_event_consec_event_counter: 2:5 ,txdf_offset_for_2mhz_symbol_rate: 4:1 ,lo_high_power_mode_en: 1:0 ,)
    ANDI R0 0x1 R0                                               // 0x7002
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    MOV R2 R0                                                    // 0x4602
    REG R1 00                                                    // 0x4201
    SBEQ JUMP_TO_INIT_LV                                         // 0x5a0c
    REG R1 01                                                    // 0x4203
    SBEQ JUMP_TO_INIT_HV                                         // 0x5a14
     JUMP_LINK SpuRomRadioInitForLoVrefVbpCalibLv                // 0x443a
     REG R0 00                                                   // 0x4200
     REG R1 00                                                   // 0x4201
     SBEQ CONTINUE_TO_MODE                                       // 0x5a08
     JUMP_LINK SpuRomRadioInitForLoVrefVbpCalibHv                // 0x443e
     JUMP_LINK SpuRomMemCopyRadioInit                            // 0x444c
     MOV R0 R2                                                   // 0x4608
     REG R1 00                                                   // 0x4201
    SBEQ JUMP_TO_MODE_LV                                         // 0x5a0c
    REG R1 01                                                    // 0x4203
    SBEQ JUMP_TO_MODE_HV                                         // 0x5a14
     JUMP_LINK SpuRomRadioModeForLoVrefVbpCalibLv                // 0x4438
     REG R0 00                                                   // 0x4200
     REG R1 00                                                   // 0x4201
     SBEQ DONE                                                   // 0x5a08
     JUMP_LINK SpuRomRadioModeForLoVrefVbpCalibHv                // 0x443c
    REG R1 00                                                    // 0x0201
end SpuRomSetRadioForMeasLoVrefVbpCalibNoSampling

start ROM SpuRomSetRadioForDFmeas		// index: 7230, table index: 88
    SETBAR 3 0                                                   // 0x5e03
    LDR ISP_SWSPAD_27_0 R0                                       // 0x546c (rc_sensor_interface_sel: 1:7 ,temp_event_consec_event_counter: 2:5 ,txdf_offset_for_2mhz_symbol_rate: 4:1 ,lo_high_power_mode_en: 1:0 ,)
    ANDI R0 0x1 R0                                               // 0x7002
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    MOV R2 R0                                                    // 0x4602
    REG R1 00                                                    // 0x4201
    SBEQ JUMP_TO_INIT_LV                                         // 0x5a0c
    REG R1 01                                                    // 0x4203
    SBEQ JUMP_TO_INIT_HV                                         // 0x5a14
     JUMP_LINK SpuRomRadioInitForTxlvDFmeas                      // 0x4442
     REG R0 00                                                   // 0x4200
     REG R1 00                                                   // 0x4201
     SBEQ CONTINUE_TO_MODE                                       // 0x5a08
     JUMP_LINK SpuRomRadioInitForTxhvDFmeas                      // 0x4446
     JUMP_LINK SpuRomMemCopyRadioInit                            // 0x444c
     MOV R0 R2                                                   // 0x4608
     REG R1 00                                                   // 0x4201
    SBEQ JUMP_TO_MODE_LV                                         // 0x5a0c
    REG R1 01                                                    // 0x4203
    SBEQ JUMP_TO_MODE_HV                                         // 0x5a14
     JUMP_LINK SpuRomRadioModeForTxlvDFmeas                      // 0x4440
     REG R0 00                                                   // 0x4200
     REG R1 00                                                   // 0x4201
     SBEQ DONE                                                   // 0x5a08
     JUMP_LINK SpuRomRadioModeForTxhvDFmeas                      // 0x4444
    REG R1 00                                                    // 0x0201
end SpuRomSetRadioForDFmeas

start ROM SpuRomTurnOtpPowerOn		// index: 7237, table index: 89
   REG2 R1 0x40                                                  // 0x5c81
   SETBAR 0 0                                                    // 0x5e00
   SETCLR 1 R1 HWS_RADIO_MODE_1                                  // 0x2aa7 (lcaux_rdi_pend_start: 1:7 ,otp_power_off: 1:6 ,lo_extreme_txvdd_en: 1:5 ,lo_extreme_txbias_en: 1:4 ,lo_high_power_mode: 1:3 ,slow_clk_sel: 1:2 ,lo_tx_mode_en: 1:1 ,fast_lcaux_sel: 1:0 ,)
   AND R0 R0 R0                                                  // 0x0000
end SpuRomTurnOtpPowerOn

start ROM SpuRomTurnOtpPowerOff		// index: 7238, table index: 90
   REG2 R1 0x40                                                  // 0x5c81
   SETBAR 0 0                                                    // 0x5e00
   SETCLR 0 R1 HWS_RADIO_MODE_1                                  // 0x2aa6 (lcaux_rdi_pend_start: 1:7 ,otp_power_off: 1:6 ,lo_extreme_txvdd_en: 1:5 ,lo_extreme_txbias_en: 1:4 ,lo_high_power_mode: 1:3 ,slow_clk_sel: 1:2 ,lo_tx_mode_en: 1:1 ,fast_lcaux_sel: 1:0 ,)
   AND R0 R0 R0                                                  // 0x0000
end SpuRomTurnOtpPowerOff

start ROM SpuRomReduceSramAndRomDcdcFreq		// index: 7239, table index: 91
    REG2 R1 0x20                                                 // 0x5c41
    SETBAR 0 0                                                   // 0x5e00
    SETCLR 0 R1 HWS_RADIO_MODE_3                                 // 0x6aae (modulation_disable: 1:7 ,rom_dcdc_clk_div_ovr: 1:6 ,sram_dcdc_clk_div_ovr: 1:5 ,tdc_disable: 1:4 ,lo_cmfb_sample: 1:3 ,lo_symbol_data_rstb: 1:2 ,sym_src_sel: 1:1 ,tx_beacon_packet_size: 6:0 ,)
    REG2 R1 0x40                                                 // 0x5c81
    SETCLR 0 R1 HWS_RADIO_MODE_3                                 // 0x2aae (modulation_disable: 1:7 ,rom_dcdc_clk_div_ovr: 1:6 ,sram_dcdc_clk_div_ovr: 1:5 ,tdc_disable: 1:4 ,lo_cmfb_sample: 1:3 ,lo_symbol_data_rstb: 1:2 ,sym_src_sel: 1:1 ,tx_beacon_packet_size: 6:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomReduceSramAndRomDcdcFreq

start ROM SpuRomSetActiveClkDividerRatioToMax		// index: 7241, table index: 92
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR6_3 R1                                            // 0x54db (hrr_fast_clk_divider_ratio: 1:7 ,hrr_active_clk_divider_ratio: 2:5 ,hrr_active_clk_trim: 4:1 ,hrr_hrr6_24_20_reserved: 5:0 ,)
    ANDI R1 0x9f R1                                              // 0x733f
    ORI R1 0x40 R1                                               // 0x7681
    STR HWS_HRR6_3 R1                                            // 0x16db (hrr_fast_clk_divider_ratio: 1:7 ,hrr_active_clk_divider_ratio: 2:5 ,hrr_active_clk_trim: 4:1 ,hrr_hrr6_24_20_reserved: 5:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetActiveClkDividerRatioToMax

start ROM SpuRomRestoreActiveClkDividerRatio		// index: 7243, table index: 93
    SETBAR 11 0                                                  // 0x5e0b
    LDR HWS_DEF_HRR6_3 R0                                        // 0x547b (def_hrr_fast_clk_divider_ratio: 1:7 ,def_hrr_active_clk_divider_ratio: 2:5 ,def_hrr_active_clk_trim: 4:1 ,def_hrr_hrr6_24_20_reserved: 5:0 ,)
    ANDI R0 0x60 R0                                              // 0x70c0
    SHIFTI R0 R0 0x5 1                                           // 0x4950
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR6_3 R1                                            // 0x54db (hrr_fast_clk_divider_ratio: 1:7 ,hrr_active_clk_divider_ratio: 2:5 ,hrr_active_clk_trim: 4:1 ,hrr_hrr6_24_20_reserved: 5:0 ,)
    ANDI R1 0x9f R1                                              // 0x733f
    SHIFTI R0 R0 0x5 0                                           // 0x4850
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x5 1                                           // 0x4950
    STR HWS_HRR6_3 R1                                            // 0x16db (hrr_fast_clk_divider_ratio: 1:7 ,hrr_active_clk_divider_ratio: 2:5 ,hrr_active_clk_trim: 4:1 ,hrr_hrr6_24_20_reserved: 5:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRestoreActiveClkDividerRatio

start ROM Populate_Radio_ISP		// index: 7246, table index: 94
    DMAON 22 2                                                   // 0x5856
    DMA HWS_DEF_radio_ws_context_0 ISP_srr_spare_0 4             // 0x9813
end Populate_Radio_ISP

start ROM Populate_Radio_HWS		// index: 7247, table index: 95
    DMAON 2 5                                                    // 0x58a2
    DMA ISP_srr_spare_0 HWS_radio_ws_context_0 4                 // 0x9980
end Populate_Radio_HWS

start ROM Copy_AuxMeas_OTP_To_scratch		// index: 7248, table index: 96
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_msrctl0 ISP_SWSPAD_00 1                          // 0x8007
end Copy_AuxMeas_OTP_To_scratch

start ROM SPU_SET_Measurement_Configuration		// index: 7249, table index: 97
    SETBAR 0 0                                                   // 0x5e00
    STRI HWS_HWSINTCTL_0 06                                      // 0x8300 (Reserved_7_3: 5:3 ,pgen_clb: 1:2 ,pgen_isp: 1:1 ,pgen_mss: 1:0 ,)
    STRI HWS_HWSINTCTL_1 06                                      // 0x8301 (Reserved_15_11: 5:3 ,rsten_clb: 1:2 ,rsten_isp: 1:1 ,rsten_mss: 1:0 ,)
    STRI HWS_HWSINTCTL_2 03                                      // 0x8182 (Reserved_31_18: 6:2 ,sw_b2bpdo: 1:1 ,sw_b2ben: 1:0 ,)
    TIMER 2 MUL_BY_2                                             // 0x6202
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x61e1
    DMAON 1 8                                                    // 0x5901
    DMA ISP_swspad_00 CLB_msrctl0 1                              // 0x40c0
    DMA ISP_SWSPAD_14 CLB_msrctl1 2                              // 0xc90e
    SETBNK 4 4                                                   // 0x5e44
    STRI CLB_msrctl2_2 0x03                                      // 0x8196
    LDR ISP_SRR_SPARE_3_3 R0                                     // 0x544f (Reserved_31_28: 4:4 ,lohv_core_pch_w: 2:2 ,lohv_core_nch_w: 2:0 ,)
    STR CLB_clb_context0_0 R0                                    // 0x1608
    AND R0 R0 R0                                                 // 0x0000
end SPU_SET_Measurement_Configuration

start ROM Copy_LoCalib_OTP_To_scratch		// index: 7253, table index: 98
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_loctl0 ISP_SWSPAD_00 3                           // 0x900a
end Copy_LoCalib_OTP_To_scratch

start ROM SPU_SET_LO_Calibration_Configuration		// index: 7254, table index: 99
    SETBNK 4 0                                                   // 0x5e04
    STRI HWS_HWSINTCTL_0 06                                      // 0x8300 (Reserved_7_3: 5:3 ,pgen_clb: 1:2 ,pgen_isp: 1:1 ,pgen_mss: 1:0 ,)
    STRI HWS_HWSINTCTL_1 06                                      // 0x8301 (Reserved_15_11: 5:3 ,rsten_clb: 1:2 ,rsten_isp: 1:1 ,rsten_mss: 1:0 ,)
    STRI HWS_HWSINTCTL_2 03                                      // 0x8182 (Reserved_31_18: 6:2 ,sw_b2bpdo: 1:1 ,sw_b2ben: 1:0 ,)
    TIMER 2 MUL_BY_2                                             // 0x6202
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x61e1
    DMAON 1 8                                                    // 0x5901
    DMA ISP_SWSPAD_00 CLB_loctl0 3                               // 0x5180
    DMA ISP_SWSPAD_14 CLB_msrctl1 1                              // 0xc10e
    LDR ISP_SRR_SPARE_3_3 R0                                     // 0x544f (Reserved_31_28: 4:4 ,lohv_core_pch_w: 2:2 ,lohv_core_nch_w: 2:0 ,)
    SETBAR 4 4                                                   // 0x5e44
    STR CLB_clb_context0_0 R0                                    // 0x1608
end SPU_SET_LO_Calibration_Configuration

start ROM Copy_SymCalib_OTP_To_scratch		// index: 7257, table index: 100
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_symctl0 ISP_SWSPAD_00 3                          // 0x900d
end Copy_SymCalib_OTP_To_scratch

start ROM SPU_SET_Sym_Calibration_Configuration		// index: 7258, table index: 101
    SETBNK 4 0                                                   // 0x5e04
    STRI HWS_HWSINTCTL_0 06                                      // 0x8300 (Reserved_7_3: 5:3 ,pgen_clb: 1:2 ,pgen_isp: 1:1 ,pgen_mss: 1:0 ,)
    STRI HWS_HWSINTCTL_1 06                                      // 0x8301 (Reserved_15_11: 5:3 ,rsten_clb: 1:2 ,rsten_isp: 1:1 ,rsten_mss: 1:0 ,)
    STRI HWS_HWSINTCTL_2 03                                      // 0x8182 (Reserved_31_18: 6:2 ,sw_b2bpdo: 1:1 ,sw_b2ben: 1:0 ,)
    TIMER 2 MUL_BY_2                                             // 0x6202
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x61e1
    DMAON 1 8                                                    // 0x5901
    DMA ISP_SWSPAD_00 CLB_symctl0 3                              // 0xd240
    LDR ISP_SRR_SPARE_3_3 R0                                     // 0x544f (Reserved_31_28: 4:4 ,lohv_core_pch_w: 2:2 ,lohv_core_nch_w: 2:0 ,)
    SETBAR 4 4                                                   // 0x5e44
    STR CLB_clb_context0_0 R0                                    // 0x1608
    AND R0 R0 R0                                                 // 0x0000
end SPU_SET_Sym_Calibration_Configuration

start ROM SPU_SET_PGX_Configuration		// index: 7261, table index: 102
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_radio_mode_1 R0                                      // 0x5429
    ORI R0 04 R0                                                 // 0x7408
    STR HWS_radio_mode_1 R0                                      // 0x5629
    LDR HWS_radio_mode_0 R0                                      // 0x5428
    ORI R0 02 R0                                                 // 0x7404
    STR HWS_radio_mode_0 R0                                      // 0x5628
    LDR HWS_rdi_controls_1 R0                                    // 0x5431
    ORI R0 03 R0                                                 // 0x7406
    STR HWS_rdi_controls_1 R0                                    // 0x5631
    LDR HWS_rdi_controls_2 R0                                    // 0x5432
    ORI R0 03 R0                                                 // 0x7406
    STR HWS_rdi_controls_2 R0                                    // 0x5632
    LDR HWS_rdi_controls_0 R0                                    // 0x5430
    ORI R0 10 R0                                                 // 0x7420
    STR HWS_rdi_controls_0 R0                                    // 0x1630
end SPU_SET_PGX_Configuration

start ROM Copy_Measurement_To_ISP		// index: 7265, table index: 103
    DMAON 8 1                                                    // 0x5828
    DMA CLB_clbrslt0 ISP_SWSPAD_14 2                             // 0x8b8c
end Copy_Measurement_To_ISP

start ROM Copy_DataKeys_OTP_To_scratch		// index: 7266, table index: 104
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_data_key_0 ISP_SWSPAD_00 4                       // 0x9836
end Copy_DataKeys_OTP_To_scratch

start ROM Copy_IDKeys_OTP_To_scratch		// index: 7267, table index: 105
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_id_key_0 ISP_SWSPAD_04 4                         // 0x993a
end Copy_IDKeys_OTP_To_scratch

start ROM SPU_CopyTRNGToISP		// index: 7268, table index: 106
    DMAON 5 2                                                    // 0x5845
    DMA HWS_NONCE ISP_SRR_SPARE_10 1                             // 0x8293
end SPU_CopyTRNGToISP

start ROM SPU_PopulatePGX		// index: 7269, table index: 107
    DMAON 2 5                                                    // 0x58a2
    DMA ISP_SRR_SPARE_5 HWS_pgxsdata_1 5                         // 0x63c5
    DMA ISP_SRR_SPARE_10 HWS_nonce 6                             // 0xacca
    AND R0 R0 R0                                                 // 0x0000
end SPU_PopulatePGX

start ROM SpuRomCloseWkup		// index: 7270, table index: 108
    REG2 R1 0xc0                                                 // 0x5d81
    SETBNK 0 1                                                   // 0x5e10
    SETCLR 1 R1 HWS_HRR5_2                                       // 0x6b5b (hrr_wkup_mode: 2:6 ,hrr_aon_timer_preset: 8:0 ,)
    REG2 R1 0xc0                                                 // 0x5d81
    SETCLR 1 R1 HWS_HRR5_1                                       // 0x6b57 (hrr_aon_timer_preset: 2:6 ,hrr_po_all_pd: 1:5 ,hrr_power_on_pd_gap: 2:3 ,hrr_except_pu_sel: 1:2 ,hrr_except_memory_sel: 1:1 ,hrr_adb_done_delay: 4:0 ,)
    REG2 R1 0x3f                                                 // 0x5c7f
    SETCLR 1 R1 HWS_HRR5_2                                       // 0x6b5b (hrr_wkup_mode: 2:6 ,hrr_aon_timer_preset: 8:0 ,)
    REG2 R1 0x2                                                  // 0x5c05
    SETCLR 0 R1 HWS_DRR1_SHADOW_0                                // 0x2ad2 (rwdt_frc_bit_sel: 4:4 ,def_timer_enb: 1:3 ,pend_vstart: 1:2 ,wkup_enb: 1:1 ,pace_enb: 1:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomCloseWkup

start ROM SpuRomSetWkupMode3		// index: 7273, table index: 109
    REG2 R1 0xc0                                                 // 0x5d81
    SETBAR 0 0                                                   // 0x5e00
    SETCLR 0 R1 HWS_HRR5_2                                       // 0x2b5a (hrr_wkup_mode: 2:6 ,hrr_aon_timer_preset: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetWkupMode3

start ROM SPU_SetCCA		// index: 7274, table index: 110
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR1_3 R1                                            // 0x54c7 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    ANDI R1 0x3 R1                                               // 0x7207
    ORI R1 0x4 R1                                                // 0x7609
    STR HWS_HRR1_3 R1                                            // 0x16c7 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SPU_SetCCA

start ROM SpuRomInitSwspad0To31		// index: 7276, table index: 111
    SETBAR 2 0                                                   // 0x5e02
    STRI ISP_SWSPAD_00_0 0                                       // 0x8040 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_00_1 0                                       // 0x8041 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_00_2 0                                       // 0x8042 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_00_3 0                                       // 0x8043 (swspad_00: 8:0 ,)
    DMAON 1 1                                                    // 0x5821
    DMA ISP_SWSPAD_00 ISP_SWSPAD_01 7                            // 0x7040
    DMA ISP_SWSPAD_00 ISP_SWSPAD_08 7                            // 0x7200
    DMA ISP_SWSPAD_00 ISP_SWSPAD_15 7                            // 0x73c0
    DMA ISP_SWSPAD_00 ISP_SWSPAD_22 7                            // 0x7580
    DMA ISP_SWSPAD_00 ISP_SWSPAD_29 3                            // 0x9740
    AND R0 R0 R0                                                 // 0x0000
end SpuRomInitSwspad0To31

start ROM SpuRomInitSwspadGnvm		// index: 7279, table index: 112
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_SWSPAD_19 ISP_SWSPAD_19 1                        // 0x84c4
end SpuRomInitSwspadGnvm

start ROM SpuRomInitSrr		// index: 7280, table index: 113
    DMAON 22 2                                                   // 0x5856
    DMA HWS_DEF_RADIO_WS_CONTEXT_0 ISP_SRR_SPARE_0 4             // 0xd813
    SETBAR 4 0                                                   // 0x5e04
    STRI ISP_SRR_SPARE_4_0 0                                     // 0x8050 (advertiser_address: 8:0 ,)
    STRI ISP_SRR_SPARE_4_1 0                                     // 0x8051 (advertiser_address: 8:0 ,)
    STRI ISP_SRR_SPARE_4_2 0                                     // 0x8052 (advertiser_address: 8:0 ,)
    STRI ISP_SRR_SPARE_4_3 0                                     // 0x8053 (advertiser_address: 8:0 ,)
    DMAON 2 2                                                    // 0x5842
    DMA ISP_SRR_SPARE_4 ISP_SRR_SPARE_5 6                        // 0x6944
    DMA ISP_SRR_SPARE_4 ISP_SRR_SPARE_11 5                       // 0xa2c4
end SpuRomInitSrr

start ROM SpuRomInitHrr		// index: 7283, table index: 114
    DMAON 21 0                                                   // 0x5815
    DMA HWS_DEF_HRR0 HWS_HRR0 5                                  // 0x6038
    DMA HWS_DEF_HRR5 HWS_HRR5 3                                  // 0xd17d
    DMAON 22 0                                                   // 0x5816
    DMA HWS_DEF_HRR8 HWS_HRR8 2                                  // 0xca00
    SETBAR 12 0                                                  // 0x5e0c
    LDR HWS_DEF_HRR10_3 R0                                       // 0x544b (def_hrr_hrr10_31_26_reserved: 6:2 ,def_hrr_rom_dcdc_powar_save_dynamic_trim: 2:0 ,)
    SETBAR 0 0                                                   // 0x5e00
    STR HWS_HRR10_3 R0                                           // 0x166b (hrr_hrr10_31_26_reserved: 6:2 ,hrr_rom_dcdc_powar_save_dynamic_trim: 2:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomInitHrr

start ROM SpuRomCopyFrequentHrrGnvmToSrrOvl		// index: 7286, table index: 115
    DMAON 0 2                                                    // 0x5840
    DMA HWS_HRR8 ISP_SRR_SPARE_9 1                               // 0xc248
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR1_0 R0                                            // 0x5444 (hrr_lo_ch38_freq_word_c: 2:6 ,hrr_envdet_energy_duration_thr: 6:0 ,)
    ANDI R0 0x3f R0                                              // 0x707e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    SETBAR 4 0                                                   // 0x5e04
    LDR ISP_SRR_SPARE_9_0 R1                                     // 0x54e4 (dovl_hrr_timer0: 2:6 ,dovl_hrr_envdet_energy_duration_thr: 6:0 ,)
    ANDI R1 0xc0 R1                                              // 0x7381
    SHIFTI R0 R0 0x0 0                                           // 0x4800
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR ISP_SRR_SPARE_9_0 R1                                     // 0x56e4 (dovl_hrr_timer0: 2:6 ,dovl_hrr_envdet_energy_duration_thr: 6:0 ,)
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR2_1 R0                                            // 0x5449 (hrr_envdet_rise_pattern: 5:3 ,hrr_envdet_meas_cond_sel: 1:2 ,hrr_hws_pg_rstn_delay: 1:1 ,hrr_vdd_dig_2_vdd_adb_dis: 1:0 ,)
    ANDI R0 0x2 R0                                               // 0x7004
    SHIFTI R0 R0 0x1 1                                           // 0x4910
    SETBAR 4 0                                                   // 0x5e04
    LDR ISP_SRR_SPARE_9_3 R1                                     // 0x54e7 (dovl_hrr_envdet_meas_cond_sel: 1:7 ,dovl_hrr_envdet_silent_duration_thr: 6:1 ,dovl_hrr_hws_pg_rstn_delay: 1:0 ,)
    ANDI R1 0xfe R1                                              // 0x73fd
    SHIFTI R0 R0 0x0 0                                           // 0x4800
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR ISP_SRR_SPARE_9_3 R1                                     // 0x56e7 (dovl_hrr_envdet_meas_cond_sel: 1:7 ,dovl_hrr_envdet_silent_duration_thr: 6:1 ,dovl_hrr_hws_pg_rstn_delay: 1:0 ,)
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR0_3 R0                                            // 0x5443 (hrr_vdd_dig_2_vdd_aon_dis: 1:7 ,hrr_envdet_silent_duration_thr: 6:1 ,hrr_envdet_pg_en_delay: 5:0 ,)
    ANDI R0 0x7e R0                                              // 0x70fc
    SHIFTI R0 R0 0x1 1                                           // 0x4910
    SETBAR 4 0                                                   // 0x5e04
    LDR ISP_SRR_SPARE_9_3 R1                                     // 0x54e7 (dovl_hrr_envdet_meas_cond_sel: 1:7 ,dovl_hrr_envdet_silent_duration_thr: 6:1 ,dovl_hrr_hws_pg_rstn_delay: 1:0 ,)
    ANDI R1 0x81 R1                                              // 0x7303
    SHIFTI R0 R0 0x1 0                                           // 0x4810
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x1 1                                           // 0x4910
    STR ISP_SRR_SPARE_9_3 R1                                     // 0x56e7 (dovl_hrr_envdet_meas_cond_sel: 1:7 ,dovl_hrr_envdet_silent_duration_thr: 6:1 ,dovl_hrr_hws_pg_rstn_delay: 1:0 ,)
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR2_1 R0                                            // 0x5449 (hrr_envdet_rise_pattern: 5:3 ,hrr_envdet_meas_cond_sel: 1:2 ,hrr_hws_pg_rstn_delay: 1:1 ,hrr_vdd_dig_2_vdd_adb_dis: 1:0 ,)
    ANDI R0 0x4 R0                                               // 0x7008
    SHIFTI R0 R0 0x2 1                                           // 0x4920
    SETBAR 4 0                                                   // 0x5e04
    LDR ISP_SRR_SPARE_9_3 R1                                     // 0x54e7 (dovl_hrr_envdet_meas_cond_sel: 1:7 ,dovl_hrr_envdet_silent_duration_thr: 6:1 ,dovl_hrr_hws_pg_rstn_delay: 1:0 ,)
    ANDI R1 0x7f R1                                              // 0x72ff
    SHIFTI R0 R0 0x7 0                                           // 0x4870
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x7 1                                           // 0x4970
    STR ISP_SRR_SPARE_9_3 R1                                     // 0x56e7 (dovl_hrr_envdet_meas_cond_sel: 1:7 ,dovl_hrr_envdet_silent_duration_thr: 6:1 ,dovl_hrr_hws_pg_rstn_delay: 1:0 ,)
    DMAON 0 2                                                    // 0x5840
    DMA HWS_HRR5 ISP_SRR_SPARE_10 1                              // 0xc285
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR2_3 R0                                            // 0x544b (hrr_envdet_1st_ch_sweep_en: 1:7 ,hrr_envdet_fall_pattern_mask: 5:2 ,hrr_envdet_fall_pattern: 5:0 ,)
    ANDI R0 0x7c R0                                              // 0x70f8
    SHIFTI R0 R0 0x2 1                                           // 0x4920
    SETBAR 4 0                                                   // 0x5e04
    LDR ISP_SRR_SPARE_10_0 R1                                    // 0x54e8 (dovl_hrr_adb_done_delay: 3:5 ,dovl_hrr_envdet_fall_pattern_mask: 5:0 ,)
    ANDI R1 0xe0 R1                                              // 0x73c1
    SHIFTI R0 R0 0x0 0                                           // 0x4800
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR ISP_SRR_SPARE_10_0 R1                                    // 0x56e8 (dovl_hrr_adb_done_delay: 3:5 ,dovl_hrr_envdet_fall_pattern_mask: 5:0 ,)
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR2_0 R0                                            // 0x5448 (hrr_envdet_div2_clk_sel: 1:7 ,hrr_envdet_gate_delay_x2_sel: 1:6 ,hrr_envdet_sync_reset_mode_sel: 1:5 ,hrr_envdet_half_cycle_reset_sel: 1:4 ,hrr_envdet_rect_att: 4:0 ,)
    ANDI R0 0x10 R0                                              // 0x7020
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    SETBAR 4 0                                                   // 0x5e04
    LDR ISP_SRR_SPARE_10_1 R1                                    // 0x54e9 (dovl_hrr_envdet_rect_att: 4:4 ,dovl_hrr_envdet_div2_clk_sel: 1:3 ,dovl_hrr_envdet_sync_reset_mode_sel: 1:2 ,dovl_hrr_envdet_half_cycle_reset_sel: 1:1 ,dovl_hrr_adb_done_delay: 4:0 ,)
    ANDI R1 0xfd R1                                              // 0x73fb
    SHIFTI R0 R0 0x1 0                                           // 0x4810
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x1 1                                           // 0x4910
    STR ISP_SRR_SPARE_10_1 R1                                    // 0x56e9 (dovl_hrr_envdet_rect_att: 4:4 ,dovl_hrr_envdet_div2_clk_sel: 1:3 ,dovl_hrr_envdet_sync_reset_mode_sel: 1:2 ,dovl_hrr_envdet_half_cycle_reset_sel: 1:1 ,dovl_hrr_adb_done_delay: 4:0 ,)
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR2_0 R0                                            // 0x5448 (hrr_envdet_div2_clk_sel: 1:7 ,hrr_envdet_gate_delay_x2_sel: 1:6 ,hrr_envdet_sync_reset_mode_sel: 1:5 ,hrr_envdet_half_cycle_reset_sel: 1:4 ,hrr_envdet_rect_att: 4:0 ,)
    ANDI R0 0x20 R0                                              // 0x7040
    SHIFTI R0 R0 0x5 1                                           // 0x4950
    SETBAR 4 0                                                   // 0x5e04
    LDR ISP_SRR_SPARE_10_1 R1                                    // 0x54e9 (dovl_hrr_envdet_rect_att: 4:4 ,dovl_hrr_envdet_div2_clk_sel: 1:3 ,dovl_hrr_envdet_sync_reset_mode_sel: 1:2 ,dovl_hrr_envdet_half_cycle_reset_sel: 1:1 ,dovl_hrr_adb_done_delay: 4:0 ,)
    ANDI R1 0xfb R1                                              // 0x73f7
    SHIFTI R0 R0 0x2 0                                           // 0x4820
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x2 1                                           // 0x4920
    STR ISP_SRR_SPARE_10_1 R1                                    // 0x56e9 (dovl_hrr_envdet_rect_att: 4:4 ,dovl_hrr_envdet_div2_clk_sel: 1:3 ,dovl_hrr_envdet_sync_reset_mode_sel: 1:2 ,dovl_hrr_envdet_half_cycle_reset_sel: 1:1 ,dovl_hrr_adb_done_delay: 4:0 ,)
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR2_0 R0                                            // 0x5448 (hrr_envdet_div2_clk_sel: 1:7 ,hrr_envdet_gate_delay_x2_sel: 1:6 ,hrr_envdet_sync_reset_mode_sel: 1:5 ,hrr_envdet_half_cycle_reset_sel: 1:4 ,hrr_envdet_rect_att: 4:0 ,)
    ANDI R0 0x80 R0                                              // 0x7100
    SHIFTI R0 R0 0x7 1                                           // 0x4970
    SETBAR 4 0                                                   // 0x5e04
    LDR ISP_SRR_SPARE_10_1 R1                                    // 0x54e9 (dovl_hrr_envdet_rect_att: 4:4 ,dovl_hrr_envdet_div2_clk_sel: 1:3 ,dovl_hrr_envdet_sync_reset_mode_sel: 1:2 ,dovl_hrr_envdet_half_cycle_reset_sel: 1:1 ,dovl_hrr_adb_done_delay: 4:0 ,)
    ANDI R1 0xf7 R1                                              // 0x73ef
    SHIFTI R0 R0 0x3 0                                           // 0x4830
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x3 1                                           // 0x4930
    STR ISP_SRR_SPARE_10_1 R1                                    // 0x56e9 (dovl_hrr_envdet_rect_att: 4:4 ,dovl_hrr_envdet_div2_clk_sel: 1:3 ,dovl_hrr_envdet_sync_reset_mode_sel: 1:2 ,dovl_hrr_envdet_half_cycle_reset_sel: 1:1 ,dovl_hrr_adb_done_delay: 4:0 ,)
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR2_0 R0                                            // 0x5448 (hrr_envdet_div2_clk_sel: 1:7 ,hrr_envdet_gate_delay_x2_sel: 1:6 ,hrr_envdet_sync_reset_mode_sel: 1:5 ,hrr_envdet_half_cycle_reset_sel: 1:4 ,hrr_envdet_rect_att: 4:0 ,)
    ANDI R0 0xf R0                                               // 0x701e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    SETBAR 4 0                                                   // 0x5e04
    LDR ISP_SRR_SPARE_10_1 R1                                    // 0x54e9 (dovl_hrr_envdet_rect_att: 4:4 ,dovl_hrr_envdet_div2_clk_sel: 1:3 ,dovl_hrr_envdet_sync_reset_mode_sel: 1:2 ,dovl_hrr_envdet_half_cycle_reset_sel: 1:1 ,dovl_hrr_adb_done_delay: 4:0 ,)
    ANDI R1 0xf R1                                               // 0x721f
    SHIFTI R0 R0 0x4 0                                           // 0x4840
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    STR ISP_SRR_SPARE_10_1 R1                                    // 0x56e9 (dovl_hrr_envdet_rect_att: 4:4 ,dovl_hrr_envdet_div2_clk_sel: 1:3 ,dovl_hrr_envdet_sync_reset_mode_sel: 1:2 ,dovl_hrr_envdet_half_cycle_reset_sel: 1:1 ,dovl_hrr_adb_done_delay: 4:0 ,)
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR7_3 R0                                            // 0x545f (hrr_awdt_soft_th: 2:6 ,hrr_awdt_hard_th: 2:4 ,hrr_hws_hrr_state: 2:2 ,hrr_net_rrt_sel: 1:1 ,hrr_rrt_rd_cntr: 8:0 ,)
    ANDI R0 0xc0 R0                                              // 0x7180
    SHIFTI R0 R0 0x6 1                                           // 0x4960
    SETBAR 4 0                                                   // 0x5e04
    LDR ISP_SRR_SPARE_10_2 R1                                    // 0x54ea (Reserved_31_20: 4:4 ,dovl_hrr_psu_radio_clk_div: 2:2 ,dovl_hrr_awdt_soft_th: 2:0 ,)
    ANDI R1 0xfc R1                                              // 0x73f9
    SHIFTI R0 R0 0x0 0                                           // 0x4800
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR ISP_SRR_SPARE_10_2 R1                                    // 0x56ea (Reserved_31_20: 4:4 ,dovl_hrr_psu_radio_clk_div: 2:2 ,dovl_hrr_awdt_soft_th: 2:0 ,)
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR6_1 R0                                            // 0x5459 (hrr_lcaux_ldo_current_ctl: 1:7 ,hrr_rom_ma_wl: 1:6 ,hrr_rom_ma_sawl: 1:5 ,hrr_dcdc_x1p5_rom_clk_div: 2:3 ,hrr_psu_radio_clk_div: 2:1 ,hrr_lcaux_ldo_cnfg: 4:0 ,)
    ANDI R0 0x6 R0                                               // 0x700c
    SHIFTI R0 R0 0x1 1                                           // 0x4910
    SETBAR 4 0                                                   // 0x5e04
    LDR ISP_SRR_SPARE_10_2 R1                                    // 0x54ea (Reserved_31_20: 4:4 ,dovl_hrr_psu_radio_clk_div: 2:2 ,dovl_hrr_awdt_soft_th: 2:0 ,)
    ANDI R1 0xf3 R1                                              // 0x73e7
    SHIFTI R0 R0 0x2 0                                           // 0x4820
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x2 1                                           // 0x4920
    STR ISP_SRR_SPARE_10_2 R1                                    // 0x16ea (Reserved_31_20: 4:4 ,dovl_hrr_psu_radio_clk_div: 2:2 ,dovl_hrr_awdt_soft_th: 2:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomCopyFrequentHrrGnvmToSrrOvl

start ROM SpuRomCopyFrequentSwGnvmToSrrOvl		// index: 7318, table index: 116
    DMAON 22 2                                                   // 0x5856
    DMA HWS_DEF_SW_DEFAULT_19 ISP_SRR_SPARE_11 2                 // 0x8aee
end SpuRomCopyFrequentSwGnvmToSrrOvl

start ROM SpuRomInitAuxMeas		// index: 7319, table index: 117
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_MSRCTL1 ISP_SWSPAD_14 2                          // 0xcb88
    SETBAR 2 0                                                   // 0x5e02
    STRI ISP_SWSPAD_14_3 00                                      // 0x807b (Reserved_31_20: 8:0 ,)
    STRI ISP_SWSPAD_15_2 00                                      // 0x807e (rtc_clk_period_msec: 5:3 ,minirx_lo_dco_scan_minus_sign: 1:2 ,minirx_scan_lo_dco_en: 1:1 ,minirx_force_vref_vbp: 1:0 ,)
    STRI ISP_SWSPAD_15_3 00                                      // 0x807f (wkup_envdet_clk_period_usec_6q2: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomInitAuxMeas

start ROM SpuRomInitClbContext0		// index: 7321, table index: 118
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_CLB_CONTEXT0 ISP_SWSPAD_12 1                     // 0x8306
end SpuRomInitClbContext0

start ROM SpuRomInitClbSkipN		// index: 7322, table index: 119
    SETBAR 12 0                                                  // 0x5e0c
    LDR HWS_DEF_CLB_CONTEXT0_0 R0                                // 0x5458 (Reserved_31_5: 3:5 ,def_fll_skip_n: 5:0 ,)
    ANDI R0 0x1f R0                                              // 0x703e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    SETBAR 2 0                                                   // 0x5e02
    LDR ISP_SWSPAD_12_0 R1                                       // 0x54f0 (disable_debug_packet: 1:7 ,flow_manager_fsm_section_change_ind: 1:6 ,flow_manager_fsm_cycle_begin_ind: 1:5 ,fll_skip_n: 5:0 ,)
    ANDI R1 0xe0 R1                                              // 0x73c1
    SHIFTI R0 R0 0x0 0                                           // 0x4800
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR ISP_SWSPAD_12_0 R1                                       // 0x16f0 (disable_debug_packet: 1:7 ,flow_manager_fsm_section_change_ind: 1:6 ,flow_manager_fsm_cycle_begin_ind: 1:5 ,fll_skip_n: 5:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomInitClbSkipN

start ROM SpuRomSetInitialParamsUntilFirstTempCompPart1		// index: 7325, table index: 120
    REG2 R1 0xe0                                                 // 0x5dc1
    SETBAR 0 0                                                   // 0x5e00
    SETCLR 0 R1 HWS_HRR5_0                                       // 0x6b52 (hrr_adb_done_delay: 3:5 ,hrr_hrr5_4_0_reserved: 5:0 ,)
    REG2 R1 0x1                                                  // 0x5c03
    SETCLR 0 R1 HWS_HRR5_1                                       // 0x2b56 (hrr_aon_timer_preset: 2:6 ,hrr_po_all_pd: 1:5 ,hrr_power_on_pd_gap: 2:3 ,hrr_except_pu_sel: 1:2 ,hrr_except_memory_sel: 1:1 ,hrr_adb_done_delay: 4:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetInitialParamsUntilFirstTempCompPart1

start ROM SpuRomSetInitialParamsUntilFirstTempCompPart2		// index: 7327, table index: 121
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR5_3 R0                                            // 0x5457 (hrr_cont_wu_timer_disable: 1:7 ,hrr_hrr5_30_29_reserved: 2:5 ,hrr_split_adb_clk_en: 1:4 ,hrr_envdet_except_en: 1:3 ,hrr_timer_except_en: 1:2 ,hrr_hws_timer_preset_state: 2:0 ,)
    ANDI R0 0x10 R0                                              // 0x7020
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    REG R1 00                                                    // 0x4201
    SBEQ NoAdbClkSplit                                           // 0x5a20
    REG2 R1 0xe0                                                 // 0x5dc1
    SETCLR 0 R1 HWS_HRR5_0                                       // 0x6b52 (hrr_adb_done_delay: 3:5 ,hrr_hrr5_4_0_reserved: 5:0 ,)
    REG2 R1 0x1                                                  // 0x5c03
    SETCLR 0 R1 HWS_HRR5_1                                       // 0x6b56 (hrr_aon_timer_preset: 2:6 ,hrr_po_all_pd: 1:5 ,hrr_power_on_pd_gap: 2:3 ,hrr_except_pu_sel: 1:2 ,hrr_except_memory_sel: 1:1 ,hrr_adb_done_delay: 4:0 ,)
    REG R1 00                                                    // 0x4201
    REG R1 00                                                    // 0x4201
    SBEQ finish                                                  // 0x5a50
    LDR HWS_HRR5_0 R1                                            // 0x54d4 (hrr_adb_done_delay: 3:5 ,hrr_hrr5_4_0_reserved: 5:0 ,)
    ANDI R1 0x1f R1                                              // 0x723f
    ORI R1 0x40 R1                                               // 0x7681
    STR HWS_HRR5_0 R1                                            // 0x56d4 (hrr_adb_done_delay: 3:5 ,hrr_hrr5_4_0_reserved: 5:0 ,)
    REG2 R1 0x1                                                  // 0x5c03
    SETCLR 0 R1 HWS_HRR5_1                                       // 0x6b56 (hrr_aon_timer_preset: 2:6 ,hrr_po_all_pd: 1:5 ,hrr_power_on_pd_gap: 2:3 ,hrr_except_pu_sel: 1:2 ,hrr_except_memory_sel: 1:1 ,hrr_adb_done_delay: 4:0 ,)
    SETBAR 4 0                                                   // 0x5e04
    LDR ISP_SRR_SPARE_11_3 R0                                    // 0x546f (dovl_hrr_psu_radio_clk_div_for_tx: 2:6 ,dovl_envdet_div2_clk_sel_for_cca: 1:5 ,dovl_perform_rx_lpm_while_tx_hpm_en: 1:4 ,dovl_est_aux_meas_from_temp_update_en: 1:3 ,dovl_aux_side_info_rad_sw: 4:0 ,)
    ANDI R0 0x20 R0                                              // 0x7040
    SHIFTI R0 R0 0x5 1                                           // 0x4950
    REG R1 01                                                    // 0x4203
    SBEQ finish                                                  // 0x5a20
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR5_0 R1                                            // 0x54d4 (hrr_adb_done_delay: 3:5 ,hrr_hrr5_4_0_reserved: 5:0 ,)
    ANDI R1 0x1f R1                                              // 0x723f
    ORI R1 0x20 R1                                               // 0x7641
    STR HWS_HRR5_0 R1                                            // 0x56d4 (hrr_adb_done_delay: 3:5 ,hrr_hrr5_4_0_reserved: 5:0 ,)
    REG2 R1 0x1                                                  // 0x5c03
    SETCLR 1 R1 HWS_HRR5_1                                       // 0x6b57 (hrr_aon_timer_preset: 2:6 ,hrr_po_all_pd: 1:5 ,hrr_power_on_pd_gap: 2:3 ,hrr_except_pu_sel: 1:2 ,hrr_except_memory_sel: 1:1 ,hrr_adb_done_delay: 4:0 ,)
    OR R0 R0 R0                                                  // 0x0040
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetInitialParamsUntilFirstTempCompPart2

start ROM SpuRomFirstBootInitUntilFirstTempComp		// index: 7336, table index: 122
    DMAON 21 0                                                   // 0x5815
    DMA HWS_DEF_HRR6_0        HWS_HRR6_0    1                    // 0x41be
    DMA HWS_DEF_HRR5_0        HWS_HRR5_0    1                    // 0x417d
    DMA HWS_DEF_HRR4_0        HWS_HRR4_0    1                    // 0xc13c
    DMAON 21 5                                                   // 0x58b5
    DMA HWS_DEF_DRR0_SHADOW_0 HWS_DRR0_SHADOW_0 2                // 0xcf30
    REG2 R1 0xe0                                                 // 0x5dc1
    SETBAR 0 0                                                   // 0x5e00
    SETCLR 0 R1 HWS_HRR5_0                                       // 0x6b52 (hrr_adb_done_delay: 3:5 ,hrr_hrr5_4_0_reserved: 5:0 ,)
    REG2 R1 0x1                                                  // 0x5c03
    SETCLR 0 R1 HWS_HRR5_1                                       // 0x2b56 (hrr_aon_timer_preset: 2:6 ,hrr_po_all_pd: 1:5 ,hrr_power_on_pd_gap: 2:3 ,hrr_except_pu_sel: 1:2 ,hrr_except_memory_sel: 1:1 ,hrr_adb_done_delay: 4:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomFirstBootInitUntilFirstTempComp

start ROM SpuRomRadioOtpToSrr		// index: 7339, table index: 123
    DMAON 22 2                                                   // 0x5856
    DMA HWS_DEF_RADIO_WS_CONTEXT_0 ISP_SRR_SPARE_0 4             // 0x9813
end SpuRomRadioOtpToSrr

start ROM SpuRomRadioSrrToHws		// index: 7340, table index: 124
    DMAON 2 5                                                    // 0x58a2
    DMA ISP_SRR_SPARE_0 HWS_RADIO_WS_CONTEXT_0 4                 // 0x9980
end SpuRomRadioSrrToHws

start ROM SpuRomPgxOtpToSrr		// index: 7341, table index: 125
    DMAON 21 2                                                   // 0x5855
    DMA HWS_DEF_PGXDID ISP_SRR_SPARE_9 1                         // 0x426a
    DMA HWS_DEF_PGXDDATAL0 ISP_SRR_SPARE_11 2                    // 0x8aeb
    AND R0 R0 R0                                                 // 0x0000
end SpuRomPgxOtpToSrr

start ROM SpuRomPgxSrrToHws		// index: 7342, table index: 126
     SETBAR 3 0                                                  // 0x5e03
     LDR ISP_SWSPAD_18_0 R0                                      // 0x5448 (perform_rx_lpm_while_tx_hpm_ind: 1:7 ,cle_disable_skip_n_en: 1:6 ,update_adva_from_nonce_en: 1:5 ,tx_sprinkler_packet_type: 2:3 ,time_sprinkler_ctr: 3:0 ,)
     ANDI R0 0x18 R0                                             // 0x7030
     SHIFTI R0 R0 0x3 1                                          // 0x4930
     ANDI R0 2 R0                                                // 0x7004
     REG R1 2                                                    // 0x4205
      SBEQ DoubleData                                            // 0x5a14
     JUMP_LINK SpuRomPgxSrrToHws64Bit                            // 0x44fe
       REG R0 0                                                  // 0x4200
       REG R1 0                                                  // 0x4201
       SBEQ DoubleDataDone                                       // 0x5a08
    JUMP_LINK SpuRomPgxSrrToHwsRaw128Bit                         // 0x4500
    OR R0 R0 R0                                                  // 0x0040
    AND R0 R0 R0                                                 // 0x0000
end SpuRomPgxSrrToHws

start ROM SpuRomPgxSrrToHws64Bit		// index: 7346, table index: 127
    SETBAR 2 0                                                   // 0x5e02
    LDR ISP_SWSPAD_00_3 R0                                       // 0x5443 (swspad_00: 8:0 ,)
    STRI HWS_PGXSDATA_0_0 AA                                     // 0xd538 (stat_data_0: 8:0 ,)
    STRI HWS_PGXSDATA_0_1 D6                                     // 0xeb39 (stat_data_0: 8:0 ,)
    STRI HWS_PGXSDATA_0_2 BE                                     // 0xdf3a (stat_data_0: 8:0 ,)
    STRI HWS_PGXSDATA_0_3 89                                     // 0xc4bb (stat_data_0: 8:0 ,)
    STRI HWS_PGXSDATA_1_0 8E                                     // 0xc73c (stat_data_1: 8:0 ,)
    STRI HWS_PGXSDATA_1_1 42                                     // 0xa13d (stat_data_1: 8:0 ,)
    STRI HWS_PGXSDATA_1_2 25                                     // 0x92be (stat_data_1: 8:0 ,)
    SETBAR 2 1                                                   // 0x5e12
    STRI HWS_PGXSDATA_3_1 1E                                     // 0x8f05 (stat_data_3: 8:0 ,)
    STRI HWS_PGXSDATA_3_2 16                                     // 0x8b06 (stat_data_3: 8:0 ,)
    STRI HWS_PGXSDATA_3_3 AF                                     // 0xd787 (stat_data_3: 8:0 ,)
    STRI HWS_PGXDID_0 FD                                         // 0xfe88 (pkt_dyn_id: 8:0 ,)
    LDR ISP_SWSPAD_00_3 R0                                       // 0x5443 (swspad_00: 8:0 ,)
    LDR ISP_SWSPAD_00_2 R1                                       // 0x54c2 (swspad_00: 8:0 ,)
    SETBAR 2 0                                                   // 0x5e02
    STR HWS_PGXSDATA_1_3 R0                                      // 0x563f (stat_data_1: 8:0 ,)
    SETBAR 2 1                                                   // 0x5e12
    STR HWS_PGXSDATA_3_0 R1                                      // 0x5684 (stat_data_3: 8:0 ,)
    SETBAR 2 0                                                   // 0x5e02
    STRI HWS_PGXSDATA_1_2 00                                     // 0x803e (stat_data_1: 8:0 ,)
    DMAON 2 5                                                    // 0x58a2
    DMA ISP_SRR_SPARE_4 HWS_PGXSDATA_2 1                         // 0xc404
    DMAON 1 5                                                    // 0x58a1
    DMA ISP_SWSPAD_01 HWS_PGXDID 7                               // 0xb481
end SpuRomPgxSrrToHws64Bit

start ROM SpuRomPgxSrrToHwsRaw128Bit		// index: 7353, table index: 128
    SETBAR 0 0                                                   // 0x5e00
    STRI HWS_PGXSDATA_0_0 AA                                     // 0xd538 (stat_data_0: 8:0 ,)
    STRI HWS_PGXSDATA_0_1 D6                                     // 0xeb39 (stat_data_0: 8:0 ,)
    STRI HWS_PGXSDATA_0_2 BE                                     // 0xdf3a (stat_data_0: 8:0 ,)
    STRI HWS_PGXSDATA_0_3 89                                     // 0xc4bb (stat_data_0: 8:0 ,)
    STRI HWS_PGXSDATA_1_0 8E                                     // 0xc73c (stat_data_1: 8:0 ,)
    STRI HWS_PGXSDATA_1_1 47                                     // 0xa3bd (stat_data_1: 8:0 ,)
    STRI HWS_PGXSDATA_1_2 31                                     // 0x98be (stat_data_1: 8:0 ,)
    STRI HWS_PGXSDATA_1_3 09                                     // 0x84bf (stat_data_1: 8:0 ,)
    SETBNK 2 1                                                   // 0x5e12
    STRI HWS_PGXSDATA_2_0 09                                     // 0x8480 (stat_data_2: 8:0 ,)
    LDR ISP_SWSPAD_00_3 R0                                       // 0x5443 (swspad_00: 8:0 ,)
    LDR ISP_SWSPAD_00_2 R1                                       // 0x54c2 (swspad_00: 8:0 ,)
    STR HWS_PGXSDATA_2_1 R0                                      // 0x5601 (stat_data_2: 8:0 ,)
    STR HWS_PGXSDATA_3_2 R1                                      // 0x5686 (stat_data_3: 8:0 ,)
    SETBAR 4 1                                                   // 0x5e14
    LDR ISP_SRR_SPARE_4_0 R0                                     // 0x5450 (advertiser_address: 8:0 ,)
    LDR ISP_SRR_SPARE_4_1 R1                                     // 0x54d1 (advertiser_address: 8:0 ,)
    LDR ISP_SRR_SPARE_4_2 R2                                     // 0x5552 (advertiser_address: 8:0 ,)
    LDR ISP_SRR_SPARE_4_3 R3                                     // 0x55d3 (advertiser_address: 8:0 ,)
    STR HWS_PGXSDATA_2_2 R0                                      // 0x5602 (stat_data_2: 8:0 ,)
    STR HWS_PGXSDATA_2_3 R1                                      // 0x5683 (stat_data_2: 8:0 ,)
    STR HWS_PGXSDATA_3_0 R2                                      // 0x5704 (stat_data_3: 8:0 ,)
    STR HWS_PGXSDATA_3_1 R3                                      // 0x5785 (stat_data_3: 8:0 ,)
    LDR ISP_SRR_SPARE_7_2 R0                                     // 0x545e (pgxeadata0: 8:0 ,)
    LDR ISP_SRR_SPARE_7_3 R1                                     // 0x54df (pgxeadata0: 8:0 ,)
    STR HWS_PGXSDATA_3_3 R0                                      // 0x5607 (stat_data_3: 8:0 ,)
    STR HWS_PGXDID_0 R1                                          // 0x5688 (pkt_dyn_id: 8:0 ,)
    STRI HWS_PGXDID_1 26                                         // 0x9309 (pkt_dyn_id: 8:0 ,)
    STRI HWS_PGXDID_2 16                                         // 0x8b0a (pkt_dyn_id: 8:0 ,)
    STRI HWS_PGXDID_3 AF                                         // 0xd78b (pkt_dyn_id: 8:0 ,)
    DMAON 1 5                                                    // 0x58a1
    DMA ISP_SWSPAD_01 HWS_NONCE 6                                // 0xecc1
    DMAON 1 6                                                    // 0x58c1
    DMA ISP_SWSPAD_07 HWS_PGXEADATA0 1                           // 0xc547
    DMAON 2 6                                                    // 0x58c2
    DMA ISP_SRR_SPARE_5  HWS_PGXEADATA1 2                        // 0xcd85
    STRI HWS_NONCE_0 FD                                          // 0xfe8c (nonce: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomPgxSrrToHwsRaw128Bit

start ROM SpuRomPgxHwsToSrr		// index: 7363, table index: 129
    DMAON 5 2                                                    // 0x5845
    DMA HWS_PGXSDATA_1 ISP_SRR_SPARE_5 5                         // 0x614f
    DMA HWS_NONCE ISP_SRR_SPARE_10 6                             // 0xaa93
    AND R0 R0 R0                                                 // 0x0000
end SpuRomPgxHwsToSrr

start ROM SpuRomSetRawPacketSize		// index: 7364, table index: 130
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_PGXSDATA_1_2 R0                                      // 0x543e (stat_data_1: 8:0 ,)
    ADDI R0 a R0                                                 // 0x7c14
    LDR HWS_RADIO_MODE_2 R1                                      // 0x54aa (tx_beacon_packet_size: 5:3 ,sym_div_sel: 1:2 ,hw_radio_turn_off_en: 1:1 ,lo_buffer_rdi_pend_start: 1:0 ,)
    ANDI R1 7 R1                                                 // 0x720f
    SHIFTI R2 R0 3 0                                             // 0x4832
    OR R2 R2 R1                                                  // 0x405a
    STR HWS_RADIO_MODE_2 R2                                      // 0x572a (tx_beacon_packet_size: 5:3 ,sym_div_sel: 1:2 ,hw_radio_turn_off_en: 1:1 ,lo_buffer_rdi_pend_start: 1:0 ,)
    LDR HWS_RADIO_MODE_3 R1                                      // 0x54ab (modulation_disable: 1:7 ,rom_dcdc_clk_div_ovr: 1:6 ,sram_dcdc_clk_div_ovr: 1:5 ,tdc_disable: 1:4 ,lo_cmfb_sample: 1:3 ,lo_symbol_data_rstb: 1:2 ,sym_src_sel: 1:1 ,tx_beacon_packet_size: 6:0 ,)
    ANDI R1 FE R1                                                // 0x73fd
    SHIFTI R2 R0 5 1                                             // 0x4952
    OR R2 R2 R1                                                  // 0x405a
    STR HWS_RADIO_MODE_3 R2                                      // 0x172b (modulation_disable: 1:7 ,rom_dcdc_clk_div_ovr: 1:6 ,sram_dcdc_clk_div_ovr: 1:5 ,tdc_disable: 1:4 ,lo_cmfb_sample: 1:3 ,lo_symbol_data_rstb: 1:2 ,sym_src_sel: 1:1 ,tx_beacon_packet_size: 6:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetRawPacketSize

start ROM SpuRomCopyRawPcktCrc		// index: 7368, table index: 131
    DMAON 1 5                                                    // 0x58a1
    DMA ISP_SWSPAD_31 HWS_RAWPKT_CRC 1                           // 0x835f
end SpuRomCopyRawPcktCrc

start ROM SpuRomCopyLoDivSymFromOvlToHws		// index: 7369, table index: 132
    DMAON 1 6                                                    // 0x58c1
    DMA ISP_SWSPAD_00 HWS_LO_DIV2SYM 1                           // 0x8500
end SpuRomCopyLoDivSymFromOvlToHws

start ROM SpuRomSetLoDivSymFromCh37InOvl		// index: 7370, table index: 133
    SETBAR 2 0                                                   // 0x5e02
    STRI ISP_SWSPAD_00_0 AE                                      // 0xd740 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_00_1 04                                      // 0x8241 (swspad_00: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetLoDivSymFromCh37InOvl

start ROM SpuRomSetLoDivSymFromCh37InClb		// index: 7371, table index: 134
    SETBAR 0 3                                                   // 0x5e30
    STRI HWS_LO_DIV2SYM_0 AE                                     // 0xd710 (lo_div2sym_div_ratio: 8:0 ,)
    STRI HWS_LO_DIV2SYM_1 04                                     // 0x8211 (Reserved_31_11: 5:3 ,lo_div2sym_div_ratio: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetLoDivSymFromCh37InClb

start ROM SpuRomSetAwdtSoftRguMaxTh		// index: 7372, table index: 135
    SETBNK 2 2                                                   // 0x5e22
    LDR ISP_SWSPAD_00_1 R0                                       // 0x5441 (swspad_00: 8:0 ,)
    ANDI R0 08 R0                                                // 0x7010
    REG  R1 3                                                    // 0x4207
    SHIFTR R0 R0 R1                                              // 0x4110
    LDR HWS_AWDT_CTL_2 R1                                        // 0x54a6 (Reserved_31_17: 7:1 ,rgu_awdt_soft_max_th: 1:0 ,)
    ANDI R1 0xfe R1                                              // 0x73fd
    SHIFTI R0 R0 0x0 0                                           // 0x4800
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR HWS_AWDT_CTL_2 R1                                        // 0x16a6 (Reserved_31_17: 7:1 ,rgu_awdt_soft_max_th: 1:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetAwdtSoftRguMaxTh

start ROM SpuRomTxBle5LengthJump		// index: 7375, table index: 136
    SETBAR 3 0                                                   // 0x5e03
    LDR ISP_SWSPAD_18_0 R0                                       // 0x5448 (perform_rx_lpm_while_tx_hpm_ind: 1:7 ,cle_disable_skip_n_en: 1:6 ,update_adva_from_nonce_en: 1:5 ,tx_sprinkler_packet_type: 2:3 ,time_sprinkler_ctr: 3:0 ,)
    ANDI R0 0x18 R0                                              // 0x7030
    SHIFTI R0 R0 0x3 1                                           // 0x4930
    ANDI R0 02 R0                                                // 0x7004
    REG R1 00                                                    // 0x4201
    SBEQ TxBle5Loop64bitJump                                     // 0x5a10
    SETBAR 2 0                                                   // 0x5e02
    STRI ISP_SWSPAD_10_2 0x3                                     // 0x81ea (exception_jump_offset: 8:0 ,)
    LJUMP SpuRomJumpXRdrsRelativeToEnd                           // 0x6d8b
    OR R0 R0 R0                                                  // 0x0040
    AND R0 R0 R0                                                 // 0x0000
end SpuRomTxBle5LengthJump

start ROM SpuRomSyncEnvDetWithSoc		// index: 7378, table index: 137
    TIMER 9d 1                                                   // 0x639d
    EVCMD 4 2 1 1                                                // 0x21c4
end SpuRomSyncEnvDetWithSoc

start ROM SpuRomCopySrrToAuxPgxData		// index: 7379, table index: 138
    DMAON 2 6                                                    // 0x58c2
    DMA ISP_SRR_SPARE_7 HWS_PGXEADATA0 1                         // 0x4547
    DMA ISP_SRR_SPARE_8 HWS_PGXEXTIND 1                          // 0x85c8
    AND R0 R0 R0                                                 // 0x0000
end SpuRomCopySrrToAuxPgxData

start ROM SpuRomSetWhtnForBle5		// index: 7380, table index: 139
    SETBNK 4 3                                                   // 0x5e34
    LDR ISP_SRR_SPARE_11_0 R0                                    // 0x546c (dovl_ble5_num_30_usec_delay_units_minus_15: 2:6 ,dovl_ble5_aux_adv_channel: 6:0 ,)
    ANDI R0 0x3f R0                                              // 0x707e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR HWS_PGX_CHANNEL_WHTN_0 R0                                // 0x5620 (Reserved_7_6: 2:6 ,pgx_channel_whtn_val: 6:0 ,)
    STRI HWS_PGX_CHANNEL_WHTN_1 1                                // 0x80a1 (Reserved_31_9: 7:1 ,pgx_channel_whtn_ovrid: 1:0 ,)
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetWhtnForBle5

start ROM SpuRomSetPreambleAndDfSizeForBle5		// index: 7382, table index: 140
    SETBNK 4 2                                                   // 0x5e24
    LDR ISP_SRR_SPARE_12_1 R0                                    // 0x5471 (dovl_adb_done_delay_for_cca: 3:5 ,dovl_fall_pattern_mask_for_cca: 2:3 ,dovl_lcaux_div_ctl_for_trng: 2:1 ,dovl_symbol_rate_2mhz_or_1mhz_ind: 1:0 ,)
    ANDI R0 0x1 R0                                               // 0x7002
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    MOV R2 R0                                                    // 0x4602
    LDR HWS_CLE_CONFIG_1_3 R1                                    // 0x54b3 (analogctl: 3:5 ,firststagestep: 1:4 ,secondstagestep: 1:3 ,thirdstagestep: 1:2 ,forthstagestep: 1:1 ,signalstatforvalidsignal: 1:0 ,)
    ANDI R1 0xf7 R1                                              // 0x73ef
    SHIFTI R0 R0 0x3 0                                           // 0x4830
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x3 1                                           // 0x4930
    STR HWS_CLE_CONFIG_1_3 R1                                    // 0x56b3 (analogctl: 3:5 ,firststagestep: 1:4 ,secondstagestep: 1:3 ,thirdstagestep: 1:2 ,forthstagestep: 1:1 ,signalstatforvalidsignal: 1:0 ,)
    MOV R0 R2                                                    // 0x4608
    REG R1 7                                                     // 0x420f
    SHIFTL R0 R0 R1                                              // 0x40d0
    LDR HWS_RC_SENS_HWS_STATIC_1_1 R1                            // 0x54bd (rc_sens_spare: 8:0 ,)
    ANDI R1 7F R1                                                // 0x72ff
    OR R1 R0 R1                                                  // 0x4051
    STR HWS_RC_SENS_HWS_STATIC_1_1 R1                            // 0x56bd (rc_sens_spare: 8:0 ,)
    MOV R0 R2                                                    // 0x4608
    REG R1 00                                                    // 0x4201
    SBEQ DontUpdateTxDfOffset                                    // 0x5a2c
    SETBNK 3 0                                                   // 0x5e03
    LDR ISP_SWSPAD_27_0 R0                                       // 0x546c (rc_sensor_interface_sel: 1:7 ,temp_event_consec_event_counter: 2:5 ,txdf_offset_for_2mhz_symbol_rate: 4:1 ,lo_high_power_mode_en: 1:0 ,)
    ANDI R0 0x1e R0                                              // 0x703c
    SHIFTI R0 R0 0x1 1                                           // 0x4910
    LDR HWS_RADIO_DYN_CLB_CONTEXT_3 R1                           // 0x54a3 (Reserved_31_31: 1:7 ,txdf_offset: 4:3 ,lo_reg_vbias_rfb_rx: 3:0 ,)
    ANDI R1 0x87 R1                                              // 0x730f
    SHIFTI R0 R0 0x3 0                                           // 0x4830
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x3 1                                           // 0x4930
    STR HWS_RADIO_DYN_CLB_CONTEXT_3 R1                           // 0x56a3 (Reserved_31_31: 1:7 ,txdf_offset: 4:3 ,lo_reg_vbias_rfb_rx: 3:0 ,)
    OR R0 R0 R0                                                  // 0x0040
end SpuRomSetPreambleAndDfSizeForBle5

start ROM SpuRomSetPsuRadioClkDivForTx		// index: 7390, table index: 141
    SETBAR 4 0                                                   // 0x5e04
    LDR ISP_SRR_SPARE_11_3 R0                                    // 0x546f (dovl_hrr_psu_radio_clk_div_for_tx: 2:6 ,dovl_envdet_div2_clk_sel_for_cca: 1:5 ,dovl_perform_rx_lpm_while_tx_hpm_en: 1:4 ,dovl_est_aux_meas_from_temp_update_en: 1:3 ,dovl_aux_side_info_rad_sw: 4:0 ,)
    ANDI R0 0xc0 R0                                              // 0x7180
    SHIFTI R0 R0 0x6 1                                           // 0x4960
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR6_1 R1                                            // 0x54d9 (hrr_lcaux_ldo_current_ctl: 1:7 ,hrr_rom_ma_wl: 1:6 ,hrr_rom_ma_sawl: 1:5 ,hrr_dcdc_x1p5_rom_clk_div: 2:3 ,hrr_psu_radio_clk_div: 2:1 ,hrr_lcaux_ldo_cnfg: 4:0 ,)
    ANDI R1 0xf9 R1                                              // 0x73f3
    SHIFTI R0 R0 0x1 0                                           // 0x4810
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x1 1                                           // 0x4910
    STR HWS_HRR6_1 R1                                            // 0x16d9 (hrr_lcaux_ldo_current_ctl: 1:7 ,hrr_rom_ma_wl: 1:6 ,hrr_rom_ma_sawl: 1:5 ,hrr_dcdc_x1p5_rom_clk_div: 2:3 ,hrr_psu_radio_clk_div: 2:1 ,hrr_lcaux_ldo_cnfg: 4:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetPsuRadioClkDivForTx

start ROM SpuRomRestorePsuRadioClkDivAfterTx		// index: 7393, table index: 142
    SETBAR 4 0                                                   // 0x5e04
    LDR ISP_SRR_SPARE_10_2 R0                                    // 0x546a (Reserved_31_20: 4:4 ,dovl_hrr_psu_radio_clk_div: 2:2 ,dovl_hrr_awdt_soft_th: 2:0 ,)
    ANDI R0 0xc R0                                               // 0x7018
    SHIFTI R0 R0 0x2 1                                           // 0x4920
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR6_1 R1                                            // 0x54d9 (hrr_lcaux_ldo_current_ctl: 1:7 ,hrr_rom_ma_wl: 1:6 ,hrr_rom_ma_sawl: 1:5 ,hrr_dcdc_x1p5_rom_clk_div: 2:3 ,hrr_psu_radio_clk_div: 2:1 ,hrr_lcaux_ldo_cnfg: 4:0 ,)
    ANDI R1 0xf9 R1                                              // 0x73f3
    SHIFTI R0 R0 0x1 0                                           // 0x4810
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x1 1                                           // 0x4910
    STR HWS_HRR6_1 R1                                            // 0x16d9 (hrr_lcaux_ldo_current_ctl: 1:7 ,hrr_rom_ma_wl: 1:6 ,hrr_rom_ma_sawl: 1:5 ,hrr_dcdc_x1p5_rom_clk_div: 2:3 ,hrr_psu_radio_clk_div: 2:1 ,hrr_lcaux_ldo_cnfg: 4:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRestorePsuRadioClkDivAfterTx

start ROM SpuRomHwsOtpToHrr		// index: 7396, table index: 143
    DMAON 21 0                                                   // 0x5815
    DMA HWS_DEF_HRR0 HWS_HRR0 5                                  // 0x6038
    DMA HWS_DEF_HRR5 HWS_HRR5 3                                  // 0xd17d
    DMAON 22 0                                                   // 0x5816
    DMA HWS_DEF_HRR8 HWS_HRR8 2                                  // 0x8a00
    AND R0 R0 R0                                                 // 0x0000
end SpuRomHwsOtpToHrr

start ROM SpuRomAuxMeasOtpToIsp		// index: 7398, table index: 144
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_MSRCTL1 ISP_SWSPAD_14 2                          // 0x8b88
end SpuRomAuxMeasOtpToIsp

start ROM SpuRomAuxMeasIspToOvl		// index: 7399, table index: 145
    DMAON 1 1                                                    // 0x5821
    DMA ISP_SWSPAD_14 ISP_SWSPAD_02 2                            // 0x888e
end SpuRomAuxMeasIspToOvl

start ROM SpuRomAuxMeasMsrCtl12ToOvl		// index: 7400, table index: 146
    SETBAR 12 0                                                  // 0x5e0c
    LDR HWS_DEF_MSRCTL1_3 R0                                     // 0x5463 (Reserved_31_30: 2:6 ,def_aux_measure_outliers_fail_def: 6:0 ,)
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_02_3 R0                                       // 0x564b (swspad_02: 8:0 ,)
    SETBAR 12 0                                                  // 0x5e0c
    LDR HWS_DEF_MSRCTL2_2 R0                                     // 0x5466 (def_skip_wu2_calc: 1:7 ,def_skip_si_calc: 1:6 ,def_one_cycle_meas: 1:5 ,def_meas_shift_left: 2:3 ,def_fll_cw_mode: 1:2 ,def_aux_man_ch_idx: 2:0 ,)
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_03_2 R0                                       // 0x164e (swspad_03: 8:0 ,)
end SpuRomAuxMeasMsrCtl12ToOvl

start ROM SpuRomSymMeasMsrCtl12ToOvl		// index: 7402, table index: 147
    SETBAR 12 0                                                  // 0x5e0c
    LDR HWS_DEF_MSRCTL1_3 R0                                     // 0x5463 (Reserved_31_30: 2:6 ,def_aux_measure_outliers_fail_def: 6:0 ,)
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_02_3 R0                                       // 0x564b (swspad_02: 8:0 ,)
    SETBAR 12 0                                                  // 0x5e0c
    LDR HWS_DEF_MSRCTL2_2 R0                                     // 0x5466 (def_skip_wu2_calc: 1:7 ,def_skip_si_calc: 1:6 ,def_one_cycle_meas: 1:5 ,def_meas_shift_left: 2:3 ,def_fll_cw_mode: 1:2 ,def_aux_man_ch_idx: 2:0 ,)
    ANDI R0 F7 R0                                                // 0x71ee
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_03_2 R0                                       // 0x164e (swspad_03: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSymMeasMsrCtl12ToOvl

start ROM SpuRomAuxMeasResOvlToIsp		// index: 7405, table index: 148
    DMAON 1 1                                                    // 0x5821
    DMA ISP_SWSPAD_04 ISP_SWSPAD_14 2                            // 0x8b84
end SpuRomAuxMeasResOvlToIsp

start ROM SpuRomAuxMeasResIspToOvl		// index: 7406, table index: 149
    DMAON 1 1                                                    // 0x5821
    DMA ISP_SWSPAD_14 ISP_SWSPAD_04 1                            // 0x810e
end SpuRomAuxMeasResIspToOvl

start ROM SpuRomAuxMeasResOvlToClb		// index: 7407, table index: 150
    DMAON 1 8                                                    // 0x5901
    DMA ISP_SWSPAD_04 CLB_msrctl1 1                              // 0x8104
end SpuRomAuxMeasResOvlToClb

start ROM SpuRomClbContextOtpToSrr		// index: 7408, table index: 151
    SETBAR 12 0                                                  // 0x5e0c
    LDR HWS_DEF_CLB_CONTEXT0_3 R0                                // 0x545b (Reserved_31_5: 8:0 ,)
    ANDI R0 3F R0                                                // 0x707e
    SETBAR 4 0                                                   // 0x5e04
    STR ISP_SRR_SPARE_3_3 R0                                     // 0x164f (Reserved_31_28: 4:4 ,lohv_core_pch_w: 2:2 ,lohv_core_nch_w: 2:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomClbContextOtpToSrr

start ROM SpuRomClbContextSrrToOvl		// index: 7410, table index: 152
    SETBAR 2 0                                                   // 0x5e02
    LDR ISP_SWSPAD_12_0 R0                                       // 0x5470 (disable_debug_packet: 1:7 ,flow_manager_fsm_section_change_ind: 1:6 ,flow_manager_fsm_cycle_begin_ind: 1:5 ,fll_skip_n: 5:0 ,)
    ANDI R0 0x1f R0                                              // 0x703e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR ISP_SWSPAD_00_0 R0                                       // 0x1640 (swspad_00: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomClbContextSrrToOvl

start ROM SpuRomClbContextOvlToClb		// index: 7412, table index: 153
    DMAON 1 8                                                    // 0x5901
    DMA ISP_SWSPAD_00 CLB_CLB_CONTEXT0 1                         // 0x8080
end SpuRomClbContextOvlToClb

start ROM SpuRomAuxMeasCfgOtpToOvl		// index: 7413, table index: 154
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_MSRCTL0 ISP_SWSPAD_01 1                          // 0x8047
end SpuRomAuxMeasCfgOtpToOvl

start ROM SpuRomAuxMeasOvlToClb		// index: 7414, table index: 155
    DMAON 1 8                                                    // 0x5901
    DMA ISP_SWSPAD_01 CLB_MSRCTL0 3                              // 0x90c1
end SpuRomAuxMeasOvlToClb

start ROM SpuRomLoCalibOtpToOvl		// index: 7415, table index: 156
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_LOCTL0 ISP_SWSPAD_01 3                           // 0x904a
end SpuRomLoCalibOtpToOvl

start ROM SpuRomLoCalibOvlToClb		// index: 7416, table index: 157
    DMAON 1 8                                                    // 0x5901
    DMA ISP_SWSPAD_01 CLB_LOCTL0 3                               // 0x9181
end SpuRomLoCalibOvlToClb

start ROM SpuRomSymCalibOtpToOvl		// index: 7417, table index: 158
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_SYMCTL0 ISP_SWSPAD_01 3                          // 0x904d
end SpuRomSymCalibOtpToOvl

start ROM SpuRomSymCalibOvlToClb		// index: 7418, table index: 159
    DMAON 1 8                                                    // 0x5901
    DMA ISP_SWSPAD_01 CLB_SYMCTL0 3                              // 0x9241
end SpuRomSymCalibOvlToClb

start ROM SpuRomAuxMeasResClbToOvl		// index: 7419, table index: 160
    DMAON 8 1                                                    // 0x5828
    DMA CLB_CLBRSLT0 ISP_SWSPAD_04 2                             // 0x890c
end SpuRomAuxMeasResClbToOvl

start ROM SpuRomCalibResClbToOvl		// index: 7420, table index: 161
    SETBNK 2 4                                                   // 0x5e42
    LDR CLB_CLBRSLT0_3 R0                                        // 0x5433 (calib_rslt_fail: 1:7 ,aux_wu2_ratio_hit_idx: 3:4 ,aux_global_failed: 1:3 ,calib_status: 1:2 ,aux_wu2_failed: 1:1 ,aux_si_failed: 1:0 ,)
    STR ISP_SWSPAD_04_3 R0                                       // 0x5653 (swspad_04: 8:0 ,)
    LDR CLB_CLBRSLT2_0 R0                                        // 0x5438 (Reserved_7_5: 3:5 ,calib_rslt_coarse: 5:0 ,)
    ANDI R0 1F R0                                                // 0x703e
    LDR ISP_SWSPAD_05_3 R1                                       // 0x54d7 (swspad_05: 8:0 ,)
    ANDI R1 80 R1                                                // 0x7301
    OR R0 R0 R1                                                  // 0x4050
    STR ISP_SWSPAD_05_3 R0                                       // 0x1657 (swspad_05: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomCalibResClbToOvl

start ROM SpuRomSecDataKeysOtpToOvl		// index: 7423, table index: 162
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_DATA_KEY_0 ISP_SWSPAD_00 4                       // 0x9836
end SpuRomSecDataKeysOtpToOvl

start ROM SpuRomSecIdKeysOtpToOvl		// index: 7424, table index: 163
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_ID_KEY_0 ISP_SWSPAD_04 4                         // 0x993a
end SpuRomSecIdKeysOtpToOvl

start ROM SpuRomFmuOtpToOvl		// index: 7425, table index: 164
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_FMU_PARAM0 ISP_SWSPAD_00 2                       // 0x8811
end SpuRomFmuOtpToOvl

start ROM SpuRomFmuOvlToClb		// index: 7426, table index: 165
    DMAON 1 8                                                    // 0x5901
    DMA ISP_SWSPAD_00 CLB_FMU_PARAM0 2                           // 0x8c00
end SpuRomFmuOvlToClb

start ROM SpuRomFmuResHwsToOvl		// index: 7427, table index: 166
    DMAON 5 1                                                    // 0x5825
    DMA HWS_PGXSENSDATA ISP_SWSPAD_03 1                          // 0x80d8
end SpuRomFmuResHwsToOvl

start ROM SpuRomConfigFmuForLoDivSymVsSoc		// index: 7428, table index: 167
    REG2 R1 0x2                                                  // 0x5c05
    SETBAR 0 0                                                   // 0x5e00
    SETCLR 0 R1 HWS_HWSINTCTL_0                                  // 0x6a02 (Reserved_7_3: 5:3 ,pgen_clb: 1:2 ,pgen_isp: 1:1 ,pgen_mss: 1:0 ,)
    REG2 R1 0x4                                                  // 0x5c09
    SETCLR 0 R1 HWS_HWSINTCTL_0                                  // 0x6a02 (Reserved_7_3: 5:3 ,pgen_clb: 1:2 ,pgen_isp: 1:1 ,pgen_mss: 1:0 ,)
    REG2 R1 0x2                                                  // 0x5c05
    SETCLR 0 R1 HWS_HWSINTCTL_1                                  // 0x6a06 (Reserved_15_11: 5:3 ,rsten_clb: 1:2 ,rsten_isp: 1:1 ,rsten_mss: 1:0 ,)
    REG2 R1 0x4                                                  // 0x5c09
    SETCLR 0 R1 HWS_HWSINTCTL_1                                  // 0x6a06 (Reserved_15_11: 5:3 ,rsten_clb: 1:2 ,rsten_isp: 1:1 ,rsten_mss: 1:0 ,)
    REG2 R1 0x1                                                  // 0x5c03
    SETCLR 0 R1 HWS_HWSINTCTL_2                                  // 0x6a0a (Reserved_31_18: 6:2 ,sw_b2bpdo: 1:1 ,sw_b2ben: 1:0 ,)
    TIMER 2 MUL_BY_2                                             // 0x6202
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x61e1
    DMAON 1 8                                                    // 0x5901
    DMA ISP_SWSPAD_00 CLB_FMU_PARAM0 2                           // 0x8c00
    AND R0 R0 R0                                                 // 0x0000
end SpuRomConfigFmuForLoDivSymVsSoc

start ROM SpuRomEnvdetMeasWithSoc		// index: 7432, table index: 168
    TIMER 9d 1                                                   // 0x639d
    EVCMD 4 2 1 1                                                // 0x61c4
    TIMER 9d 1                                                   // 0x639d
    EVCMD 4 2 1 1                                                // 0x61c4
    REG R1 80                                                    // 0x4301
    EVCMD 4 2 1 1                                                // 0x61c4
    TIMER fe 1                                                   // 0x63fe
    DMAON 4 1                                                    // 0x5824
    DMA ISP_SPU_TIMER_0 ISP_SWSPAD_03 1                          // 0x80cb
    AND R0 R0 R0                                                 // 0x0000
end SpuRomEnvdetMeasWithSoc

start ROM SpuRomCleOvlToHws		// index: 7435, table index: 169
    DMAON 1 6                                                    // 0x58c1
    DMA ISP_SWSPAD_06 HWS_CLE_CONFIG_0 2                         // 0x8ac6
end SpuRomCleOvlToHws

start ROM SpuRomCleHwsToOvl		// index: 7436, table index: 170
    DMAON 6 1                                                    // 0x5826
    DMA HWS_CLE_CONFIG_0 ISP_SWSPAD_06 2                         // 0x898b
end SpuRomCleHwsToOvl

start ROM SpuRomCleFllParams		// index: 7437, table index: 171
    SETBNK 3 4                                                   // 0x5e43
    LDR ISP_SWSPAD_18_0 R0                                       // 0x5448 (perform_rx_lpm_while_tx_hpm_ind: 1:7 ,cle_disable_skip_n_en: 1:6 ,update_adva_from_nonce_en: 1:5 ,tx_sprinkler_packet_type: 2:3 ,time_sprinkler_ctr: 3:0 ,)
    ANDI R0 0x40 R0                                              // 0x7080
    SHIFTI R0 R0 0x6 1                                           // 0x4960
    REG R1 01                                                    // 0x4203
    SBNEQ DontDisableSkipNForCle                                 // 0x5a23
    REG2 R1 0x1f                                                 // 0x5c3f
    SETCLR 1 R1 CLB_CLB_CONTEXT0_0                               // 0x6a23 (Reserved_31_5: 3:5 ,fll_skip_n: 5:0 ,)
    REG2 R1 0x1                                                  // 0x5c03
    SETBAR 3 0                                                   // 0x5e03
    SETCLR 1 R1 HWS_RADIO_MODE_2                                 // 0x6aab (tx_beacon_packet_size: 5:3 ,sym_div_sel: 1:2 ,hw_radio_turn_off_en: 1:1 ,lo_buffer_rdi_pend_start: 1:0 ,)
    REG2 R1 0x80                                                 // 0x5d01
    SETCLR 1 R1 HWS_RADIO_MODE_1                                 // 0x6aa7 (lcaux_rdi_pend_start: 1:7 ,otp_power_off: 1:6 ,lo_extreme_txvdd_en: 1:5 ,lo_extreme_txbias_en: 1:4 ,lo_high_power_mode: 1:3 ,slow_clk_sel: 1:2 ,lo_tx_mode_en: 1:1 ,fast_lcaux_sel: 1:0 ,)
    OR R0 R0 R0                                                  // 0x0040
end SpuRomCleFllParams

start ROM SpuRomCopyCleAnalogctlForLcAuxIdacCalib		// index: 7441, table index: 172
    SETBAR 2 0                                                   // 0x5e02
    LDR ISP_SWSPAD_06_2 R0                                       // 0x545a (swspad_06: 8:0 ,)
    STR HWS_RADIO_TEMP_LOOP_CONTEXT_2 R0                         // 0x1626 (lcaux_idac_ctl: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomCopyCleAnalogctlForLcAuxIdacCalib

start ROM SpuRomCopyCleAnalogctlForWkupThresholdCalib		// index: 7442, table index: 173
    SETBAR 2 0                                                   // 0x5e02
    LDR ISP_SWSPAD_06_2 R0                                       // 0x545a (swspad_06: 8:0 ,)
    MOV R2 R0                                                    // 0x4602
    LDR ISP_SWSPAD_07_3 R0                                       // 0x545f (swspad_07: 8:0 ,)
    ANDI R0 E0 R0                                                // 0x71c0
    REG R1 80                                                    // 0x4301
    SBEQ comp_offset_fine                                        // 0x5a40
    REG R1 A0                                                    // 0x4341
    SBEQ bbcomp_offset                                           // 0x5a64
    REG R1 C0                                                    // 0x4381
    SBEQ bbamp_dcoc                                              // 0x5ab4
    MOV R0 R2                                                    // 0x4608
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR3_3 R1                                            // 0x54cf (hrr_envdet_comp_offset_crse: 4:4 ,hrr_envdet_vreg_0p2_ref: 3:1 ,hrr_envdet_2nd_ch_sweep_en: 1:0 ,)
    ANDI R1 0xf R1                                               // 0x721f
    SHIFTI R0 R0 0x4 0                                           // 0x4840
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    STR HWS_HRR3_3 R1                                            // 0x56cf (hrr_envdet_comp_offset_crse: 4:4 ,hrr_envdet_vreg_0p2_ref: 3:1 ,hrr_envdet_2nd_ch_sweep_en: 1:0 ,)
    REG R0 00                                                    // 0x4200
    REG R1 00                                                    // 0x4201
    SBEQ finish                                                  // 0x5aa8
    SETBNK 0 0                                                   // 0x5e00
    MOV R0 R2                                                    // 0x4608
    LDR HWS_HRR1_2 R1                                            // 0x54c6 (hrr_envdet_bbcomp_offset: 3:5 ,hrr_envdet_comp_offset_fine: 4:1 ,hrr_envdet_bbamp_mode_select: 1:0 ,)
    ANDI R1 0xe1 R1                                              // 0x73c3
    SHIFTI R0 R0 0x1 0                                           // 0x4810
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x1 1                                           // 0x4910
    STR HWS_HRR1_2 R1                                            // 0x56c6 (hrr_envdet_bbcomp_offset: 3:5 ,hrr_envdet_comp_offset_fine: 4:1 ,hrr_envdet_bbamp_mode_select: 1:0 ,)
    REG R0 00                                                    // 0x4200
    REG R1 00                                                    // 0x4201
    SBEQ finish                                                  // 0x5a7c
    SETBNK 0 0                                                   // 0x5e00
    MOV R0 R2                                                    // 0x4608
    ANDI R0 07 R0                                                // 0x700e
    REG R1 5                                                     // 0x420b
    SHIFTL R0 R0 R1                                              // 0x40d0
    ANDI R0 E0 R0                                                // 0x71c0
    LDR HWS_HRR1_2 R1                                            // 0x54c6 (hrr_envdet_bbcomp_offset: 3:5 ,hrr_envdet_comp_offset_fine: 4:1 ,hrr_envdet_bbamp_mode_select: 1:0 ,)
    ANDI R1 1F R1                                                // 0x723f
    OR R1 R0 R1                                                  // 0x4051
    STR HWS_HRR1_2 R1                                            // 0x56c6 (hrr_envdet_bbcomp_offset: 3:5 ,hrr_envdet_comp_offset_fine: 4:1 ,hrr_envdet_bbamp_mode_select: 1:0 ,)
    MOV R0 R2                                                    // 0x4608
    ANDI R0 18 R0                                                // 0x7030
    REG R1 3                                                     // 0x4207
    SHIFTR R0 R0 R1                                              // 0x4110
    ANDI R0 03 R0                                                // 0x7006
    LDR HWS_HRR1_3 R1                                            // 0x54c7 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    ANDI R1 FC R1                                                // 0x73f9
    OR R1 R0 R1                                                  // 0x4051
    STR HWS_HRR1_3 R1                                            // 0x56c7 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    REG R0 00                                                    // 0x4200
    REG R1 00                                                    // 0x4201
    SBEQ finish                                                  // 0x5a24
    SETBNK 0 0                                                   // 0x5e00
    MOV R0 R2                                                    // 0x4608
    LDR HWS_HRR3_0 R1                                            // 0x54cc (hrr_envdet_clk_select: 1:7 ,hrr_envdet_3rd_ch_sweep_en: 1:6 ,hrr_envdet_bbamp_dcoc: 6:0 ,)
    ANDI R1 0xc0 R1                                              // 0x7381
    SHIFTI R0 R0 0x0 0                                           // 0x4800
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR HWS_HRR3_0 R1                                            // 0x56cc (hrr_envdet_clk_select: 1:7 ,hrr_envdet_3rd_ch_sweep_en: 1:6 ,hrr_envdet_bbamp_dcoc: 6:0 ,)
    OR R0 R0 R0                                                  // 0x0040
end SpuRomCopyCleAnalogctlForWkupThresholdCalib

start ROM SpuRomCopyCleAnalogctlForLoVrefVbpCalib		// index: 7458, table index: 174
    SETBAR 2 0                                                   // 0x5e02
    LDR ISP_SWSPAD_06_2 R0                                       // 0x545a (swspad_06: 8:0 ,)
    MOV R2 R0                                                    // 0x4602
    LDR ISP_SWSPAD_07_3 R0                                       // 0x545f (swspad_07: 8:0 ,)
    ANDI R0 E0 R0                                                // 0x71c0
    REG R1 40                                                    // 0x4281
    SBEQ lo_vbp_tx_ctl                                           // 0x5a2c
    MOV R0 R2                                                    // 0x4608
    LDR HWS_RADIO_DYN_CLB_CONTEXT_1 R1                           // 0x54a1 (lo_reg_lv_rfb_tx: 3:5 ,lo_vbp_rx_ctl: 5:0 ,)
    ANDI R1 0x1f R1                                              // 0x723f
    SHIFTI R0 R0 0x5 0                                           // 0x4850
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x5 1                                           // 0x4950
    STR HWS_RADIO_DYN_CLB_CONTEXT_1 R1                           // 0x56a1 (lo_reg_lv_rfb_tx: 3:5 ,lo_vbp_rx_ctl: 5:0 ,)
    REG R0 00                                                    // 0x4200
    REG R1 00                                                    // 0x4201
    SBEQ finish                                                  // 0x5a20
    MOV R0 R2                                                    // 0x4608
    LDR HWS_RADIO_DYN_CLB_CONTEXT_0 R1                           // 0x54a0 (lo_vbp_tx_ctl: 5:3 ,lo_buffer_ctl: 3:0 ,)
    ANDI R1 0x7 R1                                               // 0x720f
    SHIFTI R0 R0 0x3 0                                           // 0x4830
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x3 1                                           // 0x4930
    STR HWS_RADIO_DYN_CLB_CONTEXT_0 R1                           // 0x56a0 (lo_vbp_tx_ctl: 5:3 ,lo_buffer_ctl: 3:0 ,)
    OR R0 R0 R0                                                  // 0x0040
    AND R0 R0 R0                                                 // 0x0000
end SpuRomCopyCleAnalogctlForLoVrefVbpCalib

start ROM SpuRomCopyCleAnalogctlForDfCalib		// index: 7465, table index: 175
    SETBAR 2 0                                                   // 0x5e02
    LDR ISP_SWSPAD_06_2 R0                                       // 0x545a (swspad_06: 8:0 ,)
    LDR HWS_RADIO_DYN_CLB_CONTEXT_3 R1                           // 0x54a3 (Reserved_31_31: 1:7 ,txdf_offset: 4:3 ,lo_reg_vbias_rfb_rx: 3:0 ,)
    ANDI R1 0x87 R1                                              // 0x730f
    SHIFTI R0 R0 0x3 0                                           // 0x4830
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x3 1                                           // 0x4930
    STR HWS_RADIO_DYN_CLB_CONTEXT_3 R1                           // 0x16a3 (Reserved_31_31: 1:7 ,txdf_offset: 4:3 ,lo_reg_vbias_rfb_rx: 3:0 ,)
end SpuRomCopyCleAnalogctlForDfCalib

start ROM SpuRomLoVrefVbpCalibRemoveSampling		// index: 7467, table index: 176
    SETBAR 0 15                                                  // 0x5ef0
    STRI ISP_LATCH_MEM_14_0 5E                                   // 0xaf38
    STRI ISP_LATCH_MEM_15_0 7E                                   // 0xbf3c
    REG2 R1 0x40                                                 // 0x5c81
    SETBNK 3 0                                                   // 0x5e03
    SETCLR 1 R1 HWS_RDI_MASK_1                                   // 0x6ab7 (lo_hv_vbias_sample_mask: 1:7 ,cbias_sym_reg_refgen_sample_mask: 1:6 ,lo_cmfb_en_mask: 1:5 ,lo_hv_vbias_en_mask: 1:4 ,cbias_irefgen_vref_sample_mask: 1:3 ,rc_sens_vref_iref_icap_en_mask: 1:2 ,sym_reg_en_mask: 1:1 ,sym_vbias_en_mask: 1:0 ,)
    LDR ISP_SWSPAD_27_0 R0                                       // 0x546c (rc_sensor_interface_sel: 1:7 ,temp_event_consec_event_counter: 2:5 ,txdf_offset_for_2mhz_symbol_rate: 4:1 ,lo_high_power_mode_en: 1:0 ,)
    ANDI R0 0x1 R0                                               // 0x7002
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    REG R1 00                                                    // 0x4201
    SBEQ finish                                                  // 0x5a2c
    SETBAR 3 15                                                  // 0x5ef3
    STRI ISP_LATCH_MEM_10_1 93                                   // 0xc9a9
    STRI ISP_LATCH_MEM_11_1 93                                   // 0xc9ad
    STRI ISP_LATCH_MEM_12_1 93                                   // 0xc9b1
    STRI ISP_LATCH_MEM_13_1 D3                                   // 0xe9b5
    STRI ISP_LATCH_MEM_14_1 D3                                   // 0xe9b9
    STRI ISP_LATCH_MEM_15_1 D3                                   // 0xe9bd
    REG2 R1 0x80                                                 // 0x5d01
    SETBAR 3 0                                                   // 0x5e03
    SETCLR 1 R1 HWS_RDI_MASK_1                                   // 0x6ab7 (lo_hv_vbias_sample_mask: 1:7 ,cbias_sym_reg_refgen_sample_mask: 1:6 ,lo_cmfb_en_mask: 1:5 ,lo_hv_vbias_en_mask: 1:4 ,cbias_irefgen_vref_sample_mask: 1:3 ,rc_sens_vref_iref_icap_en_mask: 1:2 ,sym_reg_en_mask: 1:1 ,sym_vbias_en_mask: 1:0 ,)
    OR R0 R0 R0                                                  // 0x0040
end SpuRomLoVrefVbpCalibRemoveSampling

start ROM SpuRomSetVbpRxForCh39		// index: 7473, table index: 177
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR1_3 R0                                            // 0x5447 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    ANDI R0 0xfc R0                                              // 0x71f8
    SHIFTI R0 R0 0x2 1                                           // 0x4920
    REG R1 06                                                    // 0x420d
    SBNEQ finish                                                 // 0x5a2f
    SETBAR 2 0                                                   // 0x5e02
    LDR ISP_SWSPAD_10_3 R0                                       // 0x546b (lo_vbp_rx_ctl_ch39: 5:3 ,srr_hws_jump_link_valid: 1:2 ,srr_net_rrt_sel: 1:1 ,srr_rrt_rd_index_msb: 1:0 ,)
    ANDI R0 0xf8 R0                                              // 0x71f0
    SHIFTI R0 R0 0x3 1                                           // 0x4930
    LDR HWS_RADIO_DYN_CLB_CONTEXT_1 R1                           // 0x54a1 (lo_reg_lv_rfb_tx: 3:5 ,lo_vbp_rx_ctl: 5:0 ,)
    ANDI R1 0xe0 R1                                              // 0x73c1
    SHIFTI R0 R0 0x0 0                                           // 0x4800
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR HWS_RADIO_DYN_CLB_CONTEXT_1 R1                           // 0x56a1 (lo_reg_lv_rfb_tx: 3:5 ,lo_vbp_rx_ctl: 5:0 ,)
    OR R0 R0 R0                                                  // 0x0040
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetVbpRxForCh39

start ROM SpuRomConfigFllForAuxMeas		// index: 7478, table index: 178
    REG2 R1 0x2                                                  // 0x5c05
    SETBAR 0 0                                                   // 0x5e00
    SETCLR 0 R1 HWS_HWSINTCTL_0                                  // 0x6a02 (Reserved_7_3: 5:3 ,pgen_clb: 1:2 ,pgen_isp: 1:1 ,pgen_mss: 1:0 ,)
    REG2 R1 0x4                                                  // 0x5c09
    SETCLR 0 R1 HWS_HWSINTCTL_0                                  // 0x6a02 (Reserved_7_3: 5:3 ,pgen_clb: 1:2 ,pgen_isp: 1:1 ,pgen_mss: 1:0 ,)
    REG2 R1 0x2                                                  // 0x5c05
    SETCLR 0 R1 HWS_HWSINTCTL_1                                  // 0x6a06 (Reserved_15_11: 5:3 ,rsten_clb: 1:2 ,rsten_isp: 1:1 ,rsten_mss: 1:0 ,)
    REG2 R1 0x4                                                  // 0x5c09
    SETCLR 0 R1 HWS_HWSINTCTL_1                                  // 0x6a06 (Reserved_15_11: 5:3 ,rsten_clb: 1:2 ,rsten_isp: 1:1 ,rsten_mss: 1:0 ,)
    REG2 R1 0x1                                                  // 0x5c03
    SETCLR 0 R1 HWS_HWSINTCTL_2                                  // 0x6a0a (Reserved_31_18: 6:2 ,sw_b2bpdo: 1:1 ,sw_b2ben: 1:0 ,)
    TIMER 2 MUL_BY_2                                             // 0x6202
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x61e1
    DMAON 1 8                                                    // 0x5901
    DMA ISP_SWSPAD_00 CLB_CLB_CONTEXT0 1                         // 0x4080
    DMA ISP_SWSPAD_01 CLB_MSRCTL0 3                              // 0x90c1
end SpuRomConfigFllForAuxMeas

start ROM SpuRomConfigFllForLoCalib		// index: 7482, table index: 179
    REG2 R1 0x2                                                  // 0x5c05
    SETBNK 2 0                                                   // 0x5e02
    SETCLR 0 R1 HWS_HWSINTCTL_0                                  // 0x6a02 (Reserved_7_3: 5:3 ,pgen_clb: 1:2 ,pgen_isp: 1:1 ,pgen_mss: 1:0 ,)
    REG2 R1 0x4                                                  // 0x5c09
    SETCLR 0 R1 HWS_HWSINTCTL_0                                  // 0x6a02 (Reserved_7_3: 5:3 ,pgen_clb: 1:2 ,pgen_isp: 1:1 ,pgen_mss: 1:0 ,)
    REG2 R1 0x2                                                  // 0x5c05
    SETCLR 0 R1 HWS_HWSINTCTL_1                                  // 0x6a06 (Reserved_15_11: 5:3 ,rsten_clb: 1:2 ,rsten_isp: 1:1 ,rsten_mss: 1:0 ,)
    REG2 R1 0x4                                                  // 0x5c09
    SETCLR 0 R1 HWS_HWSINTCTL_1                                  // 0x6a06 (Reserved_15_11: 5:3 ,rsten_clb: 1:2 ,rsten_isp: 1:1 ,rsten_mss: 1:0 ,)
    REG2 R1 0x1                                                  // 0x5c03
    SETCLR 0 R1 HWS_HWSINTCTL_2                                  // 0x6a0a (Reserved_31_18: 6:2 ,sw_b2bpdo: 1:1 ,sw_b2ben: 1:0 ,)
    TIMER 2 MUL_BY_2                                             // 0x6202
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x61e1
    DMAON 1 8                                                    // 0x5901
    DMA ISP_SWSPAD_00 CLB_CLB_CONTEXT0 1                         // 0x4080
    DMA ISP_SWSPAD_01 CLB_LOCTL0 3                               // 0x5181
    DMA ISP_SWSPAD_04 CLB_MSRCTL1 1                              // 0xc104
    LDR ISP_SWSPAD_05_0 R0                                       // 0x5454 (swspad_05: 8:0 ,)
    SETBAR 2 5                                                   // 0x5e52
    STR CLB_CW_SCALER_0 R0                                       // 0x5608 (cw_scaler: 8:0 ,)
    LDR ISP_SWSPAD_05_1 R0                                       // 0x5455 (swspad_05: 8:0 ,)
    STR CLB_CW_SCALER_1 R0                                       // 0x5609 (cw_scaler: 8:0 ,)
    LDR ISP_SWSPAD_05_2 R0                                       // 0x5456 (swspad_05: 8:0 ,)
    ANDI R0 03 R0                                                // 0x7006
    STR CLB_CW_SCALER_2 R0                                       // 0x160a (sensor_threshold: 6:2 ,cw_scaler: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomConfigFllForLoCalib

start ROM SpuRomConfigFllForSymCalib		// index: 7489, table index: 180
    REG2 R1 0x2                                                  // 0x5c05
    SETBAR 0 0                                                   // 0x5e00
    SETCLR 0 R1 HWS_HWSINTCTL_0                                  // 0x6a02 (Reserved_7_3: 5:3 ,pgen_clb: 1:2 ,pgen_isp: 1:1 ,pgen_mss: 1:0 ,)
    REG2 R1 0x4                                                  // 0x5c09
    SETCLR 0 R1 HWS_HWSINTCTL_0                                  // 0x6a02 (Reserved_7_3: 5:3 ,pgen_clb: 1:2 ,pgen_isp: 1:1 ,pgen_mss: 1:0 ,)
    REG2 R1 0x2                                                  // 0x5c05
    SETCLR 0 R1 HWS_HWSINTCTL_1                                  // 0x6a06 (Reserved_15_11: 5:3 ,rsten_clb: 1:2 ,rsten_isp: 1:1 ,rsten_mss: 1:0 ,)
    REG2 R1 0x4                                                  // 0x5c09
    SETCLR 0 R1 HWS_HWSINTCTL_1                                  // 0x6a06 (Reserved_15_11: 5:3 ,rsten_clb: 1:2 ,rsten_isp: 1:1 ,rsten_mss: 1:0 ,)
    REG2 R1 0x1                                                  // 0x5c03
    SETCLR 0 R1 HWS_HWSINTCTL_2                                  // 0x6a0a (Reserved_31_18: 6:2 ,sw_b2bpdo: 1:1 ,sw_b2ben: 1:0 ,)
    TIMER 2 MUL_BY_2                                             // 0x6202
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x61e1
    DMAON 1 8                                                    // 0x5901
    DMA ISP_SWSPAD_00 CLB_CLB_CONTEXT0 1                         // 0x4080
    DMA ISP_SWSPAD_01 CLB_SYMCTL0 3                              // 0x9241
end SpuRomConfigFllForSymCalib

start ROM SpuRomWaitFromOtp		// index: 7493, table index: 181
    REG R0 1                                                     // 0x4202
    REG R0 1                                                     // 0x4202
    REG R0 1                                                     // 0x4202
    REG R0 1                                                     // 0x0202
end SpuRomWaitFromOtp

start ROM SpuRomSetFlowManagerFsmCycleBeginInd0		// index: 7494, table index: 182
    REG2 R1 0x20                                                 // 0x5c41
    SETBAR 2 0                                                   // 0x5e02
    SETCLR 1 R1 ISP_SWSPAD_12_0                                  // 0x2bc3 (disable_debug_packet: 1:7 ,flow_manager_fsm_section_change_ind: 1:6 ,flow_manager_fsm_cycle_begin_ind: 1:5 ,fll_skip_n: 5:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetFlowManagerFsmCycleBeginInd0

start ROM SpuRomSetFlowManagerFsmCycleBeginInd1		// index: 7495, table index: 183
    REG2 R1 0x20                                                 // 0x5c41
    SETBAR 2 0                                                   // 0x5e02
    SETCLR 0 R1 ISP_SWSPAD_12_0                                  // 0x2bc2 (disable_debug_packet: 1:7 ,flow_manager_fsm_section_change_ind: 1:6 ,flow_manager_fsm_cycle_begin_ind: 1:5 ,fll_skip_n: 5:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetFlowManagerFsmCycleBeginInd1

start ROM SpuRomWkupStateCca		// index: 7496, table index: 184
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR1_3 R1                                            // 0x54c7 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    ANDI R1 0x3 R1                                               // 0x7207
    ORI R1 0x4 R1                                                // 0x7609
    STR HWS_HRR1_3 R1                                            // 0x16c7 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomWkupStateCca

start ROM SpuRomWkupStateCh37		// index: 7498, table index: 185
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR1_3 R1                                            // 0x54c7 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    ANDI R1 0x3 R1                                               // 0x7207
    ORI R1 0x8 R1                                                // 0x7611
    STR HWS_HRR1_3 R1                                            // 0x16c7 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomWkupStateCh37

start ROM SpuRomWkupStateCh38		// index: 7500, table index: 186
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR1_3 R1                                            // 0x54c7 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    ANDI R1 0x3 R1                                               // 0x7207
    ORI R1 0x10 R1                                               // 0x7621
    STR HWS_HRR1_3 R1                                            // 0x16c7 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomWkupStateCh38

start ROM SpuRomWkupStateCh39		// index: 7502, table index: 187
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR1_3 R1                                            // 0x54c7 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    ANDI R1 0x3 R1                                               // 0x7207
    ORI R1 0x18 R1                                               // 0x7631
    STR HWS_HRR1_3 R1                                            // 0x16c7 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomWkupStateCh39

start ROM SpuRomSaveEaWkupTimers		// index: 7504, table index: 188
    SETBNK 3 0                                                   // 0x5e03
    LDR HWS_TIMERS_CTL_2 R0                                      // 0x5412 (Reserved_23_22: 2:6 ,nrgdet_silent_duration_timer_value: 6:0 ,)
    ANDI R0 0x3f R0                                              // 0x707e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    LDR ISP_SWSPAD_29_2 R1                                       // 0x54f6 (high_or_mid_gear_ind: 1:7 ,perform_aux_meas_in_one_adv_event_ind: 1:6 ,nrgdet_silent_duration_timer_value: 6:0 ,)
    ANDI R1 0xc0 R1                                              // 0x7381
    SHIFTI R0 R0 0x0 0                                           // 0x4800
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR ISP_SWSPAD_29_2 R1                                       // 0x56f6 (high_or_mid_gear_ind: 1:7 ,perform_aux_meas_in_one_adv_event_ind: 1:6 ,nrgdet_silent_duration_timer_value: 6:0 ,)
    LDR HWS_TIMERS_CTL_3 R0                                      // 0x5413 (Reserved_31_30: 2:6 ,nrgdet_energy_duration_timer_value: 6:0 ,)
    ANDI R0 0x3f R0                                              // 0x707e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    SETBAR 4 0                                                   // 0x5e04
    LDR ISP_SRR_SPARE_1_3 R1                                     // 0x54c7 (Reserved_31_31: 1:7 ,nrgdet_energy_duration_timer_value: 6:1 ,radio_fll_ldo_trim: 4:0 ,)
    ANDI R1 0x81 R1                                              // 0x7303
    SHIFTI R0 R0 0x1 0                                           // 0x4810
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x1 1                                           // 0x4910
    STR ISP_SRR_SPARE_1_3 R1                                     // 0x16c7 (Reserved_31_31: 1:7 ,nrgdet_energy_duration_timer_value: 6:1 ,radio_fll_ldo_trim: 4:0 ,)
end SpuRomSaveEaWkupTimers

start ROM SpuRomVddDig2VddAdbDisable		// index: 7509, table index: 189
    REG2 R1 0x1                                                  // 0x5c03
    SETBAR 0 0                                                   // 0x5e00
    SETCLR 0 R1 HWS_HRR2_1                                       // 0x2b26 (hrr_envdet_rise_pattern: 5:3 ,hrr_envdet_meas_cond_sel: 1:2 ,hrr_hws_pg_rstn_delay: 1:1 ,hrr_vdd_dig_2_vdd_adb_dis: 1:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomVddDig2VddAdbDisable

start ROM SpuRomVddDig2VddAdbEnable		// index: 7510, table index: 190
    REG2 R1 0x1                                                  // 0x5c03
    SETBAR 0 0                                                   // 0x5e00
    SETCLR 1 R1 HWS_HRR2_1                                       // 0x2b27 (hrr_envdet_rise_pattern: 5:3 ,hrr_envdet_meas_cond_sel: 1:2 ,hrr_hws_pg_rstn_delay: 1:1 ,hrr_vdd_dig_2_vdd_adb_dis: 1:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomVddDig2VddAdbEnable

start ROM SpuRomSetMaxEnvdetClkFreq		// index: 7511, table index: 191
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR4_0 R1                                            // 0x54d0 (hrr_envdet_clk_fine: 4:4 ,hrr_envdet_clk_coarse: 4:0 ,)
    ANDI R1 0xf0 R1                                              // 0x73e1
    ORI R1 0x8 R1                                                // 0x7611
    STR HWS_HRR4_0 R1                                            // 0x16d0 (hrr_envdet_clk_fine: 4:4 ,hrr_envdet_clk_coarse: 4:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetMaxEnvdetClkFreq

start ROM SpuRomSetMaxAttenuation		// index: 7513, table index: 192
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR2_0 R1                                            // 0x54c8 (hrr_envdet_div2_clk_sel: 1:7 ,hrr_envdet_gate_delay_x2_sel: 1:6 ,hrr_envdet_sync_reset_mode_sel: 1:5 ,hrr_envdet_half_cycle_reset_sel: 1:4 ,hrr_envdet_rect_att: 4:0 ,)
    ANDI R1 0xf0 R1                                              // 0x73e1
    ORI R1 0xb R1                                                // 0x7617
    STR HWS_HRR2_0 R1                                            // 0x16c8 (hrr_envdet_div2_clk_sel: 1:7 ,hrr_envdet_gate_delay_x2_sel: 1:6 ,hrr_envdet_sync_reset_mode_sel: 1:5 ,hrr_envdet_half_cycle_reset_sel: 1:4 ,hrr_envdet_rect_att: 4:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetMaxAttenuation

start ROM SpuRomSetMinAttenuation		// index: 7515, table index: 193
    REG2 R1 0xf                                                  // 0x5c1f
    SETBAR 0 0                                                   // 0x5e00
    SETCLR 1 R1 HWS_HRR2_0                                       // 0x2b23 (hrr_envdet_div2_clk_sel: 1:7 ,hrr_envdet_gate_delay_x2_sel: 1:6 ,hrr_envdet_sync_reset_mode_sel: 1:5 ,hrr_envdet_half_cycle_reset_sel: 1:4 ,hrr_envdet_rect_att: 4:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetMinAttenuation

start ROM SpuRomSetSlimLdoTrimForContWkup		// index: 7516, table index: 194
    SETBNK 3 1                                                   // 0x5e13
    LDR HWS_DRR0_SHADOW_1 R0                                     // 0x5431 (crg_high_tail_current_enb: 1:7 ,pmu_rstn_trim: 2:5 ,slim_ldo_trim: 5:0 ,)
    ANDI R0 0x1f R0                                              // 0x703e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    LDR ISP_SWSPAD_30_0 R1                                       // 0x54f8 (temp_event_counter: 3:5 ,slim_ldo_trim_shadow: 5:0 ,)
    ANDI R1 0xe0 R1                                              // 0x73c1
    SHIFTI R0 R0 0x0 0                                           // 0x4800
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR ISP_SWSPAD_30_0 R1                                       // 0x56f8 (temp_event_counter: 3:5 ,slim_ldo_trim_shadow: 5:0 ,)
    SETBAR 4 1                                                   // 0x5e14
    LDR ISP_SRR_SPARE_12_0 R0                                    // 0x5470 (dovl_slim_ldo_trim_for_cont_wkup: 5:3 ,dovl_lo_dco_coarse_offset_for_wkup: 3:0 ,)
    ANDI R0 0xf8 R0                                              // 0x71f0
    SHIFTI R0 R0 0x3 1                                           // 0x4930
    LDR HWS_DRR0_SHADOW_1 R1                                     // 0x54b1 (crg_high_tail_current_enb: 1:7 ,pmu_rstn_trim: 2:5 ,slim_ldo_trim: 5:0 ,)
    ANDI R1 0xe0 R1                                              // 0x73c1
    SHIFTI R0 R0 0x0 0                                           // 0x4800
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR HWS_DRR0_SHADOW_1 R1                                     // 0x16b1 (crg_high_tail_current_enb: 1:7 ,pmu_rstn_trim: 2:5 ,slim_ldo_trim: 5:0 ,)
end SpuRomSetSlimLdoTrimForContWkup

start ROM SpuRomRestoreSlimLdoTrimAfterContWkup		// index: 7521, table index: 195
    SETBNK 3 1                                                   // 0x5e13
    LDR ISP_SWSPAD_30_0 R0                                       // 0x5478 (temp_event_counter: 3:5 ,slim_ldo_trim_shadow: 5:0 ,)
    ANDI R0 0x1f R0                                              // 0x703e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    LDR HWS_DRR0_SHADOW_1 R1                                     // 0x54b1 (crg_high_tail_current_enb: 1:7 ,pmu_rstn_trim: 2:5 ,slim_ldo_trim: 5:0 ,)
    ANDI R1 0xe0 R1                                              // 0x73c1
    SHIFTI R0 R0 0x0 0                                           // 0x4800
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR HWS_DRR0_SHADOW_1 R1                                     // 0x16b1 (crg_high_tail_current_enb: 1:7 ,pmu_rstn_trim: 2:5 ,slim_ldo_trim: 5:0 ,)
end SpuRomRestoreSlimLdoTrimAfterContWkup

start ROM SpuRomSetPacketStructureInPacket		// index: 7524, table index: 196
    SETBAR 2 0                                                   // 0x5e02
    LDR ISP_SWSPAD_10_0 R0                                       // 0x5468 (tx_pkt_ctr: 8:0 ,)
    ANDI R0 03 R0                                                // 0x7006
    REG R1 6                                                     // 0x420d
    SHIFTL R0 R0 R1                                              // 0x40d0
    SETBAR 4 0                                                   // 0x5e04
    LDR ISP_SRR_SPARE_9_3 R1                                     // 0x54e7 (dovl_hrr_envdet_meas_cond_sel: 1:7 ,dovl_hrr_envdet_silent_duration_thr: 6:1 ,dovl_hrr_hws_pg_rstn_delay: 1:0 ,)
    ANDI R1 3F R1                                                // 0x727f
    OR R1 R0 R1                                                  // 0x4051
    STR ISP_SRR_SPARE_9_3 R1                                     // 0x16e7 (dovl_hrr_envdet_meas_cond_sel: 1:7 ,dovl_hrr_envdet_silent_duration_thr: 6:1 ,dovl_hrr_hws_pg_rstn_delay: 1:0 ,)
end SpuRomSetPacketStructureInPacket

start ROM SpuCopyGroupID		// index: 7527, table index: 197
    DMAON 21 1                                                   // 0x5835
    DMA HWS_DEF_PGXDID ISP_SWSPAD_01 1                           // 0x806a
end SpuCopyGroupID

start ROM SpuRomInitializeUID		// index: 7528, table index: 198
       DMAON 22 1                                                // 0x5836
       DMA HWS_DEF_WILIOT_UID_0 ISP_SWSPAD_04 1                  // 0x4134
       DMA HWS_DEF_WILIOT_UID_1 ISP_SWSPAD_03 1                  // 0x80f5
       AND R0 R0 R0                                              // 0x0000
end SpuRomInitializeUID

start ROM SpuRomCopyFlowVersionToPacketFromGnvm		// index: 7529, table index: 199
    SETBAR 13 0                                                  // 0x5e0d
    LDR HWS_DEF_VERSION_CRC_0 R1                                 // 0x54ec (def_version_major_minor: 8:0 ,)
    LDR HWS_DEF_VERSION_CRC_1 R2                                 // 0x556d (def_version_major_minor: 8:0 ,)
       SETBAR 2 0                                                // 0x5e02
       STR ISP_SWSPAD_00_3 R2                                    // 0x5743 (swspad_00: 8:0 ,)
       STR ISP_SWSPAD_00_2 R1                                    // 0x16c2 (swspad_00: 8:0 ,)
end SpuRomCopyFlowVersionToPacketFromGnvm

start ROM SpuRomUseMaxLcAuxFreq		// index: 7531, table index: 200
    REG2 R1 0x6                                                  // 0x5c0d
    SETBAR 0 0                                                   // 0x5e00
    SETCLR 0 R1 HWS_RADIO_WS_CONTEXT_1_2                         // 0x2a7a (radio_fll_ldo_trim: 3:5 ,Reserved_20_19: 2:3 ,lcaux_div_ctl: 2:1 ,ret_lcaux_iref_lpf_en: 1:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomUseMaxLcAuxFreq

start ROM SpuRomSetLcAuxFreqForTrng		// index: 7532, table index: 201
    SETBAR 4 0                                                   // 0x5e04
    LDR ISP_SRR_SPARE_12_1 R0                                    // 0x5471 (dovl_adb_done_delay_for_cca: 3:5 ,dovl_fall_pattern_mask_for_cca: 2:3 ,dovl_lcaux_div_ctl_for_trng: 2:1 ,dovl_symbol_rate_2mhz_or_1mhz_ind: 1:0 ,)
    ANDI R0 0x6 R0                                               // 0x700c
    SHIFTI R0 R0 0x1 1                                           // 0x4910
    LDR HWS_RADIO_WS_CONTEXT_1_2 R1                              // 0x549e (radio_fll_ldo_trim: 3:5 ,Reserved_20_19: 2:3 ,lcaux_div_ctl: 2:1 ,ret_lcaux_iref_lpf_en: 1:0 ,)
    ANDI R1 0xf9 R1                                              // 0x73f3
    SHIFTI R0 R0 0x1 0                                           // 0x4810
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x1 1                                           // 0x4910
    STR HWS_RADIO_WS_CONTEXT_1_2 R1                              // 0x169e (radio_fll_ldo_trim: 3:5 ,Reserved_20_19: 2:3 ,lcaux_div_ctl: 2:1 ,ret_lcaux_iref_lpf_en: 1:0 ,)
end SpuRomSetLcAuxFreqForTrng

start ROM SpuRomSetSymFreqForTrng		// index: 7535, table index: 202
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR6_2 R0                                            // 0x545a (hrr_hrr6_24_20_reserved: 4:4 ,hrr_trng_noiz_clk_config: 1:3 ,hrr_trng_samp_clk_config: 1:2 ,hrr_fll_lobuf_tdc_dcdc_high_power_mode: 1:1 ,hrr_sym_dcdc_high_power_mode: 1:0 ,)
    ANDI R0 0x4 R0                                               // 0x7008
    SHIFTI R0 R0 0x2 1                                           // 0x4920
    REG R1 00                                                    // 0x4201
    SBEQ Sym1Mhz                                                 // 0x5a14
    REG2 R1 0x2                                                  // 0x5c05
    SETCLR 1 R1 HWS_RADIO_MODE_0                                 // 0x6aa3 (lc_supply_en: 1:7 ,lobuf_tdc_supply_en: 1:6 ,loh_supply_en: 1:5 ,lol_supply_en: 1:4 ,sym_supply_en: 1:3 ,symdco_4mhz_cgen: 1:2 ,symdco_1mhz_cgen: 1:1 ,lo_buffer_high_gain_sel: 1:0 ,)
    REG2 R1 0x4                                                  // 0x5c09
    SETCLR 0 R1 HWS_RADIO_MODE_0                                 // 0x6aa2 (lc_supply_en: 1:7 ,lobuf_tdc_supply_en: 1:6 ,loh_supply_en: 1:5 ,lol_supply_en: 1:4 ,sym_supply_en: 1:3 ,symdco_4mhz_cgen: 1:2 ,symdco_1mhz_cgen: 1:1 ,lo_buffer_high_gain_sel: 1:0 ,)
    OR R0 R0 R0                                                  // 0x0040
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetSymFreqForTrng

start ROM SpuRomCopyTrngToNonceSrr		// index: 7538, table index: 203
    DMAON 5 1                                                    // 0x5825
    DMA HWS_NONCE ISP_SWSPAD_02 1                                // 0x8093
end SpuRomCopyTrngToNonceSrr

start ROM SpuRomCopyTrngToAdvaSrr		// index: 7539, table index: 204
    DMAON 5 2                                                    // 0x5845
    DMA HWS_NONCE ISP_SRR_SPARE_4 1                              // 0x8113
end SpuRomCopyTrngToAdvaSrr

start ROM SpuRomCopyTempEventCounterToGroupID		// index: 7540, table index: 205
    SETBAR 3 0                                                   // 0x5e03
    LDR ISP_SWSPAD_30_0 R0                                       // 0x5478 (temp_event_counter: 3:5 ,slim_ldo_trim_shadow: 5:0 ,)
    ANDI R0 0xe0 R0                                              // 0x71c0
    SHIFTI R0 R0 0x5 1                                           // 0x4950
    SETBAR 2 0                                                   // 0x5e02
    LDR ISP_SWSPAD_01_3 R1                                       // 0x54c7 (swspad_01: 8:0 ,)
    ANDI R1 F8 R1                                                // 0x73f1
    OR R0 R1 R0                                                  // 0x4044
    STR ISP_SWSPAD_01_3 R0                                       // 0x1647 (swspad_01: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomCopyTempEventCounterToGroupID

start ROM SpuRomElevatorGearConfig		// index: 7543, table index: 206
    REG2 R1 0x1                                                  // 0x5c03
    SETBNK 3 1                                                   // 0x5e13
    SETCLR 1 R1 ISP_SWSPAD_26_0                                  // 0x6ba3 (debug_lo_vref_vbp_calib_success_ind: 1:7 ,debug_wkup_threshold_calib_success_ind: 1:6 ,debug_lcaux_idac_calib_success_ind: 1:5 ,df_calib_success_ind: 1:4 ,lo_vref_vbp_calib_success_ind: 1:3 ,wkup_threshold_calib_success_ind: 1:2 ,lcaux_idac_calib_success_ind: 1:1 ,power_gearing_success_ind: 1:0 ,)
    LDR ISP_SWSPAD_19_1 R0                                       // 0x544d (pmu_vstart_trim_elevator_gear: 8:0 ,)
    STR HWS_DRR0_SHADOW_0 R0                                     // 0x5630 (pmu_vstart_trim: 8:0 ,)
    SETBAR 2 1                                                   // 0x5e12
    LDR ISP_POWER_GEARING_OVERLAY_0_2 R0                         // 0x5462 (dovl_rwdt_mode_for_high_gear_power_gearing: 2:6 ,dovl_rwdt_mode_for_elevator_gear_power_gearing: 2:4 ,dovl_rwdt_mode_for_high_gear_steady_state: 2:2 ,dovl_rwdt_slow_harv_bit_sel_for_high_gear_steady_state: 2:0 ,)
    ANDI R0 0x30 R0                                              // 0x7060
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    LDR HWS_DRR0_SHADOW_3 R1                                     // 0x54b3 (slim_dcdc_neg_high_power_mode_enb: 1:7 ,disable_soft_power_off: 1:6 ,vstart_count_timer_enb: 1:5 ,timer_clk_sel: 2:3 ,psu_voltage_limiter_en: 1:2 ,rwdt_mode: 2:0 ,)
    ANDI R1 0xfc R1                                              // 0x73f9
    SHIFTI R0 R0 0x0 0                                           // 0x4800
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR HWS_DRR0_SHADOW_3 R1                                     // 0x56b3 (slim_dcdc_neg_high_power_mode_enb: 1:7 ,disable_soft_power_off: 1:6 ,vstart_count_timer_enb: 1:5 ,timer_clk_sel: 2:3 ,psu_voltage_limiter_en: 1:2 ,rwdt_mode: 2:0 ,)
    LDR ISP_POWER_GEARING_OVERLAY_0_0 R0                         // 0x5460 (dovl_rwdt_frc_bit_sel_for_high_gear_power_gearing: 4:4 ,dovl_rwdt_frc_bit_sel_for_elevator_gear_power_gearing: 4:0 ,)
    ANDI R0 0xf R0                                               // 0x701e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    LDR HWS_DRR1_SHADOW_0 R1                                     // 0x54b4 (rwdt_frc_bit_sel: 4:4 ,def_timer_enb: 1:3 ,pend_vstart: 1:2 ,wkup_enb: 1:1 ,pace_enb: 1:0 ,)
    ANDI R1 0xf R1                                               // 0x721f
    SHIFTI R0 R0 0x4 0                                           // 0x4840
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    STR HWS_DRR1_SHADOW_0 R1                                     // 0x56b4 (rwdt_frc_bit_sel: 4:4 ,def_timer_enb: 1:3 ,pend_vstart: 1:2 ,wkup_enb: 1:1 ,pace_enb: 1:0 ,)
    LDR ISP_POWER_GEARING_OVERLAY_0_1 R0                         // 0x5461 (dovl_rwdt_slow_harv_bit_sel_for_high_gear_power_gearing: 2:6 ,dovl_rwdt_slow_harv_bit_sel_for_elevator_gear_power_gearing: 2:4 ,dovl_rwdt_frc_bit_sel_for_high_gear_steady_state: 4:0 ,)
    ANDI R0 0x30 R0                                              // 0x7060
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    LDR HWS_DRR1_SHADOW_1 R1                                     // 0x54b5 (rwdt_slow_harv_bit_sel: 2:6 ,analog_spare: 4:2 ,hrr_init_not_done: 1:1 ,brg_bypass_enb: 1:0 ,)
    ANDI R1 0x3f R1                                              // 0x727f
    SHIFTI R0 R0 0x6 0                                           // 0x4860
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x6 1                                           // 0x4960
    STR HWS_DRR1_SHADOW_1 R1                                     // 0x16b5 (rwdt_slow_harv_bit_sel: 2:6 ,analog_spare: 4:2 ,hrr_init_not_done: 1:1 ,brg_bypass_enb: 1:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomElevatorGearConfig

start ROM SpuRomDisableGearShiftTOExcptn		// index: 7552, table index: 207
    REG2 R1 0x3                                                  // 0x5c07
    SETBAR 0 1                                                   // 0x5e10
    SETCLR 0 R1 HWS_DRR0_SHADOW_3                                // 0x6ace (slim_dcdc_neg_high_power_mode_enb: 1:7 ,disable_soft_power_off: 1:6 ,vstart_count_timer_enb: 1:5 ,timer_clk_sel: 2:3 ,psu_voltage_limiter_en: 1:2 ,rwdt_mode: 2:0 ,)
    LDR HWS_DRR1_SHADOW_0 R1                                     // 0x54b4 (rwdt_frc_bit_sel: 4:4 ,def_timer_enb: 1:3 ,pend_vstart: 1:2 ,wkup_enb: 1:1 ,pace_enb: 1:0 ,)
    ANDI R1 0xf R1                                               // 0x721f
    ORI R1 0x30 R1                                               // 0x7661
    STR HWS_DRR1_SHADOW_0 R1                                     // 0x56b4 (rwdt_frc_bit_sel: 4:4 ,def_timer_enb: 1:3 ,pend_vstart: 1:2 ,wkup_enb: 1:1 ,pace_enb: 1:0 ,)
    REG2 R1 0xc0                                                 // 0x5d81
    SETCLR 0 R1 HWS_DRR1_SHADOW_1                                // 0x2ad6 (rwdt_slow_harv_bit_sel: 2:6 ,analog_spare: 4:2 ,hrr_init_not_done: 1:1 ,brg_bypass_enb: 1:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomDisableGearShiftTOExcptn

start ROM SpuRomHighGearConfig		// index: 7555, table index: 208
    REG2 R1 0x4                                                  // 0x5c09
    SETBNK 2 1                                                   // 0x5e12
    SETCLR 1 R1 HWS_DRR0_SHADOW_3                                // 0x6acf (slim_dcdc_neg_high_power_mode_enb: 1:7 ,disable_soft_power_off: 1:6 ,vstart_count_timer_enb: 1:5 ,timer_clk_sel: 2:3 ,psu_voltage_limiter_en: 1:2 ,rwdt_mode: 2:0 ,)
    LDR ISP_POWER_GEARING_OVERLAY_0_2 R0                         // 0x5462 (dovl_rwdt_mode_for_high_gear_power_gearing: 2:6 ,dovl_rwdt_mode_for_elevator_gear_power_gearing: 2:4 ,dovl_rwdt_mode_for_high_gear_steady_state: 2:2 ,dovl_rwdt_slow_harv_bit_sel_for_high_gear_steady_state: 2:0 ,)
    ANDI R0 0xc0 R0                                              // 0x7180
    SHIFTI R0 R0 0x6 1                                           // 0x4960
    LDR HWS_DRR0_SHADOW_3 R1                                     // 0x54b3 (slim_dcdc_neg_high_power_mode_enb: 1:7 ,disable_soft_power_off: 1:6 ,vstart_count_timer_enb: 1:5 ,timer_clk_sel: 2:3 ,psu_voltage_limiter_en: 1:2 ,rwdt_mode: 2:0 ,)
    ANDI R1 0xfc R1                                              // 0x73f9
    SHIFTI R0 R0 0x0 0                                           // 0x4800
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR HWS_DRR0_SHADOW_3 R1                                     // 0x56b3 (slim_dcdc_neg_high_power_mode_enb: 1:7 ,disable_soft_power_off: 1:6 ,vstart_count_timer_enb: 1:5 ,timer_clk_sel: 2:3 ,psu_voltage_limiter_en: 1:2 ,rwdt_mode: 2:0 ,)
    LDR ISP_POWER_GEARING_OVERLAY_0_0 R0                         // 0x5460 (dovl_rwdt_frc_bit_sel_for_high_gear_power_gearing: 4:4 ,dovl_rwdt_frc_bit_sel_for_elevator_gear_power_gearing: 4:0 ,)
    ANDI R0 0xf0 R0                                              // 0x71e0
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    LDR HWS_DRR1_SHADOW_0 R1                                     // 0x54b4 (rwdt_frc_bit_sel: 4:4 ,def_timer_enb: 1:3 ,pend_vstart: 1:2 ,wkup_enb: 1:1 ,pace_enb: 1:0 ,)
    ANDI R1 0xf R1                                               // 0x721f
    SHIFTI R0 R0 0x4 0                                           // 0x4840
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    STR HWS_DRR1_SHADOW_0 R1                                     // 0x56b4 (rwdt_frc_bit_sel: 4:4 ,def_timer_enb: 1:3 ,pend_vstart: 1:2 ,wkup_enb: 1:1 ,pace_enb: 1:0 ,)
    LDR ISP_POWER_GEARING_OVERLAY_0_1 R0                         // 0x5461 (dovl_rwdt_slow_harv_bit_sel_for_high_gear_power_gearing: 2:6 ,dovl_rwdt_slow_harv_bit_sel_for_elevator_gear_power_gearing: 2:4 ,dovl_rwdt_frc_bit_sel_for_high_gear_steady_state: 4:0 ,)
    ANDI R0 0xc0 R0                                              // 0x7180
    SHIFTI R0 R0 0x6 1                                           // 0x4960
    LDR HWS_DRR1_SHADOW_1 R1                                     // 0x54b5 (rwdt_slow_harv_bit_sel: 2:6 ,analog_spare: 4:2 ,hrr_init_not_done: 1:1 ,brg_bypass_enb: 1:0 ,)
    ANDI R1 0x3f R1                                              // 0x727f
    SHIFTI R0 R0 0x6 0                                           // 0x4860
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x6 1                                           // 0x4960
    STR HWS_DRR1_SHADOW_1 R1                                     // 0x56b5 (rwdt_slow_harv_bit_sel: 2:6 ,analog_spare: 4:2 ,hrr_init_not_done: 1:1 ,brg_bypass_enb: 1:0 ,)
    SETBAR 3 1                                                   // 0x5e13
    LDR ISP_SWSPAD_19_2 R0                                       // 0x544e (pmu_vstart_trim_high_gear: 8:0 ,)
    STR HWS_DRR0_SHADOW_0 R0                                     // 0x5630 (pmu_vstart_trim: 8:0 ,)
    REG2 R1 0x80                                                 // 0x5d01
    SETCLR 1 R1 HWS_DRR0_SHADOW_3                                // 0x6acf (slim_dcdc_neg_high_power_mode_enb: 1:7 ,disable_soft_power_off: 1:6 ,vstart_count_timer_enb: 1:5 ,timer_clk_sel: 2:3 ,psu_voltage_limiter_en: 1:2 ,rwdt_mode: 2:0 ,)
    REG2 R1 0x4                                                  // 0x5c09
    SETBAR 0 1                                                   // 0x5e10
    SETCLR 0 R1 HWS_HRR4_3                                       // 0x6b4e (hrr_hrr4_31_28_reserved: 4:4 ,hrr_dig_ldo_otp_mode: 1:3 ,hrr_main_dcdc_neg_high_power_mode: 1:2 ,hrr_envdet_bbamp_short_out: 1:1 ,hrr_envdet_bbamp_i_x2_sel: 1:0 ,)
    REG2 R1 0x8                                                  // 0x5c11
    SETCLR 0 R1 HWS_HRR4_3                                       // 0x6b4e (hrr_hrr4_31_28_reserved: 4:4 ,hrr_dig_ldo_otp_mode: 1:3 ,hrr_main_dcdc_neg_high_power_mode: 1:2 ,hrr_envdet_bbamp_short_out: 1:1 ,hrr_envdet_bbamp_i_x2_sel: 1:0 ,)
    LDR HWS_HRR4_1 R0                                            // 0x5451 (hrr_keep_otp_shut_off: 1:7 ,hrr_envdet_bbamp_actload: 2:5 ,hrr_dig_ldo_trim: 5:0 ,)
    ANDI R0 0x1f R0                                              // 0x703e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    ORI R0 10 R0                                                 // 0x7420
    LDR HWS_HRR4_1 R1                                            // 0x54d1 (hrr_keep_otp_shut_off: 1:7 ,hrr_envdet_bbamp_actload: 2:5 ,hrr_dig_ldo_trim: 5:0 ,)
    ANDI R1 0xe0 R1                                              // 0x73c1
    SHIFTI R0 R0 0x0 0                                           // 0x4800
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR HWS_HRR4_1 R1                                            // 0x56d1 (hrr_keep_otp_shut_off: 1:7 ,hrr_envdet_bbamp_actload: 2:5 ,hrr_dig_ldo_trim: 5:0 ,)
    REG2 R1 0x1                                                  // 0x5c03
    SETCLR 0 R1 HWS_HRR6_2                                       // 0x6b6a (hrr_hrr6_24_20_reserved: 4:4 ,hrr_trng_noiz_clk_config: 1:3 ,hrr_trng_samp_clk_config: 1:2 ,hrr_fll_lobuf_tdc_dcdc_high_power_mode: 1:1 ,hrr_sym_dcdc_high_power_mode: 1:0 ,)
    REG2 R1 0x2                                                  // 0x5c05
    SETCLR 0 R1 HWS_HRR6_2                                       // 0x2b6a (hrr_hrr6_24_20_reserved: 4:4 ,hrr_trng_noiz_clk_config: 1:3 ,hrr_trng_samp_clk_config: 1:2 ,hrr_fll_lobuf_tdc_dcdc_high_power_mode: 1:1 ,hrr_sym_dcdc_high_power_mode: 1:0 ,)
end SpuRomHighGearConfig

start ROM SpuRomMidGearConfig		// index: 7569, table index: 209
    REG2 R1 0x80                                                 // 0x5d01
    SETBNK 3 1                                                   // 0x5e13
    SETCLR 1 R1 ISP_SWSPAD_29_2                                  // 0x6bdb (high_or_mid_gear_ind: 1:7 ,perform_aux_meas_in_one_adv_event_ind: 1:6 ,nrgdet_silent_duration_timer_value: 6:0 ,)
    LDR ISP_SWSPAD_19_3 R0                                       // 0x544f (rwdt_mode_for_mid_gear_steady_state: 2:6 ,rwdt_slow_harv_bit_sel_for_mid_gear_steady_state: 2:4 ,rwdt_frc_bit_sel_for_mid_gear_steady_state: 4:0 ,)
    ANDI R0 0xc0 R0                                              // 0x7180
    SHIFTI R0 R0 0x6 1                                           // 0x4960
    LDR HWS_DRR0_SHADOW_3 R1                                     // 0x54b3 (slim_dcdc_neg_high_power_mode_enb: 1:7 ,disable_soft_power_off: 1:6 ,vstart_count_timer_enb: 1:5 ,timer_clk_sel: 2:3 ,psu_voltage_limiter_en: 1:2 ,rwdt_mode: 2:0 ,)
    ANDI R1 0xfc R1                                              // 0x73f9
    SHIFTI R0 R0 0x0 0                                           // 0x4800
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR HWS_DRR0_SHADOW_3 R1                                     // 0x56b3 (slim_dcdc_neg_high_power_mode_enb: 1:7 ,disable_soft_power_off: 1:6 ,vstart_count_timer_enb: 1:5 ,timer_clk_sel: 2:3 ,psu_voltage_limiter_en: 1:2 ,rwdt_mode: 2:0 ,)
    REG2 R1 0x4                                                  // 0x5c09
    SETCLR 0 R1 HWS_DRR0_SHADOW_3                                // 0x6ace (slim_dcdc_neg_high_power_mode_enb: 1:7 ,disable_soft_power_off: 1:6 ,vstart_count_timer_enb: 1:5 ,timer_clk_sel: 2:3 ,psu_voltage_limiter_en: 1:2 ,rwdt_mode: 2:0 ,)
    LDR ISP_SWSPAD_19_3 R0                                       // 0x544f (rwdt_mode_for_mid_gear_steady_state: 2:6 ,rwdt_slow_harv_bit_sel_for_mid_gear_steady_state: 2:4 ,rwdt_frc_bit_sel_for_mid_gear_steady_state: 4:0 ,)
    ANDI R0 0xf R0                                               // 0x701e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    LDR HWS_DRR1_SHADOW_0 R1                                     // 0x54b4 (rwdt_frc_bit_sel: 4:4 ,def_timer_enb: 1:3 ,pend_vstart: 1:2 ,wkup_enb: 1:1 ,pace_enb: 1:0 ,)
    ANDI R1 0xf R1                                               // 0x721f
    SHIFTI R0 R0 0x4 0                                           // 0x4840
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    STR HWS_DRR1_SHADOW_0 R1                                     // 0x56b4 (rwdt_frc_bit_sel: 4:4 ,def_timer_enb: 1:3 ,pend_vstart: 1:2 ,wkup_enb: 1:1 ,pace_enb: 1:0 ,)
    LDR ISP_SWSPAD_19_3 R0                                       // 0x544f (rwdt_mode_for_mid_gear_steady_state: 2:6 ,rwdt_slow_harv_bit_sel_for_mid_gear_steady_state: 2:4 ,rwdt_frc_bit_sel_for_mid_gear_steady_state: 4:0 ,)
    ANDI R0 0x30 R0                                              // 0x7060
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    LDR HWS_DRR1_SHADOW_1 R1                                     // 0x54b5 (rwdt_slow_harv_bit_sel: 2:6 ,analog_spare: 4:2 ,hrr_init_not_done: 1:1 ,brg_bypass_enb: 1:0 ,)
    ANDI R1 0x3f R1                                              // 0x727f
    SHIFTI R0 R0 0x6 0                                           // 0x4860
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x6 1                                           // 0x4960
    STR HWS_DRR1_SHADOW_1 R1                                     // 0x56b5 (rwdt_slow_harv_bit_sel: 2:6 ,analog_spare: 4:2 ,hrr_init_not_done: 1:1 ,brg_bypass_enb: 1:0 ,)
    REG2 R1 0x80                                                 // 0x5d01
    SETCLR 0 R1 HWS_DRR0_SHADOW_3                                // 0x6ace (slim_dcdc_neg_high_power_mode_enb: 1:7 ,disable_soft_power_off: 1:6 ,vstart_count_timer_enb: 1:5 ,timer_clk_sel: 2:3 ,psu_voltage_limiter_en: 1:2 ,rwdt_mode: 2:0 ,)
    LDR ISP_SWSPAD_19_0 R0                                       // 0x544c (pmu_vstart_trim_mid_gear: 8:0 ,)
    STR HWS_DRR0_SHADOW_0 R0                                     // 0x5630 (pmu_vstart_trim: 8:0 ,)
    REG2 R1 0x4                                                  // 0x5c09
    SETBAR 0 1                                                   // 0x5e10
    SETCLR 1 R1 HWS_HRR4_3                                       // 0x6b4f (hrr_hrr4_31_28_reserved: 4:4 ,hrr_dig_ldo_otp_mode: 1:3 ,hrr_main_dcdc_neg_high_power_mode: 1:2 ,hrr_envdet_bbamp_short_out: 1:1 ,hrr_envdet_bbamp_i_x2_sel: 1:0 ,)
    REG2 R1 0x8                                                  // 0x5c11
    SETCLR 1 R1 HWS_HRR4_3                                       // 0x6b4f (hrr_hrr4_31_28_reserved: 4:4 ,hrr_dig_ldo_otp_mode: 1:3 ,hrr_main_dcdc_neg_high_power_mode: 1:2 ,hrr_envdet_bbamp_short_out: 1:1 ,hrr_envdet_bbamp_i_x2_sel: 1:0 ,)
    LDR HWS_HRR4_1 R0                                            // 0x5451 (hrr_keep_otp_shut_off: 1:7 ,hrr_envdet_bbamp_actload: 2:5 ,hrr_dig_ldo_trim: 5:0 ,)
    ANDI R0 0x1f R0                                              // 0x703e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    ANDI R0 EF R0                                                // 0x71de
    LDR HWS_HRR4_1 R1                                            // 0x54d1 (hrr_keep_otp_shut_off: 1:7 ,hrr_envdet_bbamp_actload: 2:5 ,hrr_dig_ldo_trim: 5:0 ,)
    ANDI R1 0xe0 R1                                              // 0x73c1
    SHIFTI R0 R0 0x0 0                                           // 0x4800
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR HWS_HRR4_1 R1                                            // 0x56d1 (hrr_keep_otp_shut_off: 1:7 ,hrr_envdet_bbamp_actload: 2:5 ,hrr_dig_ldo_trim: 5:0 ,)
    REG2 R1 0x1                                                  // 0x5c03
    SETCLR 1 R1 HWS_HRR6_2                                       // 0x6b6b (hrr_hrr6_24_20_reserved: 4:4 ,hrr_trng_noiz_clk_config: 1:3 ,hrr_trng_samp_clk_config: 1:2 ,hrr_fll_lobuf_tdc_dcdc_high_power_mode: 1:1 ,hrr_sym_dcdc_high_power_mode: 1:0 ,)
    REG2 R1 0x2                                                  // 0x5c05
    SETCLR 1 R1 HWS_HRR6_2                                       // 0x2b6b (hrr_hrr6_24_20_reserved: 4:4 ,hrr_trng_noiz_clk_config: 1:3 ,hrr_trng_samp_clk_config: 1:2 ,hrr_fll_lobuf_tdc_dcdc_high_power_mode: 1:1 ,hrr_sym_dcdc_high_power_mode: 1:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomMidGearConfig

start ROM SpuRomPowerGearCheckGearReached		// index: 7583, table index: 210
    SETBAR 2 0                                                   // 0x5e02
    STRI ISP_SWSPAD_10_2 0x1                                     // 0x80ea (exception_jump_offset: 8:0 ,)
    SETBAR 3 0                                                   // 0x5e03
    LDR ISP_SWSPAD_21_3 R0                                       // 0x5457 (awdt_exception_cause_status: 1:7 ,rwdt_exception_cause_status: 1:6 ,nrgdet_exception_cause_status: 1:5 ,timer_exception_cause_status: 1:4 ,aux_meas_ch_ctr: 4:0 ,)
    ANDI R0 0x10 R0                                              // 0x7020
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    MOV R2 R0                                                    // 0x4602
    LDR ISP_SWSPAD_21_3 R1                                       // 0x54d7 (awdt_exception_cause_status: 1:7 ,rwdt_exception_cause_status: 1:6 ,nrgdet_exception_cause_status: 1:5 ,timer_exception_cause_status: 1:4 ,aux_meas_ch_ctr: 4:0 ,)
    ANDI R1 0x40 R1                                              // 0x7281
    SHIFTI R1 R1 0x6 1                                           // 0x4965
    MOV R0 R2                                                    // 0x4608
    OR R0 R0 R1                                                  // 0x4050
    REG R1 01                                                    // 0x4203
    SBEQ PowerGearException                                      // 0x5a0c
    SETBAR 2 0                                                   // 0x5e02
    STRI ISP_SWSPAD_10_2 0x2                                     // 0x816a (exception_jump_offset: 8:0 ,)
    LJUMP SpuRomJumpXRdrsRelativeToEnd                           // 0x6d8b
    OR R0 R0 R0                                                  // 0x0040
end SpuRomPowerGearCheckGearReached

start ROM SpuRomPowerGearConfigHighGearSteadyState		// index: 7588, table index: 211
    REG2 R1 0x80                                                 // 0x5d01
    SETBAR 3 0                                                   // 0x5e03
    SETCLR 0 R1 ISP_SWSPAD_29_2                                  // 0x6bda (high_or_mid_gear_ind: 1:7 ,perform_aux_meas_in_one_adv_event_ind: 1:6 ,nrgdet_silent_duration_timer_value: 6:0 ,)
    REG2 R1 0x8                                                  // 0x5c11
    SETCLR 0 R1 ISP_SWSPAD_16_3                                  // 0x6b0e (calib_state: 4:4 ,calib_success_ind: 1:3 ,calib_done_ind: 1:2 ,calib_prev_status: 1:1 ,calib_first_iter: 1:0 ,)
    REG2 R1 0x1                                                  // 0x5c03
    SETCLR 0 R1 ISP_SWSPAD_26_0                                  // 0x6ba2 (debug_lo_vref_vbp_calib_success_ind: 1:7 ,debug_wkup_threshold_calib_success_ind: 1:6 ,debug_lcaux_idac_calib_success_ind: 1:5 ,df_calib_success_ind: 1:4 ,lo_vref_vbp_calib_success_ind: 1:3 ,wkup_threshold_calib_success_ind: 1:2 ,lcaux_idac_calib_success_ind: 1:1 ,power_gearing_success_ind: 1:0 ,)
     SETBNK 2 1                                                  // 0x5e12
     LDR ISP_POWER_GEARING_OVERLAY_0_2 R0                        // 0x5462 (dovl_rwdt_mode_for_high_gear_power_gearing: 2:6 ,dovl_rwdt_mode_for_elevator_gear_power_gearing: 2:4 ,dovl_rwdt_mode_for_high_gear_steady_state: 2:2 ,dovl_rwdt_slow_harv_bit_sel_for_high_gear_steady_state: 2:0 ,)
     ANDI R0 0xc R0                                              // 0x7018
     SHIFTI R0 R0 0x2 1                                          // 0x4920
    LDR HWS_DRR0_SHADOW_3 R1                                     // 0x54b3 (slim_dcdc_neg_high_power_mode_enb: 1:7 ,disable_soft_power_off: 1:6 ,vstart_count_timer_enb: 1:5 ,timer_clk_sel: 2:3 ,psu_voltage_limiter_en: 1:2 ,rwdt_mode: 2:0 ,)
    ANDI R1 0xfc R1                                              // 0x73f9
    SHIFTI R0 R0 0x0 0                                           // 0x4800
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR HWS_DRR0_SHADOW_3 R1                                     // 0x56b3 (slim_dcdc_neg_high_power_mode_enb: 1:7 ,disable_soft_power_off: 1:6 ,vstart_count_timer_enb: 1:5 ,timer_clk_sel: 2:3 ,psu_voltage_limiter_en: 1:2 ,rwdt_mode: 2:0 ,)
    LDR ISP_POWER_GEARING_OVERLAY_0_1 R0                         // 0x5461 (dovl_rwdt_slow_harv_bit_sel_for_high_gear_power_gearing: 2:6 ,dovl_rwdt_slow_harv_bit_sel_for_elevator_gear_power_gearing: 2:4 ,dovl_rwdt_frc_bit_sel_for_high_gear_steady_state: 4:0 ,)
    ANDI R0 0xf R0                                               // 0x701e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    LDR HWS_DRR1_SHADOW_0 R1                                     // 0x54b4 (rwdt_frc_bit_sel: 4:4 ,def_timer_enb: 1:3 ,pend_vstart: 1:2 ,wkup_enb: 1:1 ,pace_enb: 1:0 ,)
    ANDI R1 0xf R1                                               // 0x721f
    SHIFTI R0 R0 0x4 0                                           // 0x4840
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x4 1                                           // 0x4940
    STR HWS_DRR1_SHADOW_0 R1                                     // 0x56b4 (rwdt_frc_bit_sel: 4:4 ,def_timer_enb: 1:3 ,pend_vstart: 1:2 ,wkup_enb: 1:1 ,pace_enb: 1:0 ,)
    LDR ISP_POWER_GEARING_OVERLAY_0_2 R0                         // 0x5462 (dovl_rwdt_mode_for_high_gear_power_gearing: 2:6 ,dovl_rwdt_mode_for_elevator_gear_power_gearing: 2:4 ,dovl_rwdt_mode_for_high_gear_steady_state: 2:2 ,dovl_rwdt_slow_harv_bit_sel_for_high_gear_steady_state: 2:0 ,)
    ANDI R0 0x3 R0                                               // 0x7006
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    LDR HWS_DRR1_SHADOW_1 R1                                     // 0x54b5 (rwdt_slow_harv_bit_sel: 2:6 ,analog_spare: 4:2 ,hrr_init_not_done: 1:1 ,brg_bypass_enb: 1:0 ,)
    ANDI R1 0x3f R1                                              // 0x727f
    SHIFTI R0 R0 0x6 0                                           // 0x4860
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x6 1                                           // 0x4960
    STR HWS_DRR1_SHADOW_1 R1                                     // 0x16b5 (rwdt_slow_harv_bit_sel: 2:6 ,analog_spare: 4:2 ,hrr_init_not_done: 1:1 ,brg_bypass_enb: 1:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomPowerGearConfigHighGearSteadyState

start ROM SpuRomPowerGearingExit		// index: 7597, table index: 212
    REG2 R1 0x80                                                 // 0x5d01
    SETBAR 3 0                                                   // 0x5e03
    SETCLR 1 R1 ISP_SWSPAD_30_1                                  // 0x6be7 (power_gearing_ind: 1:7 ,temp_sens_dcdc_div: 2:5 ,lo_freq_offset_sweep_status: 5:0 ,)
    REG2 R1 0x4                                                  // 0x5c09
    SETBAR 2 0                                                   // 0x5e02
    SETCLR 0 R1 ISP_SWSPAD_13_2                                  // 0x2bda (coarse_ctl_coarse_step_size: 4:4 ,first_packet_ind: 1:3 ,state_operation_done_ind: 1:2 ,high_to_mid_gear_shift_ind: 1:1 ,temp_sensor_counter_type: 1:0 ,)
end SpuRomPowerGearingExit

start ROM SpuRomPowerGearSetTimerForElevatorGear		// index: 7599, table index: 213
    SETBAR 9 0                                                   // 0x5e09
    LDR HWS_DEF_POWER_GEARING_OVERLAY_1_0 R0                     // 0x5454 (Reserved_7_6: 2:6 ,def_dovl_timer_for_elevator_gear_power_gearing: 6:0 ,)
    ANDI R0 0x3f R0                                              // 0x707e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR8_2 R1                                            // 0x54e2 (hrr_timer2_3: 6:2 ,hrr_timer1: 6:0 ,)
    ANDI R1 0x3 R1                                               // 0x7207
    SHIFTI R0 R0 0x2 0                                           // 0x4820
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x2 1                                           // 0x4920
    STR HWS_HRR8_2 R1                                            // 0x16e2 (hrr_timer2_3: 6:2 ,hrr_timer1: 6:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomPowerGearSetTimerForElevatorGear

start ROM SpuRomPowerGearSetTimerForHighGear		// index: 7602, table index: 214
    SETBAR 9 0                                                   // 0x5e09
    LDR HWS_DEF_POWER_GEARING_OVERLAY_1_1 R0                     // 0x5455 (Reserved_31_14: 2:6 ,def_dovl_timer_for_high_gear_power_gearing: 6:0 ,)
    ANDI R0 0x3f R0                                              // 0x707e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR8_2 R1                                            // 0x54e2 (hrr_timer2_3: 6:2 ,hrr_timer1: 6:0 ,)
    ANDI R1 0x3 R1                                               // 0x7207
    SHIFTI R0 R0 0x2 0                                           // 0x4820
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x2 1                                           // 0x4920
    STR HWS_HRR8_2 R1                                            // 0x16e2 (hrr_timer2_3: 6:2 ,hrr_timer1: 6:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomPowerGearSetTimerForHighGear

start ROM SpuRomPowerGearSetPowerGearingInd		// index: 7605, table index: 215
    REG2 R1 0x80                                                 // 0x5d01
    SETBAR 3 0                                                   // 0x5e03
    SETCLR 0 R1 ISP_SWSPAD_30_1                                  // 0x2be6 (power_gearing_ind: 1:7 ,temp_sens_dcdc_div: 2:5 ,lo_freq_offset_sweep_status: 5:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomPowerGearSetPowerGearingInd

start ROM SpuRomPowerGearClearPowerGearingInd		// index: 7606, table index: 216
    REG2 R1 0x80                                                 // 0x5d01
    SETBAR 3 0                                                   // 0x5e03
    SETCLR 1 R1 ISP_SWSPAD_30_1                                  // 0x2be7 (power_gearing_ind: 1:7 ,temp_sens_dcdc_div: 2:5 ,lo_freq_offset_sweep_status: 5:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomPowerGearClearPowerGearingInd

start ROM SpuRomPowerGearSetFastHarvester		// index: 7607, table index: 217
    REG2 R1 0x4                                                  // 0x5c09
    SETBAR 0 1                                                   // 0x5e10
    SETCLR 1 R1 HWS_DRR0_SHADOW_2                                // 0x6acb (rtc_clk_trim: 4:4 ,harv2_hat_fast_mode_enb: 1:3 ,harv1_hat_fast_mode_enb: 1:2 ,crg_refgen_trim: 2:0 ,)
    REG2 R1 0x8                                                  // 0x5c11
    SETCLR 1 R1 HWS_DRR0_SHADOW_2                                // 0x2acb (rtc_clk_trim: 4:4 ,harv2_hat_fast_mode_enb: 1:3 ,harv1_hat_fast_mode_enb: 1:2 ,crg_refgen_trim: 2:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomPowerGearSetFastHarvester

start ROM SpuRomPowerGearSetSlowHarvester		// index: 7609, table index: 218
    REG2 R1 0x4                                                  // 0x5c09
    SETBAR 0 1                                                   // 0x5e10
    SETCLR 0 R1 HWS_DRR0_SHADOW_2                                // 0x6aca (rtc_clk_trim: 4:4 ,harv2_hat_fast_mode_enb: 1:3 ,harv1_hat_fast_mode_enb: 1:2 ,crg_refgen_trim: 2:0 ,)
    REG2 R1 0x8                                                  // 0x5c11
    SETCLR 0 R1 HWS_DRR0_SHADOW_2                                // 0x2aca (rtc_clk_trim: 4:4 ,harv2_hat_fast_mode_enb: 1:3 ,harv1_hat_fast_mode_enb: 1:2 ,crg_refgen_trim: 2:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomPowerGearSetSlowHarvester

start ROM setFmuInitMask		// index: 7611, table index: 219
    DMAON 1 5                                                    // 0x58a1
    DMA ISP_SWSPAD_02 HWS_RDI_MASK 1                             // 0x82c2
end setFmuInitMask

start ROM SpuRomFixControl		// index: 7612, table index: 220
    SETBNK 4 9                                                   // 0x5e94
    LDR ISP_SRR_SPARE_0_1 R1                                     // 0x54c1 (radio_init_fix_ctl_ctr: 3:5 ,freq_word_txo: 5:0 ,)
    ANDI R1 0xe0 R1                                              // 0x73c1
    SHIFTI R1 R1 0x5 1                                           // 0x4955
    XORI R1 FF R1                                                // 0x7bff
    SHIFTI R1 R1 2 0                                             // 0x4825
    REG R0 ISP_LATCH_MEM_24                                      // 0x42c0
    ADD R0 R0 R1                                                 // 0x4150
    DMAON 27 15                                                  // 0x59fb
    DMA ROM_MCU_ROM_112 ISP_FLEXDMA_SRC 1                        // 0xc030
    STR  ISP_FLEXDMA_SRC_0 R0                                    // 0x1600 (flexdma_src: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomFixControl

start ROM SpuRomFixTimer		// index: 7615, table index: 221
    SETBNK 3 16                                                  // 0x5f03
    LDR ISP_SWSPAD_17_2 R1                                       // 0x54c6 (envdet_clk_coarse_shadow: 4:4 ,sw_nrg_event_status: 1:3 ,radio_init_fix_timer_ctr: 3:0 ,)
    ANDI R1 0x7 R1                                               // 0x720f
    SHIFTI R1 R1 0x0 1                                           // 0x4905
    REG R0 ISP_LATCH_MEM_24_0                                    // 0x4240
    ADD R0 R0 R1                                                 // 0x4150
    LDR ISP_LATCH_MEM_24_3 R1                                    // 0x54a3
    LDRA R0 R1                                                   // 0x2604
end SpuRomFixTimer

start ROM spuRomEvent0FixControl		// index: 7617, table index: 222
    JUMP_LINK SpuRomFixControl                                   // 0x45b8
    DMAON 31 7                                                   // 0x58ff
    DMA ISP_FLEXDMA_SRC ISP_LATCH_MEM_0 1                        // 0x8000
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent0FixControl

start ROM spuRomEvent0FixTimer		// index: 7618, table index: 223
    JUMP_LINK SpuRomFixTimer                                     // 0x45ba
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_00_0 R1                                       // 0x16c0 (swspad_00: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent0FixTimer

start ROM spuRomEvent1FixControl		// index: 7619, table index: 224
    JUMP_LINK SpuRomFixControl                                   // 0x45b8
    DMAON 31 7                                                   // 0x58ff
    DMA ISP_FLEXDMA_SRC ISP_LATCH_MEM_1 1                        // 0x8040
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent1FixControl

start ROM spuRomEvent1FixTimer		// index: 7620, table index: 225
    JUMP_LINK SpuRomFixTimer                                     // 0x45ba
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_00_1 R1                                       // 0x16c1 (swspad_00: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent1FixTimer

start ROM spuRomEvent2FixControl		// index: 7621, table index: 226
    JUMP_LINK SpuRomFixControl                                   // 0x45b8
    DMAON 31 7                                                   // 0x58ff
    DMA ISP_FLEXDMA_SRC ISP_LATCH_MEM_2 1                        // 0x8080
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent2FixControl

start ROM spuRomEvent2FixTimer		// index: 7622, table index: 227
    JUMP_LINK SpuRomFixTimer                                     // 0x45ba
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_00_2 R1                                       // 0x16c2 (swspad_00: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent2FixTimer

start ROM spuRomEvent3FixControl		// index: 7623, table index: 228
    JUMP_LINK SpuRomFixControl                                   // 0x45b8
    DMAON 31 7                                                   // 0x58ff
    DMA ISP_FLEXDMA_SRC ISP_LATCH_MEM_3 1                        // 0x80c0
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent3FixControl

start ROM spuRomEvent3FixTimer		// index: 7624, table index: 229
    JUMP_LINK SpuRomFixTimer                                     // 0x45ba
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_00_3 R1                                       // 0x16c3 (swspad_00: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent3FixTimer

start ROM spuRomEvent4FixControl		// index: 7625, table index: 230
    JUMP_LINK SpuRomFixControl                                   // 0x45b8
    DMAON 31 7                                                   // 0x58ff
    DMA ISP_FLEXDMA_SRC ISP_LATCH_MEM_4 1                        // 0x8100
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent4FixControl

start ROM spuRomEvent4FixTimer		// index: 7626, table index: 231
    JUMP_LINK SpuRomFixTimer                                     // 0x45ba
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_01_0 R1                                       // 0x16c4 (swspad_01: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent4FixTimer

start ROM spuRomEvent5FixControl		// index: 7627, table index: 232
    JUMP_LINK SpuRomFixControl                                   // 0x45b8
    DMAON 31 7                                                   // 0x58ff
    DMA ISP_FLEXDMA_SRC ISP_LATCH_MEM_5 1                        // 0x8140
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent5FixControl

start ROM spuRomEvent5FixTimer		// index: 7628, table index: 233
    JUMP_LINK SpuRomFixTimer                                     // 0x45ba
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_01_1 R1                                       // 0x16c5 (swspad_01: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent5FixTimer

start ROM spuRomEvent6FixControl		// index: 7629, table index: 234
    JUMP_LINK SpuRomFixControl                                   // 0x45b8
    DMAON 31 7                                                   // 0x58ff
    DMA ISP_FLEXDMA_SRC ISP_LATCH_MEM_6 1                        // 0x8180
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent6FixControl

start ROM spuRomEvent6FixTimer		// index: 7630, table index: 235
    JUMP_LINK SpuRomFixTimer                                     // 0x45ba
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_01_2 R1                                       // 0x16c6 (swspad_01: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent6FixTimer

start ROM spuRomEvent7FixControl		// index: 7631, table index: 236
    JUMP_LINK SpuRomFixControl                                   // 0x45b8
    DMAON 31 7                                                   // 0x58ff
    DMA ISP_FLEXDMA_SRC ISP_LATCH_MEM_7 1                        // 0x81c0
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent7FixControl

start ROM spuRomEvent7FixTimer		// index: 7632, table index: 237
    JUMP_LINK SpuRomFixTimer                                     // 0x45ba
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_01_3 R1                                       // 0x16c7 (swspad_01: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent7FixTimer

start ROM spuRomEvent8FixControl		// index: 7633, table index: 238
    JUMP_LINK SpuRomFixControl                                   // 0x45b8
    DMAON 31 7                                                   // 0x58ff
    DMA ISP_FLEXDMA_SRC ISP_LATCH_MEM_8 1                        // 0x8200
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent8FixControl

start ROM spuRomEvent8FixTimer		// index: 7634, table index: 239
    JUMP_LINK SpuRomFixTimer                                     // 0x45ba
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_02_0 R1                                       // 0x16c8 (swspad_02: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent8FixTimer

start ROM spuRomEvent9FixControl		// index: 7635, table index: 240
    JUMP_LINK SpuRomFixControl                                   // 0x45b8
    DMAON 31 7                                                   // 0x58ff
    DMA ISP_FLEXDMA_SRC ISP_LATCH_MEM_9 1                        // 0x8240
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent9FixControl

start ROM spuRomEvent9FixTimer		// index: 7636, table index: 241
    JUMP_LINK SpuRomFixTimer                                     // 0x45ba
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_02_1 R1                                       // 0x16c9 (swspad_02: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent9FixTimer

start ROM spuRomEvent10FixControl		// index: 7637, table index: 242
    JUMP_LINK SpuRomFixControl                                   // 0x45b8
    DMAON 31 7                                                   // 0x58ff
    DMA ISP_FLEXDMA_SRC ISP_LATCH_MEM_10 1                       // 0x8280
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent10FixControl

start ROM spuRomEvent10FixTimer		// index: 7638, table index: 243
    JUMP_LINK SpuRomFixTimer                                     // 0x45ba
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_02_2 R1                                       // 0x16ca (swspad_02: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent10FixTimer

start ROM spuRomEvent11FixControl		// index: 7639, table index: 244
    JUMP_LINK SpuRomFixControl                                   // 0x45b8
    DMAON 31 7                                                   // 0x58ff
    DMA ISP_FLEXDMA_SRC ISP_LATCH_MEM_11 1                       // 0x82c0
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent11FixControl

start ROM spuRomEvent11FixTimer		// index: 7640, table index: 245
    JUMP_LINK SpuRomFixTimer                                     // 0x45ba
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_02_3 R1                                       // 0x16cb (swspad_02: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent11FixTimer

start ROM spuRomEvent12FixControl		// index: 7641, table index: 246
    JUMP_LINK SpuRomFixControl                                   // 0x45b8
    DMAON 31 7                                                   // 0x58ff
    DMA ISP_FLEXDMA_SRC ISP_LATCH_MEM_12 1                       // 0x8300
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent12FixControl

start ROM spuRomEvent12FixTimer		// index: 7642, table index: 247
    JUMP_LINK SpuRomFixTimer                                     // 0x45ba
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_03_0 R1                                       // 0x16cc (swspad_03: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent12FixTimer

start ROM spuRomEvent13FixControl		// index: 7643, table index: 248
    JUMP_LINK SpuRomFixControl                                   // 0x45b8
    DMAON 31 7                                                   // 0x58ff
    DMA ISP_FLEXDMA_SRC ISP_LATCH_MEM_13 1                       // 0x8340
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent13FixControl

start ROM spuRomEvent13FixTimer		// index: 7644, table index: 249
    JUMP_LINK SpuRomFixTimer                                     // 0x45ba
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_03_1 R1                                       // 0x16cd (swspad_03: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent13FixTimer

start ROM spuRomEvent14FixControl		// index: 7645, table index: 250
    JUMP_LINK SpuRomFixControl                                   // 0x45b8
    DMAON 31 7                                                   // 0x58ff
    DMA ISP_FLEXDMA_SRC ISP_LATCH_MEM_14 1                       // 0x8380
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent14FixControl

start ROM spuRomEvent14FixTimer		// index: 7646, table index: 251
    JUMP_LINK SpuRomFixTimer                                     // 0x45ba
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_03_2 R1                                       // 0x16ce (swspad_03: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent14FixTimer

start ROM spuRomEvent15FixControl		// index: 7647, table index: 252
    JUMP_LINK SpuRomFixControl                                   // 0x45b8
    DMAON 31 7                                                   // 0x58ff
    DMA ISP_FLEXDMA_SRC ISP_LATCH_MEM_15 1                       // 0x83c0
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent15FixControl

start ROM spuRomEvent15FixTimer		// index: 7648, table index: 253
    JUMP_LINK SpuRomFixTimer                                     // 0x45ba
    SETBAR 2 0                                                   // 0x5e02
    STR ISP_SWSPAD_03_3 R1                                       // 0x16cf (swspad_03: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end spuRomEvent15FixTimer

start ROM spuRomTurnOffMss		// index: 7649, table index: 254
    REG2 R1 0x1                                                  // 0x5c03
    SETBAR 0 0                                                   // 0x5e00
    SETCLR 1 R1 HWS_HWSINTCTL_0                                  // 0x6a03 (Reserved_7_3: 5:3 ,pgen_clb: 1:2 ,pgen_isp: 1:1 ,pgen_mss: 1:0 ,)
    REG2 R1 0x1                                                  // 0x5c03
    SETCLR 1 R1 HWS_HWSINTCTL_1                                  // 0x2a07 (Reserved_15_11: 5:3 ,rsten_clb: 1:2 ,rsten_isp: 1:1 ,rsten_mss: 1:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end spuRomTurnOffMss

start ROM spuRomTurnOffRadio		// index: 7651, table index: 255
    SETBAR 0 0                                                   // 0x5e00
    STRI HWS_RDI_CONTROLS_0 0x0                                  // 0x8030 (cbias_fllr_vref_sample: 1:7 ,cbias_reg_enable: 1:6 ,lo_buffer_en: 1:5 ,cbias_sym_reg_refgen_enable: 1:4 ,sym_vbias_sample: 1:3 ,lo_core_en: 1:2 ,cbias_reg_refgen_sample: 1:1 ,cbias_reg_refgen_enable: 1:0 ,)
    STRI HWS_RDI_CONTROLS_1 0x0                                  // 0x8031 (lo_hv_vbias_sample: 1:7 ,cbias_sym_reg_refgen_sample: 1:6 ,lo_cmfb_en: 1:5 ,lo_hv_vbias_en: 1:4 ,cbias_irefgen_vref_sample: 1:3 ,rc_sens_vref_iref_icap_en: 1:2 ,sym_reg_en: 1:1 ,sym_vbias_en: 1:0 ,)
    STRI HWS_RDI_CONTROLS_2 0x0                                  // 0x8032 (rc_sens_vref_sample: 1:7 ,cbias_dcdc_x1p5_enable: 1:6 ,lcaux_sample_vref: 1:5 ,lcaux_refgen_en: 1:4 ,lcaux_div_stat_rstn: 1:3 ,lcaux_core_en: 1:2 ,lcaux_ldo_en: 1:1 ,fll_en: 1:0 ,)
    STRI HWS_RDI_CONTROLS_3 0x0                                  // 0x8033 (rc_sens_pg_en: 1:7 ,rc_sens_vref_buf_en: 1:6 ,rc_sens_en: 1:5 ,sequencer_rstn: 1:4 ,temp_sensor_en: 1:3 ,temp_sensor_dcdc_en: 1:2 ,rc_sens_iref_en: 1:1 ,cbias_fllr_vref_enable: 1:0 ,)
    STRI HWS_RADIO_MODE_0 0x0                                    // 0x8028 (lc_supply_en: 1:7 ,lobuf_tdc_supply_en: 1:6 ,loh_supply_en: 1:5 ,lol_supply_en: 1:4 ,sym_supply_en: 1:3 ,symdco_4mhz_cgen: 1:2 ,symdco_1mhz_cgen: 1:1 ,lo_buffer_high_gain_sel: 1:0 ,)
    STRI HWS_RADIO_MODE_1 0x0                                    // 0x8029 (lcaux_rdi_pend_start: 1:7 ,otp_power_off: 1:6 ,lo_extreme_txvdd_en: 1:5 ,lo_extreme_txbias_en: 1:4 ,lo_high_power_mode: 1:3 ,slow_clk_sel: 1:2 ,lo_tx_mode_en: 1:1 ,fast_lcaux_sel: 1:0 ,)
    STRI HWS_RADIO_MODE_2 0x0                                    // 0x802a (tx_beacon_packet_size: 5:3 ,sym_div_sel: 1:2 ,hw_radio_turn_off_en: 1:1 ,lo_buffer_rdi_pend_start: 1:0 ,)
    STRI HWS_RADIO_MODE_3 0x0                                    // 0x802b (modulation_disable: 1:7 ,rom_dcdc_clk_div_ovr: 1:6 ,sram_dcdc_clk_div_ovr: 1:5 ,tdc_disable: 1:4 ,lo_cmfb_sample: 1:3 ,lo_symbol_data_rstb: 1:2 ,sym_src_sel: 1:1 ,tx_beacon_packet_size: 6:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end spuRomTurnOffRadio

start ROM SpuRomRtcSocMeas		// index: 7654, table index: 256
    REG2 R1 0x1                                                  // 0x5c03
    SETBNK 2 6                                                   // 0x5e62
    SETCLR 0 R1 ISP_RTC_CLK_0                                    // 0x6aa2 (Reserved_31_1: 7:1 ,isp_rtc_clk_en: 1:0 ,)
    LDR ISP_SWSPAD_08_0 R0                                       // 0x5460 (nvm_values_for_fsm_0: 8:0 ,)
    TIMER R0_TIMER MUL_BY_32                                     // 0x6300
    EVCMD RTC_EVENT CLR_EV_ENABLE WFE_ENABLE                     // 0x61a2
    TIMER R0_TIMER MUL_BY_32                                     // 0x6300
    EVCMD RTC_EVENT CLR_EV_ENABLE WFE_ENABLE                     // 0x61a2
    TIMER STOP_TIMER MUL_BY_32                                   // 0x63fe
    DMAON 4 1                                                    // 0x5824
    DMA ISP_SPU_TIMER_0 ISP_SWSPAD_09 1                          // 0xc24b
    TIMER R0_TIMER MUL_BY_32                                     // 0x6300
    EVCMD RTC_EVENT CLR_EV_ENABLE WFE_ENABLE                     // 0x61a2
    TIMER STOP_TIMER MUL_BY_32                                   // 0x63fe
    DMAON 4 1                                                    // 0x5824
    DMA ISP_SPU_TIMER_0 ISP_SWSPAD_00 1                          // 0xc00b
    LDR ISP_EVENTS_1 R0                                          // 0x5419 (spu_timer_done: 1:7 ,sw_event0: 1:6 ,Reserved_13_13: 1:5 ,hws_envdet_clk_sync: 1:4 ,fmu_temp_sensor_clock_posedge: 1:3 ,awdt_exception: 1:2 ,nrgdet_exception: 1:1 ,du_event: 1:0 ,)
    ANDI R0 0x80 R0                                              // 0x7100
    SHIFTI R0 R0 0x7 1                                           // 0x4970
    SETBAR 3 6                                                   // 0x5e63
    LDR ISP_SWSPAD_16_3 R1                                       // 0x54c3 (calib_state: 4:4 ,calib_success_ind: 1:3 ,calib_done_ind: 1:2 ,calib_prev_status: 1:1 ,calib_first_iter: 1:0 ,)
    ANDI R1 0xfd R1                                              // 0x73fb
    SHIFTI R0 R0 0x1 0                                           // 0x4810
    OR R1 R0 R1                                                  // 0x4051
    SHIFTI R0 R0 0x1 1                                           // 0x4910
    STR ISP_SWSPAD_16_3 R1                                       // 0x16c3 (calib_state: 4:4 ,calib_success_ind: 1:3 ,calib_done_ind: 1:2 ,calib_prev_status: 1:1 ,calib_first_iter: 1:0 ,)
end SpuRomRtcSocMeas

start ROM SpuRomVstartCalibInit		// index: 7661, table index: 257
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR7_3 R1                                            // 0x54df (hrr_awdt_soft_th: 2:6 ,hrr_awdt_hard_th: 2:4 ,hrr_hws_hrr_state: 2:2 ,hrr_net_rrt_sel: 1:1 ,hrr_rrt_rd_cntr: 8:0 ,)
    ANDI R1 0xf3 R1                                              // 0x73e7
    ORI R1 0x4 R1                                                // 0x7609
    STR HWS_HRR7_3 R1                                            // 0x56df (hrr_awdt_soft_th: 2:6 ,hrr_awdt_hard_th: 2:4 ,hrr_hws_hrr_state: 2:2 ,hrr_net_rrt_sel: 1:1 ,hrr_rrt_rd_cntr: 8:0 ,)
    REG2 R1 0x4                                                  // 0x5c09
    SETCLR 1 R1 HWS_HRR5_1                                       // 0x6b57 (hrr_aon_timer_preset: 2:6 ,hrr_po_all_pd: 1:5 ,hrr_power_on_pd_gap: 2:3 ,hrr_except_pu_sel: 1:2 ,hrr_except_memory_sel: 1:1 ,hrr_adb_done_delay: 4:0 ,)
    REG2 R1 0x2                                                  // 0x5c05
    SETCLR 0 R1 HWS_HRR5_1                                       // 0x6b56 (hrr_aon_timer_preset: 2:6 ,hrr_po_all_pd: 1:5 ,hrr_power_on_pd_gap: 2:3 ,hrr_except_pu_sel: 1:2 ,hrr_except_memory_sel: 1:1 ,hrr_adb_done_delay: 4:0 ,)
    REG2 R1 0x4                                                  // 0x5c09
    SETCLR 0 R1 HWS_HRR5_3                                       // 0x2b5e (hrr_cont_wu_timer_disable: 1:7 ,hrr_hrr5_30_29_reserved: 2:5 ,hrr_split_adb_clk_en: 1:4 ,hrr_envdet_except_en: 1:3 ,hrr_timer_except_en: 1:2 ,hrr_hws_timer_preset_state: 2:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomVstartCalibInit

start ROM SpuRomTestSecSetup		// index: 7664, table index: 258
    SETBAR 0 1                                                   // 0x5e10
    STRI HWS_NONCE_0 00                                          // 0x800c (nonce: 8:0 ,)
    STRI HWS_NONCE_1 11                                          // 0x888d (nonce: 8:0 ,)
    STRI HWS_NONCE_2 22                                          // 0x910e (nonce: 8:0 ,)
    STRI HWS_NONCE_3 33                                          // 0x998f (nonce: 8:0 ,)
    STRI HWS_PGXDDATAL0_0 44                                     // 0xa210 (pkt_dyn_data_low_0: 8:0 ,)
    STRI HWS_PGXDDATAL0_1 55                                     // 0xaa91 (pkt_dyn_data_low_0: 8:0 ,)
    STRI HWS_PGXDDATAL0_2 66                                     // 0xb312 (pkt_dyn_data_low_0: 8:0 ,)
    STRI HWS_PGXDDATAL0_3 77                                     // 0xbb93 (pkt_dyn_data_low_0: 8:0 ,)
    STRI HWS_PGXDDATAL1_0 88                                     // 0xc414 (pkt_dyn_data_low_1: 8:0 ,)
    STRI HWS_PGXDDATAL1_1 99                                     // 0xcc95 (pkt_dyn_data_low_1: 8:0 ,)
    STRI HWS_PGXDDATAL1_2 aa                                     // 0xd516 (pkt_dyn_data_low_1: 8:0 ,)
    STRI HWS_PGXDDATAL1_3 bb                                     // 0xdd97 (pkt_dyn_data_low_1: 8:0 ,)
    STRI HWS_PGXDDATAL2_0 cc                                     // 0xe618 (pkt_dyn_data_low_2: 8:0 ,)
    STRI HWS_PGXDDATAL2_1 dd                                     // 0xee99 (pkt_dyn_data_low_2: 8:0 ,)
    STRI HWS_PGXDDATAL2_2 ee                                     // 0xf71a (pkt_dyn_data_low_2: 8:0 ,)
    STRI HWS_PGXDDATAL2_3 ff                                     // 0xff9b (pkt_dyn_data_low_2: 8:0 ,)
    STRI HWS_PGXDDATAL3_0 00                                     // 0x801c (pkt_dyn_data_low_3: 8:0 ,)
    STRI HWS_PGXDDATAL3_1 11                                     // 0x889d (pkt_dyn_data_low_3: 8:0 ,)
    STRI HWS_PGXDDATAL3_2 22                                     // 0x911e (pkt_dyn_data_low_3: 8:0 ,)
    STRI HWS_PGXDDATAL3_3 33                                     // 0x999f (pkt_dyn_data_low_3: 8:0 ,)
    STRI HWS_PGXSENSDATA_0 44                                    // 0xa220 (pkt_ext_sensor_data: 8:0 ,)
    STRI HWS_PGXSENSDATA_1 55                                    // 0xaaa1 (pkt_ext_sensor_data: 8:0 ,)
    STRI HWS_PGXSENSDATA_2 66                                    // 0xb322 (pkt_temp_sensor_data: 8:0 ,)
    STRI HWS_PGXSENSDATA_3 77                                    // 0xbba3 (pkt_temp_sensor_data: 8:0 ,)
    STRI HWS_PGXDID_0 88                                         // 0xc408 (pkt_dyn_id: 8:0 ,)
    STRI HWS_PGXDID_1 99                                         // 0xcc89 (pkt_dyn_id: 8:0 ,)
    STRI HWS_PGXDID_2 aa                                         // 0xd50a (pkt_dyn_id: 8:0 ,)
    STRI HWS_PGXDID_3 bb                                         // 0xdd8b (pkt_dyn_id: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomTestSecSetup

start ROM SpuRomByteAccessSRR		// index: 7672, table index: 259
    SETBAR 2 0                                                   // 0x5e02
    STRI ISP_SWSPAD_00_0 FE                                      // 0xff40 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_00_1 CA                                      // 0xe541 (swspad_00: 8:0 ,)
    SETBAR 3 0                                                   // 0x5e03
    STRI ISP_SWSPAD_31_0 EF                                      // 0xf7fc (temp_comp_field2: 4:4 ,temp_comp_field1: 4:0 ,)
    STRI ISP_SWSPAD_31_1 BE                                      // 0xdf7d (temp_comp_field4: 4:4 ,temp_comp_field3: 4:0 ,)
    SETBAR 2 0                                                   // 0x5e02
    STRI ISP_SWSPAD_00_2 CE                                      // 0xe742 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_00_3 FA                                      // 0xfd43 (swspad_00: 8:0 ,)
    SETBAR 3 0                                                   // 0x5e03
    STRI ISP_SWSPAD_31_2 AD                                      // 0xd6fe (temp_comp_field6: 4:4 ,temp_comp_field5: 4:0 ,)
    STRI ISP_SWSPAD_31_3 DE                                      // 0xef7f (temp_comp_field8: 4:4 ,temp_comp_field7: 4:0 ,)
    AND R0 R0 R0                                                 // 0x0000
    AND R0 R0 R0                                                 // 0x0000
end SpuRomByteAccessSRR

start ROM SpuRomPopulateRadioHws		// index: 7676, table index: 260
    DMAON 2 5                                                    // 0x58a2
    DMA ISP_srr_spare_0 HWS_radio_ws_context_0 4                 // 0xd980
    DMAON 21 5                                                   // 0x58b5
    DMA HWS_DEF_TIMERS_CTL_1_0 HWS_TIMERS_CTL_1_0 1              // 0x8169
end SpuRomPopulateRadioHws

start ROM SpuRomSymMeasLcRadioInit		// index: 7677, table index: 261
    SETBAR 0 0                                                   // 0x5e00
    STRI HWS_RDI_CONTROLS_0 00                                   // 0x8030 (cbias_fllr_vref_sample: 1:7 ,cbias_reg_enable: 1:6 ,lo_buffer_en: 1:5 ,cbias_sym_reg_refgen_enable: 1:4 ,sym_vbias_sample: 1:3 ,lo_core_en: 1:2 ,cbias_reg_refgen_sample: 1:1 ,cbias_reg_refgen_enable: 1:0 ,)
    STRI HWS_RDI_CONTROLS_1 00                                   // 0x8031 (lo_hv_vbias_sample: 1:7 ,cbias_sym_reg_refgen_sample: 1:6 ,lo_cmfb_en: 1:5 ,lo_hv_vbias_en: 1:4 ,cbias_irefgen_vref_sample: 1:3 ,rc_sens_vref_iref_icap_en: 1:2 ,sym_reg_en: 1:1 ,sym_vbias_en: 1:0 ,)
    STRI HWS_RDI_CONTROLS_2 80                                   // 0xc032 (rc_sens_vref_sample: 1:7 ,cbias_dcdc_x1p5_enable: 1:6 ,lcaux_sample_vref: 1:5 ,lcaux_refgen_en: 1:4 ,lcaux_div_stat_rstn: 1:3 ,lcaux_core_en: 1:2 ,lcaux_ldo_en: 1:1 ,fll_en: 1:0 ,)
    STRI HWS_RDI_CONTROLS_3 00                                   // 0x8033 (rc_sens_pg_en: 1:7 ,rc_sens_vref_buf_en: 1:6 ,rc_sens_en: 1:5 ,sequencer_rstn: 1:4 ,temp_sensor_en: 1:3 ,temp_sensor_dcdc_en: 1:2 ,rc_sens_iref_en: 1:1 ,cbias_fllr_vref_enable: 1:0 ,)
    TIMER a MUL_BY_2                                             // 0x620a
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x61e1
    STRI HWS_RDI_CONTROLS_0 41                                   // 0xa0b0 (cbias_fllr_vref_sample: 1:7 ,cbias_reg_enable: 1:6 ,lo_buffer_en: 1:5 ,cbias_sym_reg_refgen_enable: 1:4 ,sym_vbias_sample: 1:3 ,lo_core_en: 1:2 ,cbias_reg_refgen_sample: 1:1 ,cbias_reg_refgen_enable: 1:0 ,)
    STRI HWS_RDI_CONTROLS_2 92                                   // 0xc932 (rc_sens_vref_sample: 1:7 ,cbias_dcdc_x1p5_enable: 1:6 ,lcaux_sample_vref: 1:5 ,lcaux_refgen_en: 1:4 ,lcaux_div_stat_rstn: 1:3 ,lcaux_core_en: 1:2 ,lcaux_ldo_en: 1:1 ,fll_en: 1:0 ,)
    TIMER a MUL_BY_2                                             // 0x620a
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x61e1
    STRI HWS_RDI_CONTROLS_0 41                                   // 0xa0b0 (cbias_fllr_vref_sample: 1:7 ,cbias_reg_enable: 1:6 ,lo_buffer_en: 1:5 ,cbias_sym_reg_refgen_enable: 1:4 ,sym_vbias_sample: 1:3 ,lo_core_en: 1:2 ,cbias_reg_refgen_sample: 1:1 ,cbias_reg_refgen_enable: 1:0 ,)
    STRI HWS_RDI_CONTROLS_2 D2                                   // 0xe932 (rc_sens_vref_sample: 1:7 ,cbias_dcdc_x1p5_enable: 1:6 ,lcaux_sample_vref: 1:5 ,lcaux_refgen_en: 1:4 ,lcaux_div_stat_rstn: 1:3 ,lcaux_core_en: 1:2 ,lcaux_ldo_en: 1:1 ,fll_en: 1:0 ,)
    TIMER a MUL_BY_2                                             // 0x620a
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x61e1
    STRI HWS_RDI_CONTROLS_0 51                                   // 0xa8b0 (cbias_fllr_vref_sample: 1:7 ,cbias_reg_enable: 1:6 ,lo_buffer_en: 1:5 ,cbias_sym_reg_refgen_enable: 1:4 ,sym_vbias_sample: 1:3 ,lo_core_en: 1:2 ,cbias_reg_refgen_sample: 1:1 ,cbias_reg_refgen_enable: 1:0 ,)
    STRI HWS_RDI_CONTROLS_2 D3                                   // 0xe9b2 (rc_sens_vref_sample: 1:7 ,cbias_dcdc_x1p5_enable: 1:6 ,lcaux_sample_vref: 1:5 ,lcaux_refgen_en: 1:4 ,lcaux_div_stat_rstn: 1:3 ,lcaux_core_en: 1:2 ,lcaux_ldo_en: 1:1 ,fll_en: 1:0 ,)
    STRI HWS_RDI_CONTROLS_3 01                                   // 0x80b3 (rc_sens_pg_en: 1:7 ,rc_sens_vref_buf_en: 1:6 ,rc_sens_en: 1:5 ,sequencer_rstn: 1:4 ,temp_sensor_en: 1:3 ,temp_sensor_dcdc_en: 1:2 ,rc_sens_iref_en: 1:1 ,cbias_fllr_vref_enable: 1:0 ,)
    TIMER a MUL_BY_2                                             // 0x620a
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x61e1
    STRI HWS_RDI_CONTROLS_1 03                                   // 0x81b1 (lo_hv_vbias_sample: 1:7 ,cbias_sym_reg_refgen_sample: 1:6 ,lo_cmfb_en: 1:5 ,lo_hv_vbias_en: 1:4 ,cbias_irefgen_vref_sample: 1:3 ,rc_sens_vref_iref_icap_en: 1:2 ,sym_reg_en: 1:1 ,sym_vbias_en: 1:0 ,)
    TIMER 1e MUL_BY_2                                            // 0x621e
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x61e1
    STRI HWS_RDI_CONTROLS_0 5B                                   // 0xadb0 (cbias_fllr_vref_sample: 1:7 ,cbias_reg_enable: 1:6 ,lo_buffer_en: 1:5 ,cbias_sym_reg_refgen_enable: 1:4 ,sym_vbias_sample: 1:3 ,lo_core_en: 1:2 ,cbias_reg_refgen_sample: 1:1 ,cbias_reg_refgen_enable: 1:0 ,)
    STRI HWS_RDI_CONTROLS_1 43                                   // 0xa1b1 (lo_hv_vbias_sample: 1:7 ,cbias_sym_reg_refgen_sample: 1:6 ,lo_cmfb_en: 1:5 ,lo_hv_vbias_en: 1:4 ,cbias_irefgen_vref_sample: 1:3 ,rc_sens_vref_iref_icap_en: 1:2 ,sym_reg_en: 1:1 ,sym_vbias_en: 1:0 ,)
    TIMER 5 MUL_BY_2                                             // 0x6205
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x61e1
    STRI HWS_RDI_CONTROLS_0 5A                                   // 0xad30 (cbias_fllr_vref_sample: 1:7 ,cbias_reg_enable: 1:6 ,lo_buffer_en: 1:5 ,cbias_sym_reg_refgen_enable: 1:4 ,sym_vbias_sample: 1:3 ,lo_core_en: 1:2 ,cbias_reg_refgen_sample: 1:1 ,cbias_reg_refgen_enable: 1:0 ,)
    STRI HWS_RDI_CONTROLS_1 42                                   // 0xa131 (lo_hv_vbias_sample: 1:7 ,cbias_sym_reg_refgen_sample: 1:6 ,lo_cmfb_en: 1:5 ,lo_hv_vbias_en: 1:4 ,cbias_irefgen_vref_sample: 1:3 ,rc_sens_vref_iref_icap_en: 1:2 ,sym_reg_en: 1:1 ,sym_vbias_en: 1:0 ,)
    STRI HWS_RDI_CONTROLS_2 93                                   // 0xc9b2 (rc_sens_vref_sample: 1:7 ,cbias_dcdc_x1p5_enable: 1:6 ,lcaux_sample_vref: 1:5 ,lcaux_refgen_en: 1:4 ,lcaux_div_stat_rstn: 1:3 ,lcaux_core_en: 1:2 ,lcaux_ldo_en: 1:1 ,fll_en: 1:0 ,)
    TIMER 19 MUL_BY_2                                            // 0x6219
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x61e1
    STRI HWS_RDI_CONTROLS_2 97                                   // 0xcbb2 (rc_sens_vref_sample: 1:7 ,cbias_dcdc_x1p5_enable: 1:6 ,lcaux_sample_vref: 1:5 ,lcaux_refgen_en: 1:4 ,lcaux_div_stat_rstn: 1:3 ,lcaux_core_en: 1:2 ,lcaux_ldo_en: 1:1 ,fll_en: 1:0 ,)
    TIMER 5 MUL_BY_2                                             // 0x6205
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x61e1
    STRI HWS_RDI_CONTROLS_0 6A                                   // 0xb530 (cbias_fllr_vref_sample: 1:7 ,cbias_reg_enable: 1:6 ,lo_buffer_en: 1:5 ,cbias_sym_reg_refgen_enable: 1:4 ,sym_vbias_sample: 1:3 ,lo_core_en: 1:2 ,cbias_reg_refgen_sample: 1:1 ,cbias_reg_refgen_enable: 1:0 ,)
    STRI HWS_RDI_CONTROLS_2 9F                                   // 0xcfb2 (rc_sens_vref_sample: 1:7 ,cbias_dcdc_x1p5_enable: 1:6 ,lcaux_sample_vref: 1:5 ,lcaux_refgen_en: 1:4 ,lcaux_div_stat_rstn: 1:3 ,lcaux_core_en: 1:2 ,lcaux_ldo_en: 1:1 ,fll_en: 1:0 ,)
    STRI HWS_RDI_CONTROLS_3 11                                   // 0x88b3 (rc_sens_pg_en: 1:7 ,rc_sens_vref_buf_en: 1:6 ,rc_sens_en: 1:5 ,sequencer_rstn: 1:4 ,temp_sensor_en: 1:3 ,temp_sensor_dcdc_en: 1:2 ,rc_sens_iref_en: 1:1 ,cbias_fllr_vref_enable: 1:0 ,)
    TIMER 10 MUL_BY_2                                            // 0x6210
    EVCMD SPU_TIMER_DONE CLR_EV_ENABLE WFE_ENABLE                // 0x21e1
end SpuRomSymMeasLcRadioInit

start ROM SpuRomRadioModeSymMeasLc		// index: 7687, table index: 262
    SETBAR 0 0                                                   // 0x5e00
    STRI HWS_RADIO_MODE_0 0xD8                                   // 0xec28 (lc_supply_en: 1:7 ,lobuf_tdc_supply_en: 1:6 ,loh_supply_en: 1:5 ,lol_supply_en: 1:4 ,sym_supply_en: 1:3 ,symdco_4mhz_cgen: 1:2 ,symdco_1mhz_cgen: 1:1 ,lo_buffer_high_gain_sel: 1:0 ,)
    STRI HWS_RADIO_MODE_1 0x85                                   // 0xc2a9 (lcaux_rdi_pend_start: 1:7 ,otp_power_off: 1:6 ,lo_extreme_txvdd_en: 1:5 ,lo_extreme_txbias_en: 1:4 ,lo_high_power_mode: 1:3 ,slow_clk_sel: 1:2 ,lo_tx_mode_en: 1:1 ,fast_lcaux_sel: 1:0 ,)
    STRI HWS_RADIO_MODE_2 0x03                                   // 0x81aa (tx_beacon_packet_size: 5:3 ,sym_div_sel: 1:2 ,hw_radio_turn_off_en: 1:1 ,lo_buffer_rdi_pend_start: 1:0 ,)
    STRI HWS_RADIO_MODE_3 0x00                                   // 0x802b (modulation_disable: 1:7 ,rom_dcdc_clk_div_ovr: 1:6 ,sram_dcdc_clk_div_ovr: 1:5 ,tdc_disable: 1:4 ,lo_cmfb_sample: 1:3 ,lo_symbol_data_rstb: 1:2 ,sym_src_sel: 1:1 ,tx_beacon_packet_size: 6:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomRadioModeSymMeasLc

start ROM SpuRomLcauxIdacCalibInit		// index: 7689, table index: 263
    SETBAR 2 0                                                   // 0x5e02
    STRI ISP_SWSPAD_00_0 0                                       // 0x8040 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_00_1 0                                       // 0x8041 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_00_2 0                                       // 0x8042 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_00_3 0                                       // 0x8043 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_01_0 0                                       // 0x8044 (swspad_01: 8:0 ,)
    STRI ISP_SWSPAD_01_1 0                                       // 0x8045 (swspad_01: 8:0 ,)
    STRI ISP_SWSPAD_01_2 0                                       // 0x8046 (swspad_01: 8:0 ,)
    STRI ISP_SWSPAD_01_3 0                                       // 0x8047 (swspad_01: 8:0 ,)
    DMAON 22 2                                                   // 0x5856
    DMA HWS_DEF_RADIO_WS_CONTEXT_0 ISP_SRR_SPARE_0 4             // 0x9813
    AND R0 R0 R0                                                 // 0x0000
end SpuRomLcauxIdacCalibInit

start ROM SpuRomUnSetFirstCycleCalibIter		// index: 7692, table index: 264
    REG2 R1 0x80                                                 // 0x5d01
    SETBAR 3 0                                                   // 0x5e03
    SETCLR 1 R1 ISP_SWSPAD_17_3                                  // 0x2b1f (first_cycle_calib_ind: 1:7 ,max_time_sprinkler_ctr: 3:4 ,consec_bad_aux_meas_ctr: 4:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomUnSetFirstCycleCalibIter

start ROM SpuRomBasicFlowCopyClbCfgOTPToIsp		// index: 7693, table index: 265
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_msrctl0 ISP_SWSPAD_13 3                          // 0x5347
    DMA HWS_def_loctl0 ISP_SWSPAD_20 3                           // 0x550a
    DMA HWS_DEF_SYMCTL0 ISP_SWSPAD_23 3                          // 0x55cd
    DMA HWS_DEF_DATA_KEY_0     ISP_SWSPAD_08     4               // 0xda36
    DMAON 22 2                                                   // 0x5856
    DMA HWS_def_id_key_0     ISP_SRR_SPARE_5 4                   // 0xd97a
    DMAON 21 1                                                   // 0x5835
    DMA HWS_DEF_PGXDID ISP_SWSPAD_26 1                           // 0xc6aa
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_WILIOT_UID_0 ISP_SWSPAD_28 1                     // 0x4734
    DMA HWS_DEF_WILIOT_UID_1 ISP_SWSPAD_27 1                     // 0xc6f5
    SETBAR 13 0                                                  // 0x5e0d
    LDR HWS_DEF_VERSION_CRC_0 R1                                 // 0x54ec (def_version_major_minor: 8:0 ,)
    LDR HWS_DEF_VERSION_CRC_1 R2                                 // 0x556d (def_version_major_minor: 8:0 ,)
       SETBAR 3 0                                                // 0x5e03
       STR ISP_SWSPAD_29_3 R2                                    // 0x5777 (successful_two_wkup_exists_ind: 1:7 ,wkup_meas_ch: 2:5 ,rx_sweep_en: 1:4 ,successful_aux_meas_ind: 1:3 ,lo_high_power_mode_ind: 1:2 ,cond_wkup_en: 1:1 ,use_est_aux_meas_ind: 1:0 ,)
       STR ISP_SWSPAD_29_2 R1                                    // 0x16f6 (high_or_mid_gear_ind: 1:7 ,perform_aux_meas_in_one_adv_event_ind: 1:6 ,nrgdet_silent_duration_timer_value: 6:0 ,)
end SpuRomBasicFlowCopyClbCfgOTPToIsp

start ROM SpuRomBasicFlowAuxMeasCfgIspToOvl		// index: 7698, table index: 266
    SETBAR 2 0                                                   // 0x5e02
    LDR ISP_SWSPAD_12_0 R0                                       // 0x5470 (disable_debug_packet: 1:7 ,flow_manager_fsm_section_change_ind: 1:6 ,flow_manager_fsm_cycle_begin_ind: 1:5 ,fll_skip_n: 5:0 ,)
    ANDI R0 0x1f R0                                              // 0x703e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR ISP_SWSPAD_00_0 R0                                       // 0x5640 (swspad_00: 8:0 ,)
    DMAON 1 1                                                    // 0x5821
    DMA ISP_SWSPAD_13 ISP_SWSPAD_01 3                            // 0x904d
    AND R0 R0 R0                                                 // 0x0000
end SpuRomBasicFlowAuxMeasCfgIspToOvl

start ROM SpuRomBasicFlowLoClbIspToOvl		// index: 7700, table index: 267
    SETBAR 2 0                                                   // 0x5e02
    LDR ISP_SWSPAD_12_0 R0                                       // 0x5470 (disable_debug_packet: 1:7 ,flow_manager_fsm_section_change_ind: 1:6 ,flow_manager_fsm_cycle_begin_ind: 1:5 ,fll_skip_n: 5:0 ,)
    ANDI R0 0x1f R0                                              // 0x703e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR ISP_SWSPAD_00_0 R0                                       // 0x5640 (swspad_00: 8:0 ,)
    DMAON 1 1                                                    // 0x5821
    DMA ISP_SWSPAD_20 ISP_SWSPAD_01 3                            // 0x5054
    DMA ISP_SWSPAD_14 ISP_SWSPAD_04 1                            // 0xc10e
    STRI ISP_SWSPAD_05_0 0x0                                     // 0x8054 (swspad_05: 8:0 ,)
    STRI ISP_SWSPAD_05_1 0x0                                     // 0x8055 (swspad_05: 8:0 ,)
    STRI ISP_SWSPAD_05_2 0x2                                     // 0x8156 (swspad_05: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomBasicFlowLoClbIspToOvl

start ROM SpuRomBasicFlowSymClbIspToOvl		// index: 7703, table index: 268
    SETBAR 2 0                                                   // 0x5e02
    LDR ISP_SWSPAD_12_0 R0                                       // 0x5470 (disable_debug_packet: 1:7 ,flow_manager_fsm_section_change_ind: 1:6 ,flow_manager_fsm_cycle_begin_ind: 1:5 ,fll_skip_n: 5:0 ,)
    ANDI R0 0x1f R0                                              // 0x703e
    SHIFTI R0 R0 0x0 1                                           // 0x4900
    STR ISP_SWSPAD_00_0 R0                                       // 0x5640 (swspad_00: 8:0 ,)
    DMAON 1 1                                                    // 0x5821
    DMA ISP_SWSPAD_23 ISP_SWSPAD_01 3                            // 0x9057
    AND R0 R0 R0                                                 // 0x0000
end SpuRomBasicFlowSymClbIspToOvl

start ROM SpuRomBasicFlowPreparePacketWithConst		// index: 7705, table index: 269
    DMAON 1 1                                                    // 0x5821
    DMA ISP_SWSPAD_26 ISP_SWSPAD_01 1                            // 0x405a
    DMA ISP_SWSPAD_27 ISP_SWSPAD_03 2                            // 0xc8db
    SETBAR 3 0                                                   // 0x5e03
    LDR ISP_SWSPAD_29_3 R1                                       // 0x54f7 (successful_two_wkup_exists_ind: 1:7 ,wkup_meas_ch: 2:5 ,rx_sweep_en: 1:4 ,successful_aux_meas_ind: 1:3 ,lo_high_power_mode_ind: 1:2 ,cond_wkup_en: 1:1 ,use_est_aux_meas_ind: 1:0 ,)
    LDR ISP_SWSPAD_29_2 R2                                       // 0x5576 (high_or_mid_gear_ind: 1:7 ,perform_aux_meas_in_one_adv_event_ind: 1:6 ,nrgdet_silent_duration_timer_value: 6:0 ,)
       SETBAR 2 0                                                // 0x5e02
       STR ISP_SWSPAD_00_3 R2                                    // 0x5743 (swspad_00: 8:0 ,)
       STR ISP_SWSPAD_00_2 R1                                    // 0x16c2 (swspad_00: 8:0 ,)
       AND R0 R0 R0                                              // 0x0000
end SpuRomBasicFlowPreparePacketWithConst

start ROM SpuRomBasicFlowPreparePacketWithSec		// index: 7708, table index: 270
    DMAON 1 6                                                    // 0x58c1
    DMA ISP_SWSPAD_08 HWS_DATA_KEY_0 4                           // 0xd808
    DMAON 2 6                                                    // 0x58c2
    DMA ISP_SRR_SPARE_5 HWS_id_key_0 4                           // 0x9905
end SpuRomBasicFlowPreparePacketWithSec

start ROM SpuRomBasicFlowKeepOtpShutOffEn		// index: 7709, table index: 271
    REG2 R1 0x80                                                 // 0x5d01
    SETBAR 0 0                                                   // 0x5e00
    SETCLR 0 R1 HWS_HRR4_1                                       // 0x2b46 (hrr_keep_otp_shut_off: 1:7 ,hrr_envdet_bbamp_actload: 2:5 ,hrr_dig_ldo_trim: 5:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomBasicFlowKeepOtpShutOffEn

start ROM SpuRomBasicFlowSpuNOP		// index: 7710, table index: 272
    REG2 R1 0x80                                                 // 0x5d01
    SETBAR 0 0                                                   // 0x5e00
    SETCLR 0 R1 HWS_HRR4_1                                       // 0x2b46 (hrr_keep_otp_shut_off: 1:7 ,hrr_envdet_bbamp_actload: 2:5 ,hrr_dig_ldo_trim: 5:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomBasicFlowSpuNOP

start ROM RET_init_from_GNVM		// index: 7711, table index: 273
    SETBAR 2 0                                                   // 0x5e02
    STRI ISP_SWSPAD_00_0 0                                       // 0x8040 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_00_1 0                                       // 0x8041 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_00_2 0                                       // 0x8042 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_00_3 0                                       // 0x8043 (swspad_00: 8:0 ,)
    DMAON 1 1                                                    // 0x5821
    DMA ISP_SWSPAD_00 ISP_SWSPAD_01 8                            // 0x7840
    DMA ISP_SWSPAD_00 ISP_SWSPAD_09 8                            // 0x7a40
    DMA ISP_SWSPAD_00 ISP_SWSPAD_17 8                            // 0x7c40
    DMA ISP_SWSPAD_00 ISP_SWSPAD_25 6                            // 0xee40
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_SWSPAD_19_0 ISP_SWSPAD_19_0 1                    // 0x44c4
    DMA HWS_DEF_SWSPAD_26_0 ISP_SWSPAD_26_0 1                    // 0xc685
    DMAON 21 5                                                   // 0x58b5
    DMA HWS_DEF_TIMERS_CTL_1_0 HWS_TIMERS_CTL_1_0 1              // 0xc169
    DMAON 22 5                                                   // 0x58b6
    DMA HWS_DEF_RADIO_WS_CONTEXT_0_0 HWS_RADIO_WS_CONTEXT_0_0 1   // 0x4193
    DMA HWS_DEF_RADIO_WS_CONTEXT_1_0 HWS_RADIO_WS_CONTEXT_1_0 1   // 0x41d4
    DMA HWS_DEF_RADIO_DYN_CLB_CONTEXT_0 HWS_RADIO_DYN_CLB_CONTEXT_0 1   // 0x4215
    DMA HWS_DEF_RADIO_TEMP_LOOP_CONTEXT_0 HWS_RADIO_TEMP_LOOP_CONTEXT_0 1   // 0x4256
    DMA HWS_DEF_PGXSDATA_1_0 HWS_PGXSDATA_1_0 1                  // 0x43d8
    DMA HWS_DEF_PGXSDATA_2_0 HWS_PGXSDATA_2_0 1                  // 0x4419
    DMA HWS_DEF_PGXSDATA_3_0 HWS_PGXSDATA_3_0 1                  // 0x445a
    DMA HWS_DEF_PGXSDATA_0_0 HWS_PGXSDATA_0_0 1                  // 0xc397
    DMAON 21 5                                                   // 0x58b5
    DMA HWS_DEF_PGXDID_0 HWS_PGXDID_0 1                          // 0x44aa
    DMA HWS_DEF_PGXDDATAL0_0 HWS_PGXDDATAL0_0 1                  // 0x452b
    DMA HWS_DEF_PGXDDATAL1_0 HWS_PGXDDATAL1_0 1                  // 0x456c
    DMA HWS_DEF_PGXDDATAL2_0 HWS_PGXDDATAL2_0 1                  // 0x45ad
    DMA HWS_DEF_PGXDDATAL3_0 HWS_PGXDDATAL3_0 1                  // 0x45ee
    DMA HWS_DEF_PGXSENSDATA_0 HWS_PGXSENSDATA_0 1                // 0x862f
    AND R0 R0 R0                                                 // 0x0000
end RET_init_from_GNVM

start ROM CLB_init_from_GNVM		// index: 7719, table index: 274
DMAON 22 8                                                       // 0x5916
DMA HWS_DEF_CLB_CONTEXT0_0 CLB_CLB_CONTEXT0_0 1                  // 0x4086
DMA HWS_DEF_MSRCTL0_0 CLB_MSRCTL0_0 1                            // 0x40c7
DMA HWS_DEF_MSRCTL1_0 CLB_MSRCTL1_0 1                            // 0x4108
DMA HWS_DEF_MSRCTL2_0 CLB_MSRCTL2_0 1                            // 0x4149
DMA HWS_DEF_LOCTL0_0 CLB_LOCTL0_0 1                              // 0x418a
DMA HWS_DEF_LOCTL1_0 CLB_LOCTL1_0 1                              // 0x41cb
DMA HWS_DEF_LOCTL2_0 CLB_LOCTL2_0 1                              // 0x420c
DMA HWS_DEF_SYMCTL0_0 CLB_SYMCTL0_0 1                            // 0x424d
DMA HWS_DEF_SYMCTL1_0 CLB_SYMCTL1_0 1                            // 0x428e
DMA HWS_DEF_SYMCTL2_0 CLB_SYMCTL2_0 1                            // 0x42cf
DMA HWS_DEF_CLBRSLT0_0 CLB_CLBRSLT0_0 1                          // 0x4310
DMA HWS_DEF_FMU_PARAM0_0 CLB_FMU_PARAM0_0 1                      // 0x4411
DMA HWS_DEF_FMU_PARAM1_0 CLB_FMU_PARAM1_0 1                      // 0x8452
end CLB_init_from_GNVM

start ROM SpuRomFirstBootInit		// index: 7723, table index: 275
    DMAON 21 0                                                   // 0x5815
    DMA HWS_DEF_HRR6_0        HWS_HRR6_0    1                    // 0x41be
    DMA HWS_DEF_HRR5_0        HWS_HRR5_0    1                    // 0x417d
    DMA HWS_DEF_HRR4_0        HWS_HRR4_0    1                    // 0xc13c
    DMAON 21 5                                                   // 0x58b5
    DMA HWS_DEF_DRR0_SHADOW_0 HWS_DRR0_SHADOW_0 2                // 0x8f30
end SpuRomFirstBootInit

start ROM spuRomInitFromGnvm		// index: 7725, table index: 276
    SETBAR 2 0                                                   // 0x5e02
    STRI ISP_SWSPAD_00_0 0                                       // 0x8040 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_00_1 0                                       // 0x8041 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_00_2 0                                       // 0x8042 (swspad_00: 8:0 ,)
    STRI ISP_SWSPAD_00_3 0                                       // 0x8043 (swspad_00: 8:0 ,)
    DMAON 1 1                                                    // 0x5821
    DMA ISP_SWSPAD_00 ISP_SWSPAD_01 8                            // 0x7840
    DMA ISP_SWSPAD_00 ISP_SWSPAD_09 8                            // 0x7a40
    DMA ISP_SWSPAD_00 ISP_SWSPAD_17 8                            // 0x7c40
    DMA ISP_SWSPAD_00 ISP_SWSPAD_25 7                            // 0xf640
    DMAON 22 1                                                   // 0x5836
    DMA HWS_DEF_SWSPAD_19_0 ISP_SWSPAD_19_0 1                    // 0x44c4
    DMA HWS_DEF_SWSPAD_26_0 ISP_SWSPAD_26_0 1                    // 0xc685
    DMAON 21 5                                                   // 0x58b5
    DMA HWS_DEF_TIMERS_CTL_1_0 HWS_TIMERS_CTL_1_0 1              // 0xc169
    DMAON 22 5                                                   // 0x58b6
    DMA HWS_DEF_RADIO_WS_CONTEXT_0_0 HWS_RADIO_WS_CONTEXT_0_0 1   // 0x4193
    DMA HWS_DEF_RADIO_WS_CONTEXT_1_0 HWS_RADIO_WS_CONTEXT_1_0 1   // 0x41d4
    DMA HWS_DEF_RADIO_DYN_CLB_CONTEXT_0 HWS_RADIO_DYN_CLB_CONTEXT_0 1   // 0x4215
    DMA HWS_DEF_RADIO_TEMP_LOOP_CONTEXT_0 HWS_RADIO_TEMP_LOOP_CONTEXT_0 1   // 0x4256
    DMA HWS_DEF_PGXSDATA_1_0 HWS_PGXSDATA_1_0 1                  // 0x43d8
    DMA HWS_DEF_PGXSDATA_2_0 HWS_PGXSDATA_2_0 1                  // 0x4419
    DMA HWS_DEF_PGXSDATA_3_0 HWS_PGXSDATA_3_0 1                  // 0x445a
    DMA HWS_DEF_PGXSDATA_0_0 HWS_PGXSDATA_0_0 1                  // 0xc397
    DMAON 21 5                                                   // 0x58b5
    DMA HWS_DEF_PGXDID_0 HWS_PGXDID_0 1                          // 0x44aa
    DMA HWS_DEF_PGXDDATAL0_0 HWS_PGXDDATAL0_0 1                  // 0x452b
    DMA HWS_DEF_PGXDDATAL1_0 HWS_PGXDDATAL1_0 1                  // 0x456c
    DMA HWS_DEF_PGXDDATAL2_0 HWS_PGXDDATAL2_0 1                  // 0x45ad
    DMA HWS_DEF_PGXDDATAL3_0 HWS_PGXDDATAL3_0 1                  // 0x45ee
    DMA HWS_DEF_PGXSENSDATA_0 HWS_PGXSENSDATA_0 1                // 0x862f
    AND R0 R0 R0                                                 // 0x0000
end spuRomInitFromGnvm

start ROM SpuRomSetWuParamsForTestModeWU		// index: 7733, table index: 277
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR1_3 R1                                            // 0x54c7 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    ANDI R1 0x3 R1                                               // 0x7207
    ORI R1 0x30 R1                                               // 0x7661
    STR HWS_HRR1_3 R1                                            // 0x56c7 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    LDR HWS_HRR2_1 R1                                            // 0x54c9 (hrr_envdet_rise_pattern: 5:3 ,hrr_envdet_meas_cond_sel: 1:2 ,hrr_hws_pg_rstn_delay: 1:1 ,hrr_vdd_dig_2_vdd_adb_dis: 1:0 ,)
    ANDI R1 0x7 R1                                               // 0x720f
    ORI R1 0x78 R1                                               // 0x76f1
    STR HWS_HRR2_1 R1                                            // 0x56c9 (hrr_envdet_rise_pattern: 5:3 ,hrr_envdet_meas_cond_sel: 1:2 ,hrr_hws_pg_rstn_delay: 1:1 ,hrr_vdd_dig_2_vdd_adb_dis: 1:0 ,)
    LDR HWS_HRR2_2 R1                                            // 0x54ca (hrr_envdet_fall_pattern: 3:5 ,hrr_envdet_rise_pattern_mask: 5:0 ,)
    ANDI R1 0xe0 R1                                              // 0x73c1
    ORI R1 0xf R1                                                // 0x761f
    STR HWS_HRR2_2 R1                                            // 0x56ca (hrr_envdet_fall_pattern: 3:5 ,hrr_envdet_rise_pattern_mask: 5:0 ,)
    REG2 R1 0xe0                                                 // 0x5dc1
    SETCLR 1 R1 HWS_HRR2_2                                       // 0x6b2b (hrr_envdet_fall_pattern: 3:5 ,hrr_envdet_rise_pattern_mask: 5:0 ,)
    REG2 R1 0x3                                                  // 0x5c07
    SETCLR 1 R1 HWS_HRR2_3                                       // 0x6b2f (hrr_envdet_1st_ch_sweep_en: 1:7 ,hrr_envdet_fall_pattern_mask: 5:2 ,hrr_envdet_fall_pattern: 5:0 ,)
    LDR HWS_HRR2_3 R1                                            // 0x54cb (hrr_envdet_1st_ch_sweep_en: 1:7 ,hrr_envdet_fall_pattern_mask: 5:2 ,hrr_envdet_fall_pattern: 5:0 ,)
    ANDI R1 0x83 R1                                              // 0x7307
    ORI R1 0x1c R1                                               // 0x7639
    STR HWS_HRR2_3 R1                                            // 0x56cb (hrr_envdet_1st_ch_sweep_en: 1:7 ,hrr_envdet_fall_pattern_mask: 5:2 ,hrr_envdet_fall_pattern: 5:0 ,)
    LDR HWS_HRR1_0 R1                                            // 0x54c4 (hrr_lo_ch38_freq_word_c: 2:6 ,hrr_envdet_energy_duration_thr: 6:0 ,)
    ANDI R1 0xc0 R1                                              // 0x7381
    ORI R1 0x8 R1                                                // 0x7611
    STR HWS_HRR1_0 R1                                            // 0x56c4 (hrr_lo_ch38_freq_word_c: 2:6 ,hrr_envdet_energy_duration_thr: 6:0 ,)
    LDR HWS_HRR0_3 R1                                            // 0x54c3 (hrr_vdd_dig_2_vdd_aon_dis: 1:7 ,hrr_envdet_silent_duration_thr: 6:1 ,hrr_envdet_pg_en_delay: 5:0 ,)
    ANDI R1 0x81 R1                                              // 0x7303
    ORI R1 0x10 R1                                               // 0x7621
    STR HWS_HRR0_3 R1                                            // 0x56c3 (hrr_vdd_dig_2_vdd_aon_dis: 1:7 ,hrr_envdet_silent_duration_thr: 6:1 ,hrr_envdet_pg_en_delay: 5:0 ,)
       REG2 R1 0x4                                               // 0x5c09
       SETCLR 0 R1 HWS_HRR2_1                                    // 0x2b26 (hrr_envdet_rise_pattern: 5:3 ,hrr_envdet_meas_cond_sel: 1:2 ,hrr_hws_pg_rstn_delay: 1:1 ,hrr_vdd_dig_2_vdd_adb_dis: 1:0 ,)
       AND R0 R0 R0                                              // 0x0000
end SpuRomSetWuParamsForTestModeWU

start ROM SpuRomSetAueMeasTimeTo2		// index: 7741, table index: 278
    SETBAR 0 4                                                   // 0x5e40
    LDR CLB_MSRCTL0_0 R1                                         // 0x548c (Reserved_11_6: 2:6 ,measure_fail_th_l: 2:4 ,measure_fail_en: 1:3 ,aux_measure_time_th: 3:0 ,)
    ANDI R1 0xf8 R1                                              // 0x73f1
    ORI R1 0x2 R1                                                // 0x7605
    STR CLB_MSRCTL0_0 R1                                         // 0x168c (Reserved_11_6: 2:6 ,measure_fail_th_l: 2:4 ,measure_fail_en: 1:3 ,aux_measure_time_th: 3:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomSetAueMeasTimeTo2

start ROM SpuRomTestModeSetWuState12		// index: 7743, table index: 279
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR1_3 R1                                            // 0x54c7 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    ANDI R1 0x3 R1                                               // 0x7207
    ORI R1 0x48 R1                                               // 0x7691
    STR HWS_HRR1_3 R1                                            // 0x16c7 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomTestModeSetWuState12

start ROM SpuRomTestModeSetWuState14		// index: 7745, table index: 280
    SETBAR 0 0                                                   // 0x5e00
    LDR HWS_HRR1_3 R1                                            // 0x54c7 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    ANDI R1 0x3 R1                                               // 0x7207
    ORI R1 0x50 R1                                               // 0x76a1
    STR HWS_HRR1_3 R1                                            // 0x16c7 (hrr_envdet_wu_state: 6:2 ,hrr_envdet_bbcomp_offset: 5:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomTestModeSetWuState14

start ROM SpuRomForceReset		// index: 7747, table index: 281
    REG2 R1 0x1                                                  // 0x5c03
    SETBAR 0 2                                                   // 0x5e20
    SETCLR 0 R1 HWS_AWDT_CTL_1                                   // 0x2a96 (Reserved_15_9: 7:1 ,rgu_force_hard_awdt: 1:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomForceReset

start ROM SpuRomDisableSoftAWDT		// index: 7748, table index: 282
    REG2 R1 0xc0                                                 // 0x5d81
    SETBAR 0 0                                                   // 0x5e00
    SETCLR 1 R1 HWS_HRR7_3                                       // 0x2b7f (hrr_awdt_soft_th: 2:6 ,hrr_awdt_hard_th: 2:4 ,hrr_hws_hrr_state: 2:2 ,hrr_net_rrt_sel: 1:1 ,hrr_rrt_rd_cntr: 8:0 ,)
    AND R0 R0 R0                                                 // 0x0000
end SpuRomDisableSoftAWDT

start ROM SpuRomHwsRegistersInitFromGnvm		// index: 7749, table index: 283
DMAON 21 5                                                       // 0x58b5
DMA HWS_DEF_TIMERS_CTL_1 HWS_TIMERS_CTL_1_0 5                    // 0xe169
DMAON 22 5                                                       // 0x58b6
DMA HWS_DEF_PGXSDATA_0 HWS_PGXSDATA_0_0 5                        // 0xe397
DMAON 21 5                                                       // 0x58b5
DMA HWS_DEF_PGXDDATAL0 HWS_PGXDDATAL0_0 5                        // 0x652b
DMA HWS_DEF_DRR0_SHADOW HWS_DRR0_SHADOW_0 2                      // 0xcf30
DMAON 21 6                                                       // 0x58d5
DMA HWS_DEF_RC_SENS_HWS_STATIC_0 HWS_RC_SENS_HWS_STATIC_0_0 3    // 0x53b2
DMA HWS_DEF_PGXEADATA0 HWS_PGXEADATA0_0 3                        // 0x9575
end SpuRomHwsRegistersInitFromGnvm

start ROM SpuRomHwsHrrInitFromGnvm		// index: 7752, table index: 284
DMAON 21 0                                                       // 0x5815
DMA HWS_DEF_HRR0 HWS_HRR0_0 8                                    // 0xf838
DMAON 22 0                                                       // 0x5816
DMA HWS_DEF_HRR8 HWS_HRR8_0 3                                    // 0x9200
end SpuRomHwsHrrInitFromGnvm

start ROM SpuRomIspSrrInitFromGnvm		// index: 7753, table index: 285
DMAON 22 1                                                       // 0x5836
DMA HWS_DEF_SWSPAD_19 ISP_SWSPAD_19_0 1                          // 0x44c4
DMA HWS_DEF_SWSPAD_26 ISP_SWSPAD_26_0 1                          // 0x8685
AND R0 R0 R0                                                     // 0x0000
end SpuRomIspSrrInitFromGnvm

start ROM SpuRomAuxMeasAndCalibOverlayInitFromGnvm		// index: 7754, table index: 286
DMAON 21 1                                                       // 0x5835
DMA HWS_DEF_AUX_MEAS_AND_CALIB_OVERLAY_0 ISP_SWSPAD_08 2         // 0x8a0c
end SpuRomAuxMeasAndCalibOverlayInitFromGnvm

start ROM SpuRomSecAndTxOverlayInitFromGnvm		// index: 7755, table index: 287
DMAON 21 1                                                       // 0x5835
DMA HWS_DEF_SEC_AND_TX_OVERLAY_0 ISP_SWSPAD_08 2                 // 0x8a0e
end SpuRomSecAndTxOverlayInitFromGnvm

start ROM SpuRomFlowManagerAndPowerupOverlayInitFromGnvm		// index: 7756, table index: 288
DMAON 21 1                                                       // 0x5835
DMA HWS_DEF_FLOW_MANAGER_AND_POWERUP_OVERLAY_0 ISP_SWSPAD_06 4   // 0x9990
end SpuRomFlowManagerAndPowerupOverlayInitFromGnvm

start ROM SpuRomPowerGearingOverlayInitFromGnvm		// index: 7757, table index: 289
DMAON 21 1                                                       // 0x5835
DMA HWS_DEF_POWER_GEARING_OVERLAY_0 ISP_SWSPAD_08 2              // 0x8a14
end SpuRomPowerGearingOverlayInitFromGnvm

start ROM SpuRomLcAuxIdacCalibOverlayInitFromGnvm		// index: 7758, table index: 290
DMAON 21 1                                                       // 0x5835
DMA HWS_DEF_LCAUX_IDAC_CALIB_OVERLAY_0 ISP_SWSPAD_08 2           // 0x8a16
end SpuRomLcAuxIdacCalibOverlayInitFromGnvm

start ROM SpuRomWkupThresholdCalibOverlayInitFromGnvm		// index: 7759, table index: 291
DMAON 21 1                                                       // 0x5835
DMA HWS_DEF_WKUP_THRESHOLD_CALIB_OVERLAY_0 ISP_SWSPAD_08 2       // 0x8a18
end SpuRomWkupThresholdCalibOverlayInitFromGnvm

start ROM SpuRomLoVrefVbpCalibOverlayInitFromGnvm		// index: 7760, table index: 292
DMAON 21 1                                                       // 0x5835
DMA HWS_DEF_LO_VREF_VBP_CALIB_OVERLAY_0 ISP_SWSPAD_08 2          // 0x8a1a
end SpuRomLoVrefVbpCalibOverlayInitFromGnvm

start ROM SpuRomDfCalibOverlayInitFromGnvm		// index: 7761, table index: 293
DMAON 21 1                                                       // 0x5835
DMA HWS_DEF_DF_CALIB_OVERLAY_0 ISP_SWSPAD_08 2                   // 0x8a1c
end SpuRomDfCalibOverlayInitFromGnvm

start ROM SpuRomSensingOverlayInitFromGnvm		// index: 7762, table index: 294
DMAON 21 1                                                       // 0x5835
DMA HWS_DEF_SENSING_OVERLAY_0 ISP_SWSPAD_08 2                    // 0x8a1e
end SpuRomSensingOverlayInitFromGnvm

start ROM SpuRomTempPolyCoeffOverlayInitFromGnvm		// index: 7763, table index: 295
DMAON 21 1                                                       // 0x5835
DMA HWS_DEF_TEMP_POLY_COEFF_OVERLAY_0 ISP_SWSPAD_06 2            // 0x89a0
end SpuRomTempPolyCoeffOverlayInitFromGnvm

start ROM SpuRomAuxMeasVsTempCoeffOverlayInitFromGnvm		// index: 7764, table index: 296
DMAON 21 1                                                       // 0x5835
DMA HWS_DEF_AUX_MEAS_VS_TEMP_COEFF_OVERLAY_0 ISP_SWSPAD_06 2     // 0x89a2
end SpuRomAuxMeasVsTempCoeffOverlayInitFromGnvm

start ROM SpuRomTestModeOverlayInitFromGnvm		// index: 7765, table index: 297
DMAON 21 1                                                       // 0x5835
DMA HWS_DEF_TEST_MODE_OVERLAY_0 ISP_SWSPAD_08 2                  // 0x8a24
end SpuRomTestModeOverlayInitFromGnvm

start ROM SpuRomSystemClksMeasOverlayInitFromGnvm		// index: 7766, table index: 298
DMAON 21 1                                                       // 0x5835
DMA HWS_DEF_SYSTEM_CLKS_MEAS_OVERLAY_0 ISP_SWSPAD_08 2           // 0x8a26
end SpuRomSystemClksMeasOverlayInitFromGnvm

start ROM SpuRomClbRegistersInitFromGnvm		// index: 7767, table index: 299
DMAON 22 8                                                       // 0x5916
DMA HWS_DEF_CLB_CONTEXT0 CLB_CLB_CONTEXT0_0 8                    // 0x7886
DMA HWS_DEF_SYMCTL1 CLB_SYMCTL1_0 3                              // 0x528e
DMA HWS_DEF_FMU_PARAM0 CLB_FMU_PARAM0_0 2                        // 0x8c11
end SpuRomClbRegistersInitFromGnvm

